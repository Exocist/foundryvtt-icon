{"version":3,"file":"index.js","sources":["src/consts.js","src/util/paths.js","src/models/base.js","src/models/items/item.js","src/models/items/job.js","src/models/actors/actor.js","src/models/actors/foe.js","src/models/actors/player.js","src/models/actors/summon.js","src/documents/actor.js","src/documents/item.js","src/documents/token.js","src/config/documents.js","src/util/misc.js","src/models/items/ability.js","src/models/items/bond.js","src/models/items/bond_power.js","src/models/items/relic.js","src/config/models.js","src/config/settings.js","node_modules/svelte/src/runtime/internal/utils.js","node_modules/svelte/src/runtime/internal/environment.js","node_modules/svelte/src/runtime/internal/loop.js","node_modules/svelte/src/runtime/internal/dom.js","node_modules/svelte/src/runtime/internal/style_manager.js","node_modules/svelte/src/runtime/internal/lifecycle.js","node_modules/svelte/src/runtime/internal/scheduler.js","node_modules/svelte/src/runtime/internal/transitions.js","node_modules/svelte/src/runtime/internal/await_block.js","node_modules/svelte/src/runtime/internal/each.js","node_modules/svelte/src/runtime/internal/spread.js","node_modules/svelte/src/runtime/internal/Component.js","node_modules/svelte/src/shared/version.js","node_modules/svelte/src/runtime/store/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/writable-derived/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/util/object/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/util/store/index.js","node_modules/svelte/src/runtime/easing/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/math/interpolate/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/util/browser/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/math/gl-matrix/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/util/animate/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/math/util/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/position/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/util/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/state-app/ApplicationState.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/state-svelte/GetSvelteData.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/web-storage/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/state-reactive/SvelteReactive.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/util/applicationShellContract.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/util/isApplicationShell.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/util/loadSvelteConfig.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/TJSAppIndex.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/SvelteApplication.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/cssVariables.js","node_modules/svelte/src/runtime/internal/disclose-version/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/util/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/action/dom/index.js","node_modules/svelte/src/runtime/transition/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/transition/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/TJSGlassPane.svelte","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/AppShellContextInternal.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/helper/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/TJSHeaderButton.svelte","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/TJSApplicationHeader.svelte","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/TJSFocusWrap.svelte","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/ResizableHandle.svelte","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/ApplicationShell.svelte","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/TJSApplicationShell.svelte","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/dialog/DialogContent.svelte","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/dialog/DialogShell.svelte","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/util/async/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/TJSDialogData.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/TJSDialog.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/reducer/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/fvtt/document/index.js","src/view/actions/update.js","src/view/components/generic/Tabs.svelte","src/view/components/Portrait.svelte","src/util/dragdrop.js","src/view/actions/util.js","src/view/actions/drop.js","src/util/nlp.js","src/view/components/generic/dice/SmallRoll.svelte","src/view/components/generic/NodeRenderer.svelte","src/view/components/generic/RichTextDisplay.svelte","src/view/components/combat/ActorUUIDReference.svelte","src/view/components/combat/AbilityDetail.svelte","src/view/apps/BoonBaneApplication.js","src/view/actions/drag.js","src/view/components/combat/CombatDisplay.svelte","src/view/components/combat/IndividualStatusDisplay.svelte","src/view/components/combat/StatusDisplay.svelte","src/view/components/combat/CombatHud.svelte","src/view/components/generic/BoundedNumberDisplay.svelte","src/view/components/combat/StatsDisplay.svelte","src/view/components/generic/Clock.svelte","src/view/components/generic/DocClock.svelte","src/view/sheets/player/Progression.svelte","src/view/components/generic/SegBar.svelte","src/view/apps/FitdRollShell.svelte","src/view/apps/FitdRollDialog.js","src/view/components/ActionRating.svelte","src/view/components/preview/PreviewBondPower.svelte","src/view/sheets/player/Narrative.svelte","src/util/stores.js","src/view/sheets/PlayerSheet.svelte","node_modules/@typhonjs-fvtt/svelte-standard/_dist/fvtt/index.js","node_modules/@typhonjs-fvtt/svelte-standard/_dist/component/internal/cssVariables.js","node_modules/@typhonjs-fvtt/svelte-standard/_dist/prosemirror/index.js","node_modules/@typhonjs-fvtt/svelte-standard/_dist/prosemirror/plugins/index.js","node_modules/@typhonjs-fvtt/svelte-standard/_dist/component/standard/editor/prosemirror/TJSProseMirror.svelte","node_modules/@typhonjs-fvtt/svelte-standard/_dist/component/standard/index.js","src/view/components/generic/ProseMirrorEditor.svelte","src/view/sheets/FoeSheet.svelte","src/view/components/generic/EditableDocArray.svelte","src/view/sheets/SummonSheet.svelte","src/view/sheets/AbilitySheet.svelte","src/view/sheets/BondSheet.svelte","src/view/sheets/JobSheet.svelte","src/view/sheets/BondPowerSheet.svelte","src/view/sheets/RelicSheet.svelte","src/view/sheets/DocSheetAppShell.svelte","src/view/sheets/DocSheetApp.js","src/config/sheets.js","src/view/apps/BasicAppShell.svelte","src/view/apps/BasicApplication.js","src/view/chat/AbilityRollMessage.svelte","src/view/components/combat/HarmControl.svelte","src/view/apps/HarmShell.svelte","src/view/apps/HarmApplication.js","src/util/socket.js","src/util/harm.js","src/view/components/combat/HarmRecord.svelte","src/view/components/combat/HarmManifestEntry.svelte","src/view/chat/HarmManifestMessage.svelte","src/view/chat/NarrativeRollMessage.svelte","src/config/messages.js","src/config/statuses.js","src/view/apps/WelcomeAppShell.svelte","src/view/apps/WelcomeApplication.js","src/index.js"],"sourcesContent":["// A namespace thingy for storing ICON system specific constants\nexport const ICON = {\n    settings: {\n        // Internal state\n        migration: \"migration_version\",\n        dsn_setup: \"dice_so_nice_setup\",\n        welcome: \"welcome_message\",\n\n        // Configurable\n        show_foe_hp: \"show_foe_hp\",\n    },\n    flags: {\n        swb_needs_commit: \"swb_needs_commit\",\n        status_ongoing: \"status_ongoing\"\n    },\n    css: {\n        hp: \"fas fa-heart\",\n        damage: \"fas fa-burst\",\n        piercing: \"fas fa-shield-slash\",\n        divine: \"fas fa-stars\",\n        vigor: \"fas fa-shield-plus\"\n    },\n};\n\n// CSS icons for various concepts","\n/**\n * Helper function to format a dotpath to not have any square brackets, instead using pure dot notation\n *\n * @param {string} path The path to format\n *\n * @returns {string} The same path, but with all square brackets replaced with dots\n */\nexport function formatDotpath(path) {\n  return path.replace(/\\[/g, \".\").replace(/]/g, \"\");\n}\n\n/**\n * An object providing context on the path and result relative to the most deploy nested document we encounter\n *\n * @typedef {object} PathResolutionStep \n *\n * @property {string | null} pathlet The individual x, y, or z substrings of an x.y.z path\n *\n * @property {any} val The value reached at a specific x, y, or z of an x.y.z path\n */\n\n/**\n * \n * Helper function to get arbitrarily deep array references\n * Returns every item along the path, starting with the object itself\n * Any failed pathlet resolutions will still be emitted, but as an undefined\n * An empty string resolved in this way will simply return root.\n * \n * @param {object} obj The object to drill down into\n *\n * @param {string} path The dotpath to use\n *\n * @returns {Array<PathResolutionStep>} An array of the steps we took resolving the path\n */\nexport function stepwiseResolveDotpath(obj, path) {\n  const pathlets = formatDotpath(path).split(\".\");\n\n  // Resolve each key, starting with root\n  const result = [\n    {\n      pathlet: null, \n      val: obj\n    },\n  ];\n\n  for (const pathlet of pathlets) {\n    obj = obj?.[pathlet];\n    result.push({\n      pathlet,\n      val: obj,\n    });\n  }\n  return result;\n}\n\n/**\n * An object providing context on the path and result relative to the most deploy nested document we encounter\n *\n * @typedef {object} DrilldownDocumentResult \n *\n * @property {IconActor | IconItem} sub_doc The last document traversed while following path from root_doc. Usually just root_doc\n *\n * @property {string} sub_path Path from sub_doc to terminus\n *\n * @property {any} terminus The actual value pointed to by the initial path query\n */\n\n/**\n * A variant of resolve_dotpath that provides more context about documents we encounter along the way.\n *\n * @param {IconActor | IconItem} root_doc The document we are starting at\n *\n * @param {string} path The path to resolve\n *\n * @returns {DrilldownDocumentResult} Result\n */\nexport function drilldownDocument(root_doc, path) {\n  const steps = stepwiseResolveDotpath(root_doc, path);\n  for (let i = steps.length - 1; i >= 0; i--) {\n    // Walk it back till first document\n    const step = steps[i];\n    if (step.val instanceof foundry.abstract.Document) {\n      // Recombine rest of path\n      const sub_path = steps\n        .slice(i + 1)\n        .map((v) => v.pathlet)\n        .join(\".\");\n      const sub_doc = step.val;\n      return { sub_doc, sub_path, terminus: steps[steps.length - 1].val };\n    }\n  }\n  throw new Error(\"Drilldown document must have at least one document in its path\");\n}\n\n/**\n * @typedef {object} ResolveDotpathOptions\n *\n * @property {number} [shorten_by] If provided, skip the last <shorten_by> path items. Useful for getting e.x. the containing array of an item\n */\n\n/**\n * Helper function to get arbitrarily deep array references\n * Any failed resolutions will still be emitted, but as a dedicated symbol\n *\n * @param {object} obj The object to drill down into\n *\n * @param {string} path The dotpath to follow\n *\n * @param {any} [default_=undefined] The default value to return if the dotpath is not reached.\n *\n * @param {ResolveDotpathOptions} [opts] Additional arguments\n *\n * @returns {any} Value at end of path, or default value\n */\nexport function resolveDotpath(obj, path, default_ = undefined, opts = null) {\n  const evaluated = stepwiseResolveDotpath(obj, path);\n  let item;\n\n  // Get the last item, or one even further back if shorten-by provided\n  if (opts?.shorten_by) {\n    item = evaluated[evaluated.length - 1 - opts.shorten_by];\n  } else {\n    item = evaluated[evaluated.length - 1];\n  }\n  return item.val === undefined ? default_ : item.val;\n}","import { formatDotpath } from \"../util/paths\";\n\n// Establish a shorthand\nexport const fields = foundry.data.fields;\n\nexport class IconDataModel extends foundry.abstract.DataModel {\n  // To enable cool shit\n\n  /**\n   * Create a full update payload, e.g. to preserve arrays\n   *\n   * @param {object} update_data the update data to apply\n   *\n   * @returns {object} update_data augmented with fixed arrays etc\n   */\n  fullUpdateData(update_data) {\n    const system = foundry.utils.duplicate(this._source);\n    return fancyMerge({ system }, update_data);\n  }\n}\n\n/**\n * Merge data, except it handles arrays in a more sane way than base mergeObject\n *\n * @param {object} target Object to modify \n *\n * @param {object} source Object to pull from\n *\n * @returns {object} target\n */\nexport function fancyMerge(target, source) {\n  if (target === null || target === undefined) {\n    throw new Error(\"Cannot merge with null or undefined - try again\");\n  }\n  if (\n    typeof target === \"number\" ||\n    typeof target === \"string\" ||\n    typeof target === \"boolean\"\n  ) {\n    return source; // Handle in parent\n  }\n  for (let [k, v] of Object.entries(source)) {\n    // Prepare for dotpath traversal\n    k = formatDotpath(k);\n\n    // Detect deletes\n    const del = k.startsWith(\"-=\");\n    if (del) {\n      k = k.slice(2);\n    }\n\n    // Detect dots\n    const di = k.indexOf(\".\");\n    if (di != -1) {\n      if (del) {\n        throw new Error(\"'-=' in dotpath must go at penultimate pathlet. E.x. 'system.whatever.-=val'\");\n      }\n\n      // Dotpath - go recursive on that key\n      const fore = k.slice(0, di);\n      const aft = k.slice(di + 1);\n\n      // Find existing value and branch on its existence\n      const prior = target[fore];\n      if (prior) {\n        // Recursive\n        target[fore] = fancyMerge(prior, { [aft]: v });\n      } else {\n        // New value at this location\n        target[fore] = { [aft]: v };\n      }\n    } else {\n      // Not a dotpath - assign/delete directly. Fairly trivial\n      if (del) {\n        if (Array.isArray(target)) {\n          // Splice it\n          target.splice(parseInt(k), 1);\n        } else if (typeof target === \"object\") {\n          // Delete it\n          delete target[k];\n        } else {\n          // Unhandled type or nonexistant val\n          console.warn(\"'-=' in update may only target Object or Array items\");\n        }\n      } else {\n        // Just assign it - simple as\n        target[k] = v;\n      }\n    }\n  }\n  return target;\n}\n\n// Use this to represent a field that is effectively just a number, but should present as a min/max/value field in expanded `system` data\n// This is 10% so we can show them with bars, and 90% because usually the max is computed and we don't want to confuse anyone\n// If options.no_upper_bound is true, then doesn't set a maximum \nexport class FakeBoundedNumberField extends foundry.data.fields.NumberField {\n  constructor(options = {}) {\n    // Handle no upper bound case\n    if (options.no_upper_bound) {\n      options = foundry.utils.duplicate(options);\n      options.fake_max = options.max;\n      delete options.max;\n    }\n    super(options);\n  }\n  /** @override */\n  initialize(value, model) {\n    // Expand to a somewhat reasonable range. `prepareData` functions should handle the rest\n    return {\n      min: this.options.min ?? 0,\n      max: this.options.max ?? this.options.fake_max ?? 0,\n      value: value ?? 0,\n    };\n  }\n\n  /** @override */\n  _cast(value) {\n    if (typeof value === \"object\") {\n      value = value.value ?? 0;\n    }\n    return super._cast(value);\n  }\n}\n\n/**\n * For representing clocks\n * Takes an option \"size\" that, if provided, will fix the size of the clock to that size. Otherwise size is arbitrary\n */\nexport class ClockField extends foundry.data.fields.SchemaField {\n  constructor(options = {}) {\n    const initial_size = options.size ?? 4;\n    super({\n      active: new fields.BooleanField({ initial: false }),\n      name: new fields.StringField({ initial: `New ${initial_size} Clock` }),\n      size: new fields.NumberField({ nullable: false, integer: true, min: 0, initial: initial_size }),\n      value: new fields.NumberField({ nullable: false, integer: true, min: 0, initial: 0 }),\n    }, options);\n  }\n\n  /** @override */\n  _cast(value) {\n    if (typeof value == \"number\") {\n      value = { value };\n    }\n    value = super._cast(value);\n    if (this.options.size) {\n      value.size = this.options.size;\n    }\n    return value;\n  }\n\n  /** @override */\n  _validateModel(data, options = {}) {\n    super._validateType(data, options);\n    if (data.size < data.value) {\n      throw new Error(\"Clock value has exceeded its size.\");\n    }\n  }\n}\n\n/**\n * A field mixin generator that \"fixes\" attributes of another SchemaField\n * For representing fixed clocks, like xp.\n *\n * @param {any} preset The keys to override in any initialized data\n *\n * @returns {object} A mixin\n */\nexport function FixedFieldMixin(preset) {\n  return {\n    _initialze(value, model) {\n      super._initialize(fancyMerge(value, preset), model);\n    }\n  };\n}\n\nexport class ChecklistField extends fields.SchemaField {\n  /** \n   * @override\n   * @param {Array<string>} keys An Enum or Object, the Object.values of which will be used for \n   */\n  constructor(keys, options = {}) {\n    const scaffold = {};\n    for (const val of keys) {\n      scaffold[val] = new fields.BooleanField({ initial: true });\n    }\n    super(scaffold, options);\n  }\n}\n\n/**  \n * Handles an additional \"length\" option, and mandates that it remain at that length\n * If \"overflow\" option = truthy, then just forces there to be AT LEAST length\n */\nexport class ControlledLengthArrayField extends fields.ArrayField {\n  // Constructor demands options\n  constructor(element, options) {\n    super(element, options);\n    if (!Number.isInteger(options.length)) {\nthrow new TypeError(\"ControlledLengthArrayField requires an integer 'length' option!\");\n}\n  }\n\n  _cast(value) {\n    value = super._cast(value);\n    if (!Array.isArray(value)) {\nreturn value;\n} // Give up early\n    // Extend or contract as appropriate\n    while (value.length < this.options.length) {\n      let new_elt = typeof this.element.initial == \"function\" ? this.element.initial() : this.element.initial;\n      value.push(foundry.utils.duplicate(new_elt));\n    }\n    if (!this.options.overflow && value.length > this.options.length) {\nvalue = value.slice(0, this.options.length);\n}\n    return value;\n  }\n}\n\n/**\n * Calls options.cast on every value provided to this. \n * Options.cast should be idempotent.\n */\nexport class CastingStringField extends fields.StringField {\n  _cast(value) {\n    value = super._cast(value);\n    if (typeof this.options.cast === \"function\") {\n      value = this.options.cast(value);\n    }\n    return value;\n  }\n}\n\n/**\n * Capitalizes the first letter of each word in the provided string\n * \n * @param {string} text Base text\n *\n * @returns text as title case\n */\nexport function titleCaseString(text) {\n  return text\n    .split(' ')\n    .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n    .join(' ');\n}","import { IconDataModel } from \"../base\";\n\nexport class ItemModel extends IconDataModel {\n    // Some schema elements are consistent across all actor types. Define them here\n    static defineSchema() {\n        return {\n            \n        };\n    }\n}","import { CastingStringField } from \"../base\";\nimport { ItemModel } from \"./item\";\n\n// For other's reference\nexport const GENERIC_COLORS = [\"Red\", \"Yellow\", \"Blue\", \"Green\", \"Special\"];\nexport const FOE_COLORS = [\"Heavy\", \"Skirmisher\", \"Artillery\", \"Leader\", \"Special\"];\nexport const PLAYER_COLORS = [\"Stalwart\", \"Vagabond\", \"Wright\", \"Mendicant\", \"Special\"];\n\n\nexport const COLOR_FIELD = () => new CastingStringField({\n    initial: \"Special\",\n    choices: [\n        \"Red\",\n        \"Yellow\",\n        \"Blue\",\n        \"Green\",\n        \"Special\"\n    ],\n    cast: (s) => {\n        let remapped = {\n            red: \"Red\",\n            heavy: \"Red\",\n            stalwart: \"Red\",\n\n            yellow: \"Yellow\",\n            skirmisher: \"Yellow\",\n            vagabond: \"Yellow\",\n\n            blue: \"Blue\",\n            artillery: \"Blue\",\n            wright: \"Blue\",\n\n            green: \"Green\",\n            leader: \"Green\",\n            mendicant: \"Green\",\n        }[s.toLowerCase()] || \"Special\";\n        return remapped;\n    }\n});\nexport class ClassField extends foundry.data.fields.SchemaField {\n    constructor(options = {}) {\n        super({\n            color: COLOR_FIELD(),\n            vitality: new foundry.data.fields.NumberField({ nullable: false, integer: true, initial: 0, min: 0 }),\n            speed: new foundry.data.fields.NumberField({ nullable: false, integer: true, initial: 4, min: 0 }),\n            dash: new foundry.data.fields.NumberField({ nullable: false, integer: true, initial: 2, min: 0 }),\n            defense: new foundry.data.fields.NumberField({ nullable: false, integer: true, initial: 0, min: 0 }),\n            fray_damage: new foundry.data.fields.NumberField({ nullable: false, integer: true, initial: 1, min: 0 }),\n            damage_die: new foundry.data.fields.NumberField({ nullable: false, integer: true, initial: 6, min: 4 }),\n            armor: new foundry.data.fields.NumberField({ nullable: false, integer: true, initial: 0, min: 0 }), // Technically comes from a trait, but more easily defined here\n        }, options);\n    }\n\n    // Populate some extra fields\n    initialize(value, model, options = {}) {\n        let rv = super.initialize(value, model, options);\n        let name_index = GENERIC_COLORS.indexOf(rv.color);\n        rv.player_class_name = PLAYER_COLORS[name_index];\n        rv.foe_class_name = FOE_COLORS[name_index];\n\n        return rv;\n    }\n}\n\nexport class JobModel extends ItemModel {\n    static defineSchema() {\n        return {\n            ...super.defineSchema(),\n            description: new foundry.data.fields.HTMLField(),\n\n            // We just build these directly into jobs\n            class: new ClassField(),\n\n            // Abilities\n            // An array of compendium uuids of unlockable abilities\n            // Ideally you don't edit this, and only show it when in a special unlock menu\n            abilities: new foundry.data.fields.ArrayField(new foundry.data.fields.StringField()),\n        };\n    }\n}\n","import { IconDataModel } from \"../base\";\n\nexport class ActorModel extends IconDataModel {\n    // Some schema elements are consistent across all actor types. Define them here\n    static defineSchema() {\n        return {\n            activations: new foundry.data.fields.NumberField({ nullable: false, integer: true, min: 0, initial: 1 }),\n            biography: new foundry.data.fields.HTMLField(),\n        };\n    }\n}","import { ClockField, FakeBoundedNumberField } from \"../base\";\nimport { ClassField } from \"../items/job\";\nimport { ActorModel } from \"./actor\";\n\nexport class ConditionsField extends foundry.data.fields.SchemaField {\n    constructor(options = {}) {\n        super({\n            // Disable unless is this special class type (legend, etc)\n            is_type: new foundry.data.fields.StringField({ nullable: true, initial: null }),\n            // Disable unless isnt this special class type (legend, etc)\n            isnt_type: new foundry.data.fields.StringField({ nullable: true, initial: null }),\n            // Disable unless above this chapter\n            above_chapter: new foundry.data.fields.ArrayField(new foundry.data.fields.StringField()),\n            // Disable unless below this chapter\n            below_chapter: new foundry.data.fields.ArrayField(new foundry.data.fields.StringField()),\n        }, options);\n    }\n}\n\n\nexport class FoeModel extends ActorModel {\n    static defineSchema() {\n        return {\n            ...super.defineSchema(),\n\n            // Tactics and description\n            description: new foundry.data.fields.HTMLField(),\n            setup: new foundry.data.fields.HTMLField(),\n\n            // Metadata\n            chapter: new foundry.data.fields.NumberField({ nullable: false, integer: true, initial: 1, min: 1, max: 3 }),\n            template: new foundry.data.fields.StringField({ initial: \"Normal\", choices: [\n                \"Normal\",\n                \"Elite\",\n                \"Mob\",\n                \"Legend\",\n            ] }),\n            faction: new foundry.data.fields.StringField({ initial: \"Folk\" }),\n\n            // Class is built directly into the foe\n            class: new ClassField(),\n            hp_multiplier: new foundry.data.fields.NumberField({ nullable: false, integer: true, initial: 4, min: 1 }),\n\n            // Mutable stats:\n            hp: new FakeBoundedNumberField(),\n            vigor: new FakeBoundedNumberField(),\n            activations: new FakeBoundedNumberField(),\n\n            // Misc\n            clocks: new foundry.data.fields.ArrayField(new ClockField())\n\n            // For legends\n        };\n    }\n\n    prepareDerivedData() {\n        // Initialize our fields\n        this.hp.max = this.class.vitality * this.hp_multiplier;\n        if (this._source.hp === null) {\n            this.hp.value = this.hp.max;\n        }\n        this.vigor.max = this.class.vitality;\n        this.bloodied = this.hp.value <= this.hp.max / 2;\n    }\n}\n","import { ClockField, FakeBoundedNumberField } from \"../base\";\nimport { ActorModel } from \"./actor\";\n\nconst fields = foundry.data.fields;\n\nconst actionField = () => new fields.NumberField({ nullable: false, integer: true, min: 0, max: 4, initial: 0 });\nconst actionPenaltyField = () => new fields.NumberField({ nullable: false, integer: true, min: 0, max: 4, initial: 0 });\n\nexport class PlayerModel extends ActorModel {\n    static defineSchema() {\n        return {\n            player_name: new fields.StringField(),\n            // Non combat\n            kin: new fields.StringField({ initial: \"Arken\" }),\n            culture: new fields.StringField({ initial: \"Arken\" }),\n            bond: new fields.StringField({ initial: \"Arkenlord\" }), // Eventually will be item\n            effort: new FakeBoundedNumberField({ min: 0, max: 3, initial: 0 }),\n            strain: new FakeBoundedNumberField({ min: 0, max: 5, initial: 0 }),\n            burdens: new fields.SchemaField({\n                c4: new ClockField({ size: 4 }, { initial: () => ({ name: \"4 Burden\" }) }),\n                c6: new ClockField({ size: 6 }, { initial: () => ({ name: \"6 Burden\" }) }),\n                c8: new ClockField({ size: 8 }, { initial: () => ({ name: \"8 Burden\" }) })\n            }),\n            ambitions: new fields.SchemaField({\n                c4: new ClockField({ size: 4 }, { initial: () => ({ name: \"4 Ambition\" }) }),\n                c6: new ClockField({ size: 6 }, { initial: () => ({ name: \"6 Ambition\" }) }),\n                c10: new ClockField({ size: 10 }, { initial: () => ({ name: \"10 Ambition\" }) })\n            }),\n\n            // Kit, gear & ideals come from items (ideals specifically from )\n\n            actions: new fields.SchemaField({\n                sneak: actionField(),\n                traverse: actionField(),\n                sense: actionField(),\n                study: actionField(),\n                charm: actionField(),\n                command: actionField(),\n                tinker: actionField(),\n                excel: actionField(),\n                smash: actionField(),\n                endure: actionField(),\n            }),\n            action_penalties: new fields.SchemaField({\n                sneak: actionPenaltyField(),\n                traverse: actionPenaltyField(),\n                sense: actionPenaltyField(),\n                study: actionPenaltyField(),\n                charm: actionPenaltyField(),\n                command: actionPenaltyField(),\n                tinker: actionPenaltyField(),\n                excel: actionPenaltyField(),\n                smash: actionPenaltyField(),\n                endure: actionPenaltyField(),\n            }),\n            xp: new FakeBoundedNumberField({ max: 15, no_upper_bound: true }),\n            dust: new FakeBoundedNumberField({ max: 8 }),\n            xp_tracker: new fields.SchemaField({\n                ideals: new ClockField({ size: 2 }),\n                challenges: new ClockField({ size: 2 }),\n                ambitions: new ClockField({ size: 3 }),\n                burdens: new ClockField({ size: 1 })\n            }),\n            level_choices: new fields.SchemaField({\n                four: new fields.SchemaField({\n                    combat: new fields.StringField({ choices: [\"job\", \"mastery\"], initial: \"job\" }),\n                    narrative: new fields.StringField({ choices: [\"actions\", \"power\"], initial: \"actions\" }),\n                }),\n                eight: new fields.SchemaField({\n                    combat: new fields.StringField({ choices: [\"job\", \"mastery\"], initial: \"job\" }),\n                    narrative: new fields.StringField({ choices: [\"actions\", \"power\"], initial: \"actions\" }),\n                }),\n            }),\n\n            // Combat\n            hp: new FakeBoundedNumberField({ nullable: false, initial: 0, min: 0 }),\n            vigor: new FakeBoundedNumberField({ nullable: false, initial: 0, min: 0, no_upper_bound: true }),\n            wounds: new FakeBoundedNumberField({ nullable: false, initial: 0, min: 0, max: 4 }),\n            aether: new fields.NumberField({ nullable: false, initial: 0, min: 0, max: 999 }),\n            resolve: new fields.NumberField({ nullable: false, initial: 0, min: 0, max: 999 }), // Personal resolve\n            combo: new fields.BooleanField({ initial: false }), // Combo token\n            level: new fields.NumberField({ nullable: false, min: 0, max: 9, initial: 0 }),\n        };\n    }\n\n    prepareBaseData() {\n    }\n\n    prepareDerivedData() {\n        // /////////////// Narrative:\n        // Initialize sane defaults in absence of hard-set values\n        for (let [k, v] of Object.entries(this.burdens)) {\n            if (this._source.burdens[k].name === `New ${k[1]} Clock`) {\n                this._source.burdens[k].name = `${v.size} Burden`;\n            }\n        }\n        for (let [k, v] of Object.entries(this.ambitions)) {\n            if (this._source.ambitions[k].name === `New ${k[1]} Clock`) {\n                this._source.ambitions[k].name = `${v.size} Ambition`;\n            }\n        }\n        this.bond = this.parent.items.find((i) => i.type === \"bond\");\n\n        // /////////////// Progression:\n        // Compute total points\n        // ap = Ability Points - Can be spent on abilities OR talents\n        // sap = Static AP - Can only be spent on abilities\n        // mp = Mastery Points - Can be spent on masteries\n        // jp = Job Points - Can be spent on jobs\n        // rp = Relic Points - How many relics you should have\n        // bp = Bond Points - How many bond powers you should have\n        // nap = Narrative Action Points - How many action pips you should have\n        // --- Validation\n        // ability_count = Total # of abilities. Should be >= sap\n        // ap_count = ability_count + total # of talents. Should be == sap + ap\n        // mastery_count = Total # of masteries. Should be == smp.\n        // job_count = Total # of jobs. Should be == jp\n        // relic_count = Total # of relics. Should be == rp\n        // action_count = Total # of action pips. Should be == nap\n        // bond_power_count = Total # of bond powers. Should be == bp\n\n        let budget = {\n            sap: 2, // Base for level zero\n            ap: 0,\n            mp: 0,\n            rp: 0,\n            jp: 0,\n            bp: 1, // Base for level zero\n            nap: 6 // Base for level zero\n        };\n        let spending = {\n            ability_count: 0,\n            ap_count: 0,\n            mastery_count: 0,\n            job_count: 0,\n            relic_count: 0,\n            action_count: 0,\n            bond_power_count: 0\n        };\n        this.progression = {\n            budget,\n            spending,\n            warnings: []\n        };\n\n        // Compute budget\n        let lc = this.level_choices;\n        switch (this.level) {\n            case 12:\n                budget.mp++;\n                budget.bp++;\n            case 11:\n                budget.ap++;\n                budget.nap++;\n            case 10:\n                budget.mp++;\n                budget.nap++;\n            case 9:\n                budget.rp++;\n                budget.nap++;\n            case 8:\n                if (lc?.eight?.combat === \"job\") {\n                    budget.jp++;\n                } else if (lc?.eight?.combat === \"mastery\") {\n                    budget.mp++;\n                }\n                if (lc?.eight?.narrative === \"actions\") {\n                    budget.nap += 2;\n                } else if (lc?.eight?.narrative === \"power\") {\n                    budget.bp++;\n                }\n            case 7:\n                budget.mp++;\n                budget.nap++;\n            case 6:\n                budget.rp++;\n                budget.bp++;\n            case 5:\n                budget.ap++;\n                budget.nap++;\n            case 4:\n                if (lc?.four?.combat === \"job\") {\n                    budget.jp++;\n                } else if (lc?.four?.combat === \"mastery\") {\n                    budget.mp++;\n                }\n                if (lc?.four?.narrative === \"actions\") {\n                    budget.nap += 2;\n                } else if (lc?.four?.narrative === \"power\") {\n                    budget.bp++;\n                }\n            case 3:\n                budget.mp++;\n                budget.bp++;\n            case 2:\n                budget.rp++;\n                budget.bp++;\n                budget.nap++;\n            case 1:\n                budget.ap += 2; \n                budget.bp++;\n                budget.nap++;\n                budget.jp++;\n        }\n\n        // Adjust by prior and current half-level ap increments\n        if (this.level >= 1) {\n            // According to pg 115 of 1.5, you technically get the half-level AP from 0\n            budget.ap += this.level; // All previous half increments\n            if (this.xp.value >= 7) {\n                budget.ap += 1; // This level half increment\n            }\n        }\n\n        // Compute spending\n        let jobs = this.parent.items.filter((i) => i.type === \"job\");\n        let bond_powers = this.parent.items.filter((i) => i.type === \"bond-power\");\n        let abilities = this.parent.items.filter((i) => i.type === \"ability\" && !i.system.trait);\n        let relics = this.parent.items.filter((i) => i.type === \"relic\");\n        let talent_count = abilities.reduce((x, a) => x + a.system.talents.filter((t) => t.unlocked).length, 0);\n        let mastery_count = abilities.reduce((x, a) => x + a.system.mastery.unlocked ? 1 : 0, 0);\n        let narrative_action_count = Object.values(this.actions).reduce((a, b) => a + b, 0);\n\n        // First bespoke\n        if (abilities.length < budget.sap) {\n            this.progression.warnings.push(\"You have too few abilities unlocked!\");\n        }\n\n        const adjudicate = (expected, actual, name) => {\n            if (expected != actual) {\nthis.progression.warnings.push(`Invalid number of ${name}. Expected ${expected}, found ${actual}`);\n}\n        };\n        adjudicate(budget.ap + budget.sap, abilities.length + talent_count, \"Abilities + Talents unlocked\");\n        adjudicate(budget.mp, mastery_count, \"Masteries\");\n        adjudicate(budget.jp, jobs.length, \"Jobs\");\n        adjudicate(budget.rp, relics.length, \"Relics\");\n        adjudicate(budget.nap, narrative_action_count, \"Action Points\");\n        adjudicate(budget.bp, bond_powers.length, \"Bond Powers\");\n\n\n        // /////////////// Combat:\n        // Grab key data, setup class, setup hp, etc\n        this.job = jobs[0];\n        if (this.job) {\n            this.class = this.job.system.class; // Alias for ease of access\n            // Set max hp & fill hp if none set\n            this.hp.max = this.class.vitality * (4 - this.wounds.value);\n            if (this._source.hp === null) {\n                this.hp.value = this.hp.max;\n            }\n\n            // Set max vigor based on vitality\n            this.vigor.max = this.class.vitality;\n\n            // Set true max hp\n            this.true_max_hp = this.class.vitality * 4;\n            this.bloodied = this.hp.value <= this.class.vitality * 2;\n        } else {\n            this.job = null;\n            this.class = null;\n            this.current_max_hp = 0;\n        }\n    }\n}\n","import { ActorModel } from \"./actor\";\n\nexport class SummonModel extends ActorModel {\n    static defineSchema() {\n        return {\n            ...super.defineSchema(),\n\n            // Does this summon count as an object\n            is_object: new foundry.data.fields.BooleanField({ initial: false }),\n            tags: new foundry.data.fields.ArrayField(new foundry.data.fields.StringField()),\n            // Ongoing, persistent effects\n            summon_effects: new foundry.data.fields.HTMLField(),\n            // Effects when summoned and on the summoners turn\n            summon_actions: new foundry.data.fields.HTMLField(),\n        };\n    }\n}\n","import { ICON } from \"../consts\";\nimport { FoeModel } from \"../models/actors/foe\";\nimport { PlayerModel } from \"../models/actors/player\";\nimport { SummonModel } from \"../models/actors/summon\";\n\n// Provides a sane default image\n/**\n *\n * @param meta\n */\nexport function defaultImage(meta) {\n    let name = meta.type; // A special name to perhaps look up\n    let type = meta.type; // Player, foe, summon\n    let clazz = meta.class; // red, green, blue, yellow\n    let job = meta.job; // Full job name\n\n    // First lookup special names\n\n    if (type === \"player\") {\n        return \"icons/svg/aura.svg\";\n    } else if (type === \"foe\") {\n        return \"icons/svg/mystery-man.svg\";\n    } else { // It's a summon, but don't over-restrain\n        return \"icons/svg/card-joker.svg\";\n    }\n}\n\n/**\n * Our custom class for Icon Actors\n */\nexport class IconActor extends Actor {\n\n    /**\n     * Patch update to preserve arrays\n     *\n     * @param data\n     *\n     * @param options\n     */\n    async update(data, options = {}) {\n        data = this.system.fullUpdateData(data);\n        return super.update(data, options);\n    }\n\n    /* @override\n     * This is overridden to pre-populate with slightly more sensible data,\n     * such as nicer icons and default names, token dispositions, etc\n     */\n    async _preCreate(...[data, options, user]) {\n        await super._preCreate(data, options, user);\n\n        // Give a decent default icon\n        let img = data.img ?? defaultImage({ type: data.type, name: data.name });\n\n        // Set default disposition\n        let disposition = data.prototypeToken?.disposition ?? {\n            [\"foe\"]: CONST.TOKEN_DISPOSITIONS.HOSTILE,\n            [\"player\"]: CONST.TOKEN_DISPOSITIONS.FRIENDLY,\n            [\"summon\"]: CONST.TOKEN_DISPOSITIONS.NEUTRAL,\n        }[this.type] ?? CONST.TOKEN_DISPOSITIONS.NEUTRAL;\n\n        // Set default link status\n        let actorLink = data.prototypeToken?.actorLink ?? (data.type === \"player\");\n\n        // Set default bars\n        let displayBars = data.prototypeToken?.displayBars;\n        if (displayBars === undefined) {\n            if (data.type === \"player\") {\n                // Fine for players to see each other\n                displayBars = CONST.TOKEN_DISPLAY_MODES.HOVER;\n            } else if (data.type === \"foe\") {\n                // Depends on GM preference\n                if (game.settings.get(game.system.id, ICON.settings.show_foe_hp)) {\n                    displayBars = CONST.TOKEN_DISPLAY_MODES.HOVER;\n                } else {\n                    displayBars = CONST.TOKEN_DISPLAY_MODES.OWNER_HOVER;\n                }\n            } else {\n                // Never show for foes\n                displayBars = CONST.TOKEN_DISPLAY_MODES.NONE;\n            }\n        }\n        let bar1 = data.prototypeToken?.bar1 ?? {\n            attribute: \"hp\",\n\n        };\n        let bar2 = data.prototypeToken?.bar2 ?? {\n            attribute: \"vigor\",\n\n        };\n\n        // Put in the basics\n        // @ts-expect-error Should be fixed with v10 types\n        this.updateSource({\n            img,\n            // Link the token to the Actor for pilots and mechs, but not for NPCs or deployables\n            prototypeToken: {\n                actorLink,\n                disposition,\n                displayName: CONST.TOKEN_DISPLAY_MODES.HOVER,\n                displayBars,\n                bar1,\n                bar2\n            },\n        });\n    }\n\n}","/**\n * Our custom class for Icon Items\n */\nexport class IconItem extends Item {\n    /**\n     * Patch update to preserve arrays\n     *\n     * @param data\n     *\n     * @param options\n     */\n    async update(data, options = {}) {\n        data = this.system.fullUpdateData(data);\n        return super.update(data, options);\n    }\n\n}","\nexport class IconTokenDocument extends TokenDocument {\n    // Force editability on all bar attributes\n    getBarAttribute(barName, options = {}) {\n        let result = super.getBarAttribute(barName, options);\n        if (result && !result.editable) {\n            result.editable = true;\n        }\n        return result;\n    }\n}","import { IconActor } from \"../documents/actor\";\nimport { IconItem } from \"../documents/item\";\nimport { IconTokenDocument } from \"../documents/token\";\n\n/**\n * Configure all of our system documents\n */\nexport function setupDocuments() {\n    // Setup classes\n    CONFIG.Item.documentClass = IconItem;\n    CONFIG.Actor.documentClass = IconActor;\n    // CONFIG.ActiveEffect.documentClass = LancerActiveEffect;\n    CONFIG.Token.documentClass = IconTokenDocument;\n\n    CONFIG.Actor.trackableAttributes[\"player\"] = {\n        bar: [\"hp\", \"vigor\"],\n        value: [\"resolve\"]\n    };\n    CONFIG.Actor.trackableAttributes[\"foe\"] = {\n        bar: [\"hp\", \"vigor\"],\n        value: []\n    };\n    // CONFIG.Token.objectClass = LancerToken;\n    // CONFIG.Combat.documentClass = LancerCombat;\n    // CONFIG.Combatant.documentClass = LancerCombatant;\n    // CONFIG.ui.combat = LancerCombatTracker;\n}\n","// Shorthand for localization\n/**\n * @param {string} s The localization path\n *\n * @returns {string} The localized string, or the localization path if not successful\n */\nexport function localize(s) {\n    return game.i18n.localize(s) ?? s;\n}\n\n/**\n * Generate a chapter icon for a chapter\n *\n * @param {number} n \n *\n * @returns {string} I, II, or III\n */\nexport function chapterIcon(n) {\n    return {\n        1: \"I\", \n        2: \"Ⅱ\", \n        3: \"Ⅲ\"\n    }[n] ?? \"I\";\n}\n\n/**\n * Remove UUID refs \n *\n * @param {string} text The text to clean up\n */\nexport function removeAllUUIDRefs(text) {\n    return text.replaceAll(/@UUID\\[.*?\\]\\{(.*?)\\}/g, (_, n) => n);\n}","import { removeAllUUIDRefs } from \"../../util/misc\";\nimport { CastingStringField, ControlledLengthArrayField, titleCaseString } from \"../base\";\nimport { ItemModel } from \"./item\";\n\nconst fields = foundry.data.fields;\n\n/** For combo and other similar multiple-choice abilities */\nexport class AbilityChoiceField extends fields.SchemaField {\n    constructor(options = {}) {\n        super({\n            // What is this sub-ability called? Leave null for default choice, typically\n            name: new fields.StringField({ nullable: true, initial: null }),\n            // Its description\n            description: new fields.HTMLField(),\n            // How many actions does it take? Null if not an action (e.x. a trait description)\n            actions: new fields.NumberField({ nullable: true, integer: true, min: 0, max: 2, initial: 1 }),\n            // Is it a round action?\n            round_action: new fields.BooleanField({ initial: false }),\n            // What is/are its listed range(s)?\n            ranges: new fields.ArrayField(new CastingStringField({ cast: titleCaseString })),\n            // validate: (val) => {\n            // return !!val.match(/(Range \\d+|Line \\d+|Arc \\d+|Small Blast|Medium Blast|Large Blast)/i)\n            // }\n            // UUIDs of any summons it might have\n            summons: new fields.ArrayField(new fields.StringField()),\n\n\n            // ------- TAGS ---------------\n            tags: new fields.ArrayField(new CastingStringField({ cast: titleCaseString })),\n\n            // As an interrupt, what's its trigger?\n            trigger: new fields.StringField(),\n\n            // ------- COSTS ---------------\n            // Costs / generates a combo token\n            combo: new fields.NumberField({ initial: 0, choices: [-1, 0, 1] }),\n            // Costs X resolve\n            resolve: new fields.NumberField({ nullable: false, integer: true, min: 0, initial: 0 }),\n\n            // ------- What's it actually do? Hit, miss, charge, etc --------\n            effects: new fields.ArrayField(new fields.StringField())\n        }, options);\n    }\n\n    initialize(value, model, options = {}) {\n        let rv = super.initialize(value, model, options);\n\n        // Super in the name/ability\n        rv.ability ||= model.parent;\n        rv.name ||= model.parent.name;\n\n        // Add in any derived data\n        rv.actionPips = this.actionPips(rv);\n        rv.derived = {};\n        this.populateTags(rv);\n\n        return rv;\n    }\n\n    /**\n     * Yields a string that represents the action cost of this ability\n     * // TODO: End turn, limit break\n     *\n     * @param {object} data The raw choice data\n     *\n     * @returns {string} A simple unicode string\n     */\n    actionPips(data) {\n        // Traits have nothing\n        if (data.actions === null) {\nreturn \"\";\n}\n\n        // Interrupts look special\n        if (data.interrupt) {\n            return \"⧰\".repeat(data.interrupt);\n        } else if (data.actions == 0) {\n            return \"⟡\"; // It's free\n        }\n        let first_action_pip;\n        if (data.combo == -1) {\n            // Costs a combo\n            first_action_pip = \"⬗\";\n        } else if (data.combo == 1) {\n            // Generates a combo\n            first_action_pip = \"⬖\";\n        } else {\n            first_action_pip = \"◆\";\n        }\n        return first_action_pip + (data.actions == 2 ? \"◆\" : \"\");\n    }\n\n    populateTags(data) {\n        // Is it an attack?\n        data.attack = false;\n        // Does it have true strike?\n        data.true_strike = false;\n        // Does it have unerring? (Ignore cover and stealth)\n        data.unerring = false;\n        // Is it an interrupt, and if so how often can it be used?\n        data.interrupt = 0;\n        // Does it end your turn\n        data.end_turn = false;\n        // Does it apply a mark\n        data.mark = false;\n        // Does it grant a stance\n        data.stance = false;\n        // Does it apply a terrain effect\n        data.terrain_effect = false;\n        // Does it have a delay effect\n        data.delay = false;\n        for (let tag of data.tags) {\n            let m;\n            if (m = tag.match(/attack/i)) {\ndata.is_attack = true;\n}\n            if (m = tag.match(/true strike/i)) {\ndata.is_true_strike = true;\n}\n            if (m = tag.match(/unerring/i)) {\ndata.is_unerring = true;\n}\n            if (m = tag.match(/interrupt (\\d)/i)) {\ndata.is_interrupt = parseInt(m[1]);\n}\n            if (m = tag.match(/end turn/i)) {\ndata.is_end_turn = true;\n}\n            if (m = tag.match(/mark/i)) {\ndata.is_mark = true;\n}\n            if (m = tag.match(/stance/i)) {\ndata.is_stance = true;\n}\n            if (m = tag.match(/terrain effect/i)) {\ndata.is_terrain_effect = true;\n}\n            if (m = tag.match(/delay/i)) {\ndata.is_delay = true;\n}\n        }\n    }\n}\n\n/** For talents and masteries. WIP */\nexport class AbilityAugmentationField extends fields.SchemaField {\n    constructor(options = {}) {\n        super({\n            name: new fields.StringField({ nullable: true, initial: null }),\n            text: new fields.HTMLField(),\n            unlocked: new fields.BooleanField({ initial: false })\n        }, options);\n    }\n}\n\nexport class AbilityModel extends ItemModel {\n    static defineSchema() {\n        return {\n            ...super.defineSchema(),\n            // Choices inherent to an abilities\n            choices: new ControlledLengthArrayField(new AbilityChoiceField(), { length: 1, overflow: true }),\n\n            // Minimum chapter it is allowed in\n            chapter: new fields.NumberField({ nullable: false, initial: 1, integer: true, min: 1, max: 3 }),\n\n            // Special rules for it\n            special_requirements: new fields.ArrayField(new fields.StringField()),\n\n            // Is it actually a trait? \n            // This really doesn't end up meaning much considering some traits are abilities, etc\n            trait: new fields.BooleanField({ initial: false }),\n\n            // Upgrades for player abilities\n            talents: new ControlledLengthArrayField(new AbilityAugmentationField(), { length: 2 }),\n            mastery: new AbilityAugmentationField()\n        };\n    }\n}\n","import { ItemModel } from \"./item\";\n\nconst gear = () => new foundry.data.fields.SchemaField({\n    name: new foundry.data.fields.StringField(),\n    description: new foundry.data.fields.HTMLField()\n});\n\nexport class BondModel extends ItemModel {\n    static defineSchema() {\n        return {\n            ...super.defineSchema(),\n            description: new foundry.data.fields.HTMLField(),\n            ideals: new foundry.data.fields.ArrayField(new foundry.data.fields.HTMLField()),\n\n            // What actions it upgrades\n            plus_two_options: new foundry.data.fields.ArrayField(new foundry.data.fields.StringField()),\n\n            // Abilities\n            second_wind: new foundry.data.fields.HTMLField(),\n            special_ability: new foundry.data.fields.HTMLField(),\n\n            // Gear\n            primary_gear: gear(),\n            secondary_gear: new foundry.data.fields.ArrayField(gear()),\n            selected_secondary_gear_index: new foundry.data.fields.NumberField({ nullable: true, initial: null, integer: true }),\n\n            // Powers\n            // An array of compendium uuids of unlockable bond powers. \n            // Ideally you don't edit this, and only show it when in a special unlock menu\n            powers: new foundry.data.fields.ArrayField(new foundry.data.fields.StringField()),\n        };\n    }\n}\n","import { ItemModel } from \"./item\";\n\nexport class BondPowerModel extends ItemModel {\n    static defineSchema() {\n        return {\n            ...super.defineSchema(),\n            description: new foundry.data.fields.HTMLField()\n        };\n    }\n}\n","import { CastingStringField, ControlledLengthArrayField, FakeBoundedNumberField } from \"../base\";\nimport { ItemModel } from \"./item\";\n\n\nexport class RelicModel extends ItemModel {\n    static defineSchema() {\n        return {\n            ...super.defineSchema(),\n            description: new foundry.data.fields.HTMLField(),\n            ranks: new ControlledLengthArrayField(new foundry.data.fields.HTMLField(), { length: 4 }),\n            rank: new FakeBoundedNumberField({ nullable: false, min: 1, max: 4, initial: 1 }),\n            infused_dust: new FakeBoundedNumberField(),\n            aspect_quest: new foundry.data.fields.HTMLField()\n        };\n    }\n\n    prepareDerivedData() {\n        // Set infusion max\n        if (this.rank.value === 3) {\n            this.infused_dust.max = 12;\n        } else if (this.rank.value === 4) {\n            this.infused_dust.max = 0;\n        } else {\n            this.infused_dust.max = 6;\n        }\n    }\n}\n","import { ActorModel } from \"../models/actors/actor\";\nimport { FoeModel } from \"../models/actors/foe\";\nimport { PlayerModel } from \"../models/actors/player\";\nimport { SummonModel } from \"../models/actors/summon\";\nimport { AbilityModel } from \"../models/items/ability\";\nimport { BondModel } from \"../models/items/bond\";\nimport { BondPowerModel } from \"../models/items/bond_power\";\nimport { ItemModel } from \"../models/items/item\";\nimport { JobModel } from \"../models/items/job\";\nimport { RelicModel } from \"../models/items/relic\";\n\n/**\n * Configure all of our system documents\n */\nexport function setupModels() {\n    // Setup models\n    CONFIG.Item.dataModels[\"junk\"] = ItemModel; // Where we send items we don't really care to / know how to render yet\n    CONFIG.Item.dataModels[\"job\"] = JobModel;\n    CONFIG.Item.dataModels[\"ability\"] = AbilityModel;\n    CONFIG.Item.dataModels[\"bond\"] = BondModel;\n    CONFIG.Item.dataModels[\"bond-power\"] = BondPowerModel;\n    CONFIG.Item.dataModels[\"relic\"] = RelicModel;\n\n    CONFIG.Actor.dataModels[\"junk\"] = ActorModel; // Where we send actors we don't really care to deal with yet\n    CONFIG.Actor.dataModels[\"player\"] = PlayerModel;\n    CONFIG.Actor.dataModels[\"foe\"] = FoeModel;\n    CONFIG.Actor.dataModels[\"summon\"] = SummonModel;\n}","import { ICON } from \"../consts\";\n\n/**\n * Registers all system settings\n */\nexport function setupSettings() {\n    // So we can migrate :)\n    game.settings.register(game.system.id, ICON.settings.migration, {\n        name: \"System Migration Version\",\n        scope: \"world\",\n        config: false,\n        type: String,\n        default: \"0\",\n    });    \n    \n    game.settings.register(game.system.id, ICON.settings.welcome, {\n        name: \"Show welcome message\",\n        scope: \"client\",\n        config: true,\n        type: Boolean,\n        default: true,\n    });\n\n    // Public hp?\n    game.settings.register(game.system.id, ICON.settings.show_foe_hp, {\n        name: \"Show Foe HP\",\n        hint: \"By default, should foe hp bars be visible?\",\n        scope: \"world\",\n        config: true,\n        type: Boolean,\n        default: false,\n    });\n}","/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { noop } from './utils.js';\n\nexport const is_client = typeof window !== 'undefined';\n\n/** @type {() => number} */\nexport let now = is_client ? () => window.performance.now() : () => Date.now();\n\nexport let raf = is_client ? (cb) => requestAnimationFrame(cb) : noop;\n\n// used internally for testing\n/** @returns {void} */\nexport function set_now(fn) {\n\tnow = fn;\n}\n\n/** @returns {void} */\nexport function set_raf(fn) {\n\traf = fn;\n}\n","import { raf } from './environment.js';\n\nconst tasks = new Set();\n\n/**\n * @param {number} now\n * @returns {void}\n */\nfunction run_tasks(now) {\n\ttasks.forEach((task) => {\n\t\tif (!task.c(now)) {\n\t\t\ttasks.delete(task);\n\t\t\ttask.f();\n\t\t}\n\t});\n\tif (tasks.size !== 0) raf(run_tasks);\n}\n\n/**\n * For testing purposes only!\n * @returns {void}\n */\nexport function clear_loops() {\n\ttasks.clear();\n}\n\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n * @param {import('./private.js').TaskCallback} callback\n * @returns {import('./private.js').Task}\n */\nexport function loop(callback) {\n\t/** @type {import('./private.js').TaskEntry} */\n\tlet task;\n\tif (tasks.size === 0) raf(run_tasks);\n\treturn {\n\t\tpromise: new Promise((fulfill) => {\n\t\t\ttasks.add((task = { c: callback, f: fulfill }));\n\t\t}),\n\t\tabort() {\n\t\t\ttasks.delete(task);\n\t\t}\n\t};\n}\n","import { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\nimport { contenteditable_truthy_values, has_prop } from './utils.js';\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst myChildren = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmyChildren.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = myChildren;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seqLen =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seqLen] + 1;\n\t\tconst newLen = seqLen + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[newLen] = i;\n\t\tlongest = Math.max(newLen, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst toMove = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\ttoMove.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\ttoMove.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\ttoMove.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < toMove.length; i++) {\n\t\twhile (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(toMove[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tif (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/**\n * @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/**\n * @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} processNode\n * @param {() => R} createNode\n * @param {boolean} dontUpdateLastIndex\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst resultNode = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = processNode(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dontUpdateLastIndex) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = processNode(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dontUpdateLastIndex) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn createNode();\n\t})();\n\tresultNode.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn resultNode;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst dataStr = '' + data;\n\t\t\tif (node.data.startsWith(dataStr)) {\n\t\t\t\tif (node.data.length !== dataStr.length) {\n\t\t\t\t\treturn node.splitText(dataStr.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = dataStr;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { append_empty_stylesheet, detach, get_root_for_style } from './dom.js';\nimport { raf } from './environment.js';\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\n/** @type {Map<Document | ShadowRoot, import('./private.d.ts').StyleInformation>} */\nconst managed_styles = new Map();\n\nlet active = 0;\n\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\n/**\n * @param {string} str\n * @returns {number}\n */\nfunction hash(str) {\n\tlet hash = 5381;\n\tlet i = str.length;\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn hash >>> 0;\n}\n\n/**\n * @param {Document | ShadowRoot} doc\n * @param {Element & ElementCSSInlineStyle} node\n * @returns {{ stylesheet: any; rules: {}; }}\n */\nfunction create_style_information(doc, node) {\n\tconst info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n\tmanaged_styles.set(doc, info);\n\treturn info;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {number} a\n * @param {number} b\n * @param {number} duration\n * @param {number} delay\n * @param {(t: number) => number} ease\n * @param {(t: number, u: number) => string} fn\n * @param {number} uid\n * @returns {string}\n */\nexport function create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n\tconst step = 16.666 / duration;\n\tlet keyframes = '{\\n';\n\tfor (let p = 0; p <= 1; p += step) {\n\t\tconst t = a + (b - a) * ease(p);\n\t\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n\t}\n\tconst rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n\tconst name = `__svelte_${hash(rule)}_${uid}`;\n\tconst doc = get_root_for_style(node);\n\tconst { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n\tif (!rules[name]) {\n\t\trules[name] = true;\n\t\tstylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n\t}\n\tconst animation = node.style.animation || '';\n\tnode.style.animation = `${\n\t\tanimation ? `${animation}, ` : ''\n\t}${name} ${duration}ms linear ${delay}ms 1 both`;\n\tactive += 1;\n\treturn name;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {string} [name]\n * @returns {void}\n */\nexport function delete_rule(node, name) {\n\tconst previous = (node.style.animation || '').split(', ');\n\tconst next = previous.filter(\n\t\tname\n\t\t\t? (anim) => anim.indexOf(name) < 0 // remove specific animation\n\t\t\t: (anim) => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n\t);\n\tconst deleted = previous.length - next.length;\n\tif (deleted) {\n\t\tnode.style.animation = next.join(', ');\n\t\tactive -= deleted;\n\t\tif (!active) clear_rules();\n\t}\n}\n\n/** @returns {void} */\nexport function clear_rules() {\n\traf(() => {\n\t\tif (active) return;\n\t\tmanaged_styles.forEach((info) => {\n\t\t\tconst { ownerNode } = info.stylesheet;\n\t\t\t// there is no ownerNode if it runs on jsdom.\n\t\t\tif (ownerNode) detach(ownerNode);\n\t\t});\n\t\tmanaged_styles.clear();\n\t});\n}\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { is_promise } from './utils.js';\nimport { check_outros, group_outros, transition_in, transition_out } from './transitions.js';\nimport { flush } from './scheduler.js';\nimport { get_current_component, set_current_component } from './lifecycle.js';\n\n/**\n * @template T\n * @param {Promise<T>} promise\n * @param {import('./private.js').PromiseInfo<T>} info\n * @returns {boolean}\n */\nexport function handle_promise(promise, info) {\n\tconst token = (info.token = {});\n\t/**\n\t * @param {import('./private.js').FragmentFactory} type\n\t * @param {0 | 1 | 2} index\n\t * @param {number} [key]\n\t * @param {any} [value]\n\t * @returns {void}\n\t */\n\tfunction update(type, index, key, value) {\n\t\tif (info.token !== token) return;\n\t\tinfo.resolved = value;\n\t\tlet child_ctx = info.ctx;\n\t\tif (key !== undefined) {\n\t\t\tchild_ctx = child_ctx.slice();\n\t\t\tchild_ctx[key] = value;\n\t\t}\n\t\tconst block = type && (info.current = type)(child_ctx);\n\t\tlet needs_flush = false;\n\t\tif (info.block) {\n\t\t\tif (info.blocks) {\n\t\t\t\tinfo.blocks.forEach((block, i) => {\n\t\t\t\t\tif (i !== index && block) {\n\t\t\t\t\t\tgroup_outros();\n\t\t\t\t\t\ttransition_out(block, 1, 1, () => {\n\t\t\t\t\t\t\tif (info.blocks[i] === block) {\n\t\t\t\t\t\t\t\tinfo.blocks[i] = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcheck_outros();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tinfo.block.d(1);\n\t\t\t}\n\t\t\tblock.c();\n\t\t\ttransition_in(block, 1);\n\t\t\tblock.m(info.mount(), info.anchor);\n\t\t\tneeds_flush = true;\n\t\t}\n\t\tinfo.block = block;\n\t\tif (info.blocks) info.blocks[index] = block;\n\t\tif (needs_flush) {\n\t\t\tflush();\n\t\t}\n\t}\n\tif (is_promise(promise)) {\n\t\tconst current_component = get_current_component();\n\t\tpromise.then(\n\t\t\t(value) => {\n\t\t\t\tset_current_component(current_component);\n\t\t\t\tupdate(info.then, 1, info.value, value);\n\t\t\t\tset_current_component(null);\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tset_current_component(current_component);\n\t\t\t\tupdate(info.catch, 2, info.error, error);\n\t\t\t\tset_current_component(null);\n\t\t\t\tif (!info.hasCatch) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t// if we previously had a then/catch block, destroy it\n\t\tif (info.current !== info.pending) {\n\t\t\tupdate(info.pending, 0);\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tif (info.current !== info.then) {\n\t\t\tupdate(info.then, 1, info.value, promise);\n\t\t\treturn true;\n\t\t}\n\t\tinfo.resolved = /** @type {T} */ (promise);\n\t}\n}\n\n/** @returns {void} */\nexport function update_await_block_branch(info, ctx, dirty) {\n\tconst child_ctx = ctx.slice();\n\tconst { resolved } = info;\n\tif (info.current === info.then) {\n\t\tchild_ctx[info.value] = resolved;\n\t}\n\tif (info.current === info.catch) {\n\t\tchild_ctx[info.error] = resolved;\n\t}\n\tinfo.block.p(child_ctx, dirty);\n}\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","/** @returns {{}} */\nexport function get_spread_update(levels, updates) {\n\tconst update = {};\n\tconst to_null_out = {};\n\tconst accounted_for = { $$scope: 1 };\n\tlet i = levels.length;\n\twhile (i--) {\n\t\tconst o = levels[i];\n\t\tconst n = updates[i];\n\t\tif (n) {\n\t\t\tfor (const key in o) {\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\n\t\t\t}\n\t\t\tfor (const key in n) {\n\t\t\t\tif (!accounted_for[key]) {\n\t\t\t\t\tupdate[key] = n[key];\n\t\t\t\t\taccounted_for[key] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlevels[i] = n;\n\t\t} else {\n\t\t\tfor (const key in o) {\n\t\t\t\taccounted_for[key] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor (const key in to_null_out) {\n\t\tif (!(key in update)) update[key] = undefined;\n\t}\n\treturn update;\n}\n\nexport function get_spread_object(spread_props) {\n\treturn typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n/** @returns {void} */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\tconst nodes = children(options.target);\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom\n) {\n\tconst Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.0.5';\nexport const PUBLIC_VERSION = '4';\n","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","import { derived, get } from 'svelte/store';\n\n/**\n * @external Store\n * @see [Svelte stores](https://svelte.dev/docs#component-format-script-4-prefix-stores-with-$-to-access-their-values-store-contract)\n */\n\n/**\n * Create a store similar to [Svelte's `derived`](https://svelte.dev/docs#run-time-svelte-store-writable),\n * but which has its own `set` and `update` methods and can send values back to the origin stores.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#default-export-writablederived)\n * \n * @param {Store|Store[]} origins One or more stores to derive from. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 1st parameter.\n * @param {!Function} derive The callback to determine the derived value. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 2nd parameter.\n * @param {!Function} reflect Called when the derived store gets a new value via its `set` or\n * `update` methods, and determines new values for the origin stores.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#new-parameter-reflect)\n * @param [initial] The new store's initial value. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 3rd parameter.\n * \n * @returns {Store} A writable store.\n */\nfunction writableDerived(origins, derive, reflect, initial) {\n\tvar childDerivedSetter, originValues, blockNextDerive = false;\n\tvar reflectOldValues = reflect.length >= 2;\n\tvar wrappedDerive = (got, set, update) => {\n\t\tchildDerivedSetter = set;\n\t\tif (reflectOldValues) {\n\t\t\toriginValues = got;\n\t\t}\n\t\tif (!blockNextDerive) {\n\t\t\tlet returned = derive(got, set, update);\n\t\t\tif (derive.length < 2) {\n\t\t\t\tset(returned);\n\t\t\t} else {\n\t\t\t\treturn returned;\n\t\t\t}\n\t\t}\n\t\tblockNextDerive = false;\n\t};\n\tvar childDerived = derived(origins, wrappedDerive, initial);\n\t\n\tvar singleOrigin = !Array.isArray(origins);\n\tfunction doReflect(reflecting) {\n\t\tvar setWith = reflect(reflecting, originValues);\n\t\tif (singleOrigin) {\n\t\t\tblockNextDerive = true;\n\t\t\torigins.set(setWith);\n\t\t} else {\n\t\t\tsetWith.forEach( (value, i) => {\n\t\t\t\tblockNextDerive = true;\n\t\t\t\torigins[i].set(value);\n\t\t\t} );\n\t\t}\n\t\tblockNextDerive = false;\n\t}\n\t\n\tvar tryingSet = false;\n\tfunction update(fn) {\n\t\tvar isUpdated, mutatedBySubscriptions, oldValue, newValue;\n\t\tif (tryingSet) {\n\t\t\tnewValue = fn( get(childDerived) );\n\t\t\tchildDerivedSetter(newValue);\n\t\t\treturn;\n\t\t}\n\t\tvar unsubscribe = childDerived.subscribe( (value) => {\n\t\t\tif (!tryingSet) {\n\t\t\t\toldValue = value;\n\t\t\t} else if (!isUpdated) {\n\t\t\t\tisUpdated = true;\n\t\t\t} else {\n\t\t\t\tmutatedBySubscriptions = true;\n\t\t\t}\n\t\t} );\n\t\tnewValue = fn(oldValue);\n\t\ttryingSet = true;\n\t\tchildDerivedSetter(newValue);\n\t\tunsubscribe();\n\t\ttryingSet = false;\n\t\tif (mutatedBySubscriptions) {\n\t\t\tnewValue = get(childDerived);\n\t\t}\n\t\tif (isUpdated) {\n\t\t\tdoReflect(newValue);\n\t\t}\n\t}\n\treturn {\n\t\tsubscribe: childDerived.subscribe,\n\t\tset(value) { update( () => value ); },\n\t\tupdate,\n\t};\n}\n\n/**\n * Create a store for a property value in an object contained in another store.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#named-export-propertystore)\n * \n * @param {Store} origin The store containing the object to get/set from.\n * @param {string|number|symbol|Array<string|number|symbol>} propName The property to get/set, or a path of\n * properties in nested objects.\n *\n * @returns {Store} A writable store.\n */\nfunction propertyStore(origin, propName) {\n\tif (!Array.isArray(propName)) {\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(object) => object[propName],\n\t\t\t(reflecting, object) => {\n\t\t\t\tobject[propName] = reflecting;\n\t\t\t\treturn object;\n\t\t\t},\n\t\t);\n\t} else {\n\t\tlet props = propName.concat();\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(value) => {\n\t\t\t\tfor (let i = 0; i < props.length; ++i) {\n\t\t\t\t\tvalue = value[ props[i] ];\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\t(reflecting, object) => {\n\t\t\t\tlet target = object;\n\t\t\t\tfor (let i = 0; i < props.length - 1; ++i) {\n\t\t\t\t\ttarget = target[ props[i] ];\n\t\t\t\t}\n\t\t\t\ttarget[ props[props.length - 1] ] = reflecting;\n\t\t\t\treturn object;\n\t\t\t},\n\t\t);\n\t}\n}\n\nexport { propertyStore, writableDerived };\n//# sourceMappingURL=index.js.map\n","function set(obj, key, val) {\n\tif (typeof val.value === 'object') val.value = klona(val.value);\n\tif (!val.enumerable || val.get || val.set || !val.configurable || !val.writable || key === '__proto__') {\n\t\tObject.defineProperty(obj, key, val);\n\t} else obj[key] = val.value;\n}\n\nfunction klona(x) {\n\tif (typeof x !== 'object') return x;\n\n\tvar i=0, k, list, tmp, str=Object.prototype.toString.call(x);\n\n\tif (str === '[object Object]') {\n\t\ttmp = Object.create(x.__proto__ || null);\n\t} else if (str === '[object Array]') {\n\t\ttmp = Array(x.length);\n\t} else if (str === '[object Set]') {\n\t\ttmp = new Set;\n\t\tx.forEach(function (val) {\n\t\t\ttmp.add(klona(val));\n\t\t});\n\t} else if (str === '[object Map]') {\n\t\ttmp = new Map;\n\t\tx.forEach(function (val, key) {\n\t\t\ttmp.set(klona(key), klona(val));\n\t\t});\n\t} else if (str === '[object Date]') {\n\t\ttmp = new Date(+x);\n\t} else if (str === '[object RegExp]') {\n\t\ttmp = new RegExp(x.source, x.flags);\n\t} else if (str === '[object DataView]') {\n\t\ttmp = new x.constructor( klona(x.buffer) );\n\t} else if (str === '[object ArrayBuffer]') {\n\t\ttmp = x.slice(0);\n\t} else if (str.slice(-6) === 'Array]') {\n\t\t// ArrayBuffer.isView(x)\n\t\t// ~> `new` bcuz `Buffer.slice` => ref\n\t\ttmp = new x.constructor(x);\n\t}\n\n\tif (tmp) {\n\t\tfor (list=Object.getOwnPropertySymbols(x); i < list.length; i++) {\n\t\t\tset(tmp, list[i], Object.getOwnPropertyDescriptor(x, list[i]));\n\t\t}\n\n\t\tfor (i=0, list=Object.getOwnPropertyNames(x); i < list.length; i++) {\n\t\t\tif (Object.hasOwnProperty.call(tmp, k=list[i]) && tmp[k] === x[k]) continue;\n\t\t\tset(tmp, k, Object.getOwnPropertyDescriptor(x, k));\n\t\t}\n\t}\n\n\treturn tmp || x;\n}\n\n/**\n * Provides common object manipulation utilities including depth traversal, obtaining accessors, safely setting values /\n * equality tests, and validation.\n */\nconst s_TAG_OBJECT = '[object Object]';\nconst s_TAG_MAP = '[object Map]';\nconst s_TAG_SET = '[object Set]';\nconst s_TAG_STRING = '[object String]';\n/**\n * Freezes all entries traversed that are objects including entries in arrays.\n *\n * @param {object | []}   data - An object or array.\n *\n * @param {Set<string>}   [skipFreezeKeys] - A Set of strings indicating keys of objects to not freeze.\n *\n * @returns {object | []} The frozen object.\n */\nfunction deepFreeze(data, skipFreezeKeys) {\n    /* c8 ignore next 1 */\n    if (typeof data !== 'object') {\n        throw new TypeError(`'data' is not an 'object'.`);\n    }\n    /* c8 ignore next 4 */\n    if (skipFreezeKeys !== void 0 && !(skipFreezeKeys instanceof Set)) {\n        throw new TypeError(`'skipFreezeKeys' is not an 'Set'.`);\n    }\n    return _deepFreeze(data, skipFreezeKeys);\n}\n/**\n * Recursively deep merges all source objects into the target object in place. Like `Object.assign` if you provide `{}`\n * as the target a copy is produced. If the target and source property are object literals they are merged.\n * Deleting keys is supported by specifying a property starting with `-=`.\n *\n * @param {object}      target - Target object.\n *\n * @param {...object}   sourceObj - One or more source objects.\n *\n * @returns {object}    Target object.\n */\nfunction deepMerge(target = {}, ...sourceObj) {\n    if (Object.prototype.toString.call(target) !== s_TAG_OBJECT) {\n        throw new TypeError(`deepMerge error: 'target' is not an 'object'.`);\n    }\n    for (let cntr = 0; cntr < sourceObj.length; cntr++) {\n        if (Object.prototype.toString.call(sourceObj[cntr]) !== s_TAG_OBJECT) {\n            throw new TypeError(`deepMerge error: 'sourceObj[${cntr}]' is not an 'object'.`);\n        }\n    }\n    return _deepMerge(target, ...sourceObj);\n}\n/**\n * Performs a naive depth traversal of an object / array. The data structure _must not_ have circular references.\n * The result of the callback function is used to modify in place the given data.\n *\n * @param {object | []}   data - An object or array.\n *\n * @param {(any) => any}  func - A callback function to process leaf values in children arrays or object members.\n *\n * @param {boolean}       modify - If true then the result of the callback function is used to modify in place\n *                                  the given data.\n *\n * @returns {*} The data object.\n */\nfunction depthTraverse(data, func, modify = false) {\n    /* c8 ignore next 1 */\n    if (typeof data !== 'object') {\n        throw new TypeError(`'data' is not an 'object'.`);\n    }\n    /* c8 ignore next 1 */\n    if (typeof func !== 'function') {\n        throw new TypeError(`'func' is not a 'function'.`);\n    }\n    return _depthTraverse(data, func, modify);\n}\n/**\n * Returns a list of accessor keys by traversing the given object.\n *\n * @param {object}   data - An object to traverse for accessor keys.\n *\n * @returns {string[]} Accessor list.\n */\nfunction getAccessorList(data) {\n    if (typeof data !== 'object') {\n        throw new TypeError(`getAccessorList error: 'data' is not an 'object'.`);\n    }\n    return _getAccessorList(data);\n}\n/**\n * Provides a method to determine if the passed in Svelte component has a getter & setter accessor.\n *\n * @param {object}   object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the getter and setter for accessor.\n */\nfunction hasAccessor(object, accessor) {\n    if (typeof object !== 'object' || object === null || object === void 0) {\n        return false;\n    }\n    // Check for instance accessor.\n    const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n    if (iDescriptor !== void 0 && iDescriptor.get !== void 0 && iDescriptor.set !== void 0) {\n        return true;\n    }\n    // Walk parent prototype chain. Check for descriptor at each prototype level.\n    for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o)) {\n        const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n        if (descriptor !== void 0 && descriptor.get !== void 0 && descriptor.set !== void 0) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Provides a method to determine if the passed in Svelte component has a getter accessor.\n *\n * @param {object}   object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the getter for accessor.\n */\nfunction hasGetter(object, accessor) {\n    if (typeof object !== 'object' || object === null || object === void 0) {\n        return false;\n    }\n    // Check for instance accessor.\n    const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n    if (iDescriptor !== void 0 && iDescriptor.get !== void 0) {\n        return true;\n    }\n    // Walk parent prototype chain. Check for descriptor at each prototype level.\n    for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o)) {\n        const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n        if (descriptor !== void 0 && descriptor.get !== void 0) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Returns whether the target is or has the given prototype walking up the prototype chain.\n *\n * @param {unknown}  target - Any target to test.\n *\n * @param {new (...args: any[]) => any} Prototype - Prototype function / class constructor to find.\n *\n * @returns {boolean} Target matches prototype.\n */\nfunction hasPrototype(target, Prototype) {\n    /* c8 ignore next */\n    if (typeof target !== 'function') {\n        return false;\n    }\n    if (target === Prototype) {\n        return true;\n    }\n    // Walk parent prototype chain. Check for descriptor at each prototype level.\n    for (let proto = Object.getPrototypeOf(target); proto; proto = Object.getPrototypeOf(proto)) {\n        if (proto === Prototype) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Provides a method to determine if the passed in Svelte component has a setter accessor.\n *\n * @param {object}   object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the setter for accessor.\n */\nfunction hasSetter(object, accessor) {\n    if (typeof object !== 'object' || object === null || object === void 0) {\n        return false;\n    }\n    // Check for instance accessor.\n    const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n    if (iDescriptor !== void 0 && iDescriptor.set !== void 0) {\n        return true;\n    }\n    // Walk parent prototype chain. Check for descriptor at each prototype level.\n    for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o)) {\n        const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n        if (descriptor !== void 0 && descriptor.set !== void 0) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Tests for whether an object is async iterable.\n *\n * @param {unknown} value - Any value.\n *\n * @returns {boolean} Whether value is async iterable.\n */\nfunction isAsyncIterable(value) {\n    if (typeof value !== 'object' || value === null || value === void 0) {\n        return false;\n    }\n    return Symbol.asyncIterator in value;\n}\n/**\n * Tests for whether an object is iterable.\n *\n * @param {unknown} value - Any value.\n *\n * @returns {boolean} Whether object is iterable.\n */\nfunction isIterable(value) {\n    if (value === null || value === void 0 || typeof value !== 'object') {\n        return false;\n    }\n    return Symbol.iterator in value;\n}\n/**\n * Tests for whether object is not null and a typeof object.\n *\n * @param {unknown} value - Any value.\n *\n * @returns {boolean} Is it an object.\n */\nfunction isObject(value) {\n    return value !== null && typeof value === 'object' && !Array.isArray(value);\n}\n/**\n * Tests for whether the given value is a plain object.\n *\n * An object is plain if it is created by either: `{}`, `new Object()` or `Object.create(null)`.\n *\n * @param {unknown} value - Any value\n *\n * @returns {boolean} Is it a plain object.\n */\nfunction isPlainObject(value) {\n    if (Object.prototype.toString.call(value) !== s_TAG_OBJECT) {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(value);\n    return prototype === null || prototype === Object.prototype;\n}\n/**\n * Safely returns keys on an object or an empty array if not an object.\n *\n * @param {object} object - An object.\n *\n * @returns {string[]}  Object keys or empty array.\n */\nfunction objectKeys(object) {\n    return isObject(object) ? Object.keys(object) : [];\n}\n/**\n * Safely returns an objects size. Note for String objects unicode is not taken into consideration.\n *\n * @param {any} object - Any value, but size returned for object / Map / Set / arrays / strings.\n *\n * @returns {number} Size of object.\n */\nfunction objectSize(object) {\n    if (object === void 0 || object === null || typeof object !== 'object') {\n        return 0;\n    }\n    const tag = Object.prototype.toString.call(object);\n    if (tag === s_TAG_MAP || tag === s_TAG_SET) {\n        return object.size;\n    }\n    if (tag === s_TAG_STRING) {\n        return object.length;\n    }\n    return Object.keys(object).length;\n}\n/**\n * Provides a way to safely access an objects data / entries given an accessor string which describes the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string}   accessor - A string describing the entries to access with keys separated by `.`.\n *\n * @param {any}      [defaultValue] - (Optional) A default value to return if an entry for accessor is not found.\n *\n * @returns {object} The data object.\n */\nfunction safeAccess(data, accessor, defaultValue) {\n    if (typeof data !== 'object') {\n        return defaultValue;\n    }\n    if (typeof accessor !== 'string') {\n        return defaultValue;\n    }\n    const access = accessor.split('.');\n    // Walk through the given object by the accessor indexes.\n    for (let cntr = 0; cntr < access.length; cntr++) {\n        // If the next level of object access is undefined or null then return the empty string.\n        if (typeof data[access[cntr]] === 'undefined' || data[access[cntr]] === null) {\n            return defaultValue;\n        }\n        data = data[access[cntr]];\n    }\n    return data;\n}\n/**\n * Provides a way to safely batch set an objects data / entries given an array of accessor strings which describe the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk. If value is an object the accessor will be used to access a target value from `value` which is\n * subsequently set to `data` by the given operation. If `value` is not an object it will be used as the target\n * value to set across all accessors.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string[]} accessors - A string describing the entries to access.\n *\n * @param {any}      value - A new value to set if an entry for accessor is found.\n *\n * @param {SafeSetOperation}   [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set',\n *        'set-undefined', 'sub'.\n *\n * @param {any}      [defaultAccessValue=0] - A new value to set if an entry for accessor is found.\n *\n * @param {boolean}  [createMissing=true] - If true missing accessor entries will be created as objects automatically.\n */\nfunction safeBatchSet(data, accessors, value, operation = 'set', defaultAccessValue = 0, createMissing = true) {\n    if (typeof data !== 'object') {\n        throw new TypeError(`safeBatchSet Error: 'data' is not an 'object'.`);\n    }\n    if (!Array.isArray(accessors)) {\n        throw new TypeError(`safeBatchSet Error: 'accessors' is not an 'array'.`);\n    }\n    if (typeof value === 'object') {\n        accessors.forEach((accessor) => {\n            const targetValue = safeAccess(value, accessor, defaultAccessValue);\n            safeSet(data, accessor, targetValue, operation, createMissing);\n        });\n    }\n    else {\n        accessors.forEach((accessor) => {\n            safeSet(data, accessor, value, operation, createMissing);\n        });\n    }\n}\n/**\n * Compares a source object and values of entries against a target object. If the entries in the source object match\n * the target object then `true` is returned otherwise `false`. If either object is undefined or null then false\n * is returned.\n *\n * @param {object}   source - Source object.\n *\n * @param {object}   target - Target object.\n *\n * @returns {boolean} True if equal.\n */\nfunction safeEqual(source, target) {\n    if (typeof source === 'undefined' || source === null || typeof target === 'undefined' || target === null) {\n        return false;\n    }\n    const sourceAccessors = getAccessorList(source);\n    for (let cntr = 0; cntr < sourceAccessors.length; cntr++) {\n        const accessor = sourceAccessors[cntr];\n        const sourceObjectValue = safeAccess(source, accessor);\n        const targetObjectValue = safeAccess(target, accessor);\n        if (sourceObjectValue !== targetObjectValue) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Provides a way to safely set an objects data / entries given an accessor string which describes the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string}   accessor - A string describing the entries to access.\n *\n * @param {any}      value - A new value to set if an entry for accessor is found.\n *\n * @param {SafeSetOperation}   [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set',\n *        'set-undefined', 'sub'.\n *\n * @param {boolean}  [createMissing=true] - If true missing accessor entries will be created as objects\n *        automatically.\n *\n * @returns {boolean} True if successful.\n */\nfunction safeSet(data, accessor, value, operation = 'set', createMissing = true) {\n    if (typeof data !== 'object') {\n        throw new TypeError(`safeSet Error: 'data' is not an 'object'.`);\n    }\n    if (typeof accessor !== 'string') {\n        throw new TypeError(`safeSet Error: 'accessor' is not a 'string'.`);\n    }\n    const access = accessor.split('.');\n    // Walk through the given object by the accessor indexes.\n    for (let cntr = 0; cntr < access.length; cntr++) {\n        // If data is an array perform validation that the accessor is a positive integer otherwise quit.\n        if (Array.isArray(data)) {\n            const number = (+access[cntr]);\n            if (!Number.isInteger(number) || number < 0) {\n                return false;\n            }\n        }\n        if (cntr === access.length - 1) {\n            switch (operation) {\n                case 'add':\n                    data[access[cntr]] += value;\n                    break;\n                case 'div':\n                    data[access[cntr]] /= value;\n                    break;\n                case 'mult':\n                    data[access[cntr]] *= value;\n                    break;\n                case 'set':\n                    data[access[cntr]] = value;\n                    break;\n                case 'set-undefined':\n                    if (typeof data[access[cntr]] === 'undefined') {\n                        data[access[cntr]] = value;\n                    }\n                    break;\n                case 'sub':\n                    data[access[cntr]] -= value;\n                    break;\n            }\n        }\n        else {\n            // If createMissing is true and the next level of object access is undefined then create a new object entry.\n            if (createMissing && typeof data[access[cntr]] === 'undefined') {\n                data[access[cntr]] = {};\n            }\n            // Abort if the next level is null or not an object and containing a value.\n            if (data[access[cntr]] === null || typeof data[access[cntr]] !== 'object') {\n                return false;\n            }\n            data = data[access[cntr]];\n        }\n    }\n    return true;\n}\n/**\n * Performs bulk setting of values to the given data object.\n *\n * @param {object}            data - The data object to set data.\n *\n * @param {Record<string, any>}  accessorValues - Object of accessor keys to values to set.\n *\n * @param {SafeSetOperation}  [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set', 'sub';\n *        default (`set`).\n *\n * @param {boolean}           [createMissing=true] - If true missing accessor entries will be created as objects\n *        automatically.\n */\nfunction safeSetAll(data, accessorValues, operation = 'set', createMissing = true) {\n    if (typeof data !== 'object') {\n        throw new TypeError(`'data' is not an 'object'.`);\n    }\n    if (typeof accessorValues !== 'object') {\n        throw new TypeError(`'accessorValues' is not an 'object'.`);\n    }\n    for (const accessor of Object.keys(accessorValues)) {\n        if (!Object.prototype.hasOwnProperty.call(accessorValues, accessor)) {\n            continue;\n        }\n        safeSet(data, accessor, accessorValues[accessor], operation, createMissing);\n    }\n}\n/**\n * Performs bulk validation of data given an object, `validationData`, which describes all entries to test.\n *\n * @param {object}                           data - The data object to test.\n *\n * @param {Record<string, ValidationEntry>}  validationData - Key is the accessor / value is a validation entry.\n *\n * @param {string}                           [dataName='data'] - Optional name of data.\n *\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\n */\nfunction validate(data, validationData = {}, dataName = 'data') {\n    if (typeof data !== 'object') {\n        throw new TypeError(`'${dataName}' is not an 'object'.`);\n    }\n    if (typeof validationData !== 'object') {\n        throw new TypeError(`'validationData' is not an 'object'.`);\n    }\n    let result;\n    for (const key of Object.keys(validationData)) {\n        if (!Object.prototype.hasOwnProperty.call(validationData, key)) {\n            continue;\n        }\n        const entry = validationData[key];\n        switch (entry.test) {\n            case 'array':\n                result = validateArray(data, key, entry, dataName);\n                break;\n            case 'entry':\n                result = validateEntry(data, key, entry, dataName);\n                break;\n            case 'entry|array':\n                result = validateEntryOrArray(data, key, entry, dataName);\n                break;\n        }\n    }\n    return result;\n}\n/**\n * Validates all array entries against potential type and expected tests.\n *\n * @param {object}            data - The data object to test.\n *\n * @param {string}            accessor - A string describing the entries to access.\n *\n * @param {ValidationEntry}   entry - Validation entry object\n *\n * @param {string}            [dataName='data'] - Optional name of data.\n *\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\n */\nfunction validateArray(data, accessor, entry, dataName = 'data') {\n    const valEntry = Object.assign({ required: true, error: true }, entry);\n    const dataArray = safeAccess(data, accessor);\n    // A non-required entry is missing so return without validation.\n    if (!valEntry?.required && typeof dataArray === 'undefined') {\n        return true;\n    }\n    if (!Array.isArray(dataArray)) {\n        if (valEntry.error) {\n            throw _validateError(TypeError, `'${dataName}.${accessor}' is not an 'array'.`);\n        }\n        else {\n            return false;\n        }\n    }\n    if (typeof valEntry.type === 'string') {\n        for (let cntr = 0; cntr < dataArray.length; cntr++) {\n            if (!(typeof dataArray[cntr] === valEntry.type)) {\n                if (valEntry.error) {\n                    const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\n                        dataArray[cntr];\n                    throw _validateError(TypeError, `'${dataName}.${accessor}[${cntr}]': '${dataEntryString}' is not a '${valEntry.type}'.`);\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n    }\n    // If expected is a function then test all array entries against the test function. If expected is a Set then\n    // test all array entries for inclusion in the set. Otherwise, if expected is a string then test that all array\n    // entries as a `typeof` test against expected.\n    if (Array.isArray(valEntry.expected)) {\n        for (let cntr = 0; cntr < dataArray.length; cntr++) {\n            if (!valEntry.expected.includes(dataArray[cntr])) {\n                if (valEntry.error) {\n                    const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\n                        dataArray[cntr];\n                    throw _validateError(Error, `'${dataName}.${accessor}[${cntr}]': '${dataEntryString}' is not an expected value: ${JSON.stringify(valEntry.expected)}.`);\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n    }\n    else if (valEntry.expected instanceof Set) {\n        for (let cntr = 0; cntr < dataArray.length; cntr++) {\n            if (!valEntry.expected.has(dataArray[cntr])) {\n                if (valEntry.error) {\n                    const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\n                        dataArray[cntr];\n                    throw _validateError(Error, `'${dataName}.${accessor}[${cntr}]': '${dataEntryString}' is not an expected value: ${JSON.stringify(valEntry.expected)}.`);\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n    }\n    else if (typeof valEntry.expected === 'function') {\n        for (let cntr = 0; cntr < dataArray.length; cntr++) {\n            try {\n                const result = valEntry.expected(dataArray[cntr]);\n                if (typeof result === 'undefined' || !result) {\n                    throw new Error(valEntry.message);\n                }\n            }\n            catch (err) {\n                if (valEntry.error) {\n                    const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\n                        dataArray[cntr];\n                    throw _validateError(Error, `'${dataName}.${accessor}[${cntr}]': '${dataEntryString}' failed validation: ${err.message}.`);\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n    }\n    return true;\n}\n/**\n * Validates data entry with a typeof check and potentially tests against the values in any given expected set.\n *\n * @param {object}            data - The object data to validate.\n *\n * @param {string}            accessor - A string describing the entries to access.\n *\n * @param {ValidationEntry}   entry - Validation entry.\n *\n * @param {string}            [dataName='data'] - Optional name of data.\n *\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\n */\nfunction validateEntry(data, accessor, entry, dataName = 'data') {\n    const valEntry = Object.assign({ required: true, error: true }, entry);\n    const dataEntry = safeAccess(data, accessor);\n    // A non-required entry is missing so return without validation.\n    if (!valEntry.required && typeof dataEntry === 'undefined') {\n        return true;\n    }\n    if (valEntry.type && typeof dataEntry !== valEntry.type) {\n        if (valEntry.error) {\n            throw _validateError(TypeError, `'${dataName}.${accessor}' is not a '${valEntry.type}'.`);\n        }\n        else {\n            return false;\n        }\n    }\n    if ((valEntry.expected instanceof Set && !valEntry.expected.has(dataEntry)) ||\n        (Array.isArray(valEntry.expected) && !valEntry.expected.includes(dataEntry))) {\n        if (valEntry.error) {\n            const dataEntryString = typeof dataEntry === 'object' ? JSON.stringify(dataEntry) : dataEntry;\n            throw _validateError(Error, `'${dataName}.${accessor}': '${dataEntryString}' is not an expected value: ${JSON.stringify(valEntry.expected)}.`);\n        }\n        else {\n            return false;\n        }\n    }\n    else if (typeof valEntry.expected === 'function') {\n        try {\n            const result = valEntry.expected(dataEntry);\n            if (typeof result === 'undefined' || !result) {\n                throw new Error(valEntry.message);\n            }\n        }\n        catch (err) {\n            if (valEntry.error) {\n                const dataEntryString = typeof dataEntry === 'object' ? JSON.stringify(dataEntry) : dataEntry;\n                throw _validateError(Error, `'${dataName}.${accessor}': '${dataEntryString}' failed to validate: ${err.message}.`);\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * Dispatches validation of data entry to string or array validation depending on data entry type.\n *\n * @param {object}            data - The data object to test.\n *\n * @param {string}            accessor - A string describing the entries to access.\n *\n * @param {ValidationEntry}   [entry] - A validation entry.\n *\n * @param {string}            [dataName='data'] - Optional name of data.\n *\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\n */\nfunction validateEntryOrArray(data, accessor, entry, dataName = 'data') {\n    const dataEntry = safeAccess(data, accessor);\n    let result;\n    if (Array.isArray(dataEntry)) {\n        result = validateArray(data, accessor, entry, dataName);\n    }\n    else {\n        result = validateEntry(data, accessor, entry, dataName);\n    }\n    return result;\n}\n// Module private ---------------------------------------------------------------------------------------------------\n/**\n * Private implementation of depth traversal.\n *\n * @param {any}         data - An object or array or any leaf.\n *\n * @param {Set<string>} [skipFreezeKeys] - An array of strings indicating keys of objects to not freeze.\n *\n * @returns {*} The frozen object.\n * @ignore\n * @private\n */\nfunction _deepFreeze(data, skipFreezeKeys) {\n    if (Array.isArray(data)) {\n        for (let cntr = 0; cntr < data.length; cntr++) {\n            _deepFreeze(data[cntr], skipFreezeKeys);\n        }\n    }\n    else if (isObject(data)) {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key) && !skipFreezeKeys?.has?.(key)) {\n                _deepFreeze(data[key], skipFreezeKeys);\n            }\n        }\n    }\n    return Object.freeze(data);\n}\n/**\n * Internal implementation for `deepMerge`.\n *\n * @param {object}      target - Target object.\n *\n * @param {...object}   sourceObj - One or more source objects.\n *\n * @returns {object}    Target object.\n */\nfunction _deepMerge(target = {}, ...sourceObj) {\n    // Iterate and merge all source objects into target.\n    for (let cntr = 0; cntr < sourceObj.length; cntr++) {\n        const obj = sourceObj[cntr];\n        for (const prop in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n                // Handle the special property starting with '-=' to delete keys.\n                if (prop.startsWith('-=')) {\n                    delete target[prop.slice(2)];\n                    continue;\n                }\n                // If target already has prop and both target[prop] and obj[prop] are object literals then merge them\n                // otherwise assign obj[prop] to target[prop].\n                target[prop] = Object.prototype.hasOwnProperty.call(target, prop) && target[prop]?.constructor === Object &&\n                    obj[prop]?.constructor === Object ? _deepMerge({}, target[prop], obj[prop]) : obj[prop];\n            }\n        }\n    }\n    return target;\n}\n/**\n * Private implementation of depth traversal.\n *\n * @param {any}      data - An object, array, or any leaf value\n *\n * @param {Function} func - A callback function to process leaf values in children arrays or object members.\n *\n * @param {boolean}  modify - If true then the result of the callback function is used to modify in place the\n *        given data.\n *\n * @returns {*} The data object.\n * @ignore\n * @private\n */\nfunction _depthTraverse(data, func, modify = false) {\n    if (modify) {\n        if (Array.isArray(data)) {\n            for (let cntr = 0; cntr < data.length; cntr++) {\n                data[cntr] = _depthTraverse(data[cntr], func, modify);\n            }\n        }\n        else if (isObject(data)) {\n            for (const key in data) {\n                if (Object.prototype.hasOwnProperty.call(data, key)) {\n                    data[key] = _depthTraverse(data[key], func, modify);\n                }\n            }\n        }\n        else {\n            data = func(data);\n        }\n    }\n    else {\n        if (Array.isArray(data)) {\n            for (let cntr = 0; cntr < data.length; cntr++) {\n                _depthTraverse(data[cntr], func, modify);\n            }\n        }\n        else if (typeof data === 'object') {\n            for (const key in data) {\n                if (Object.prototype.hasOwnProperty.call(data, key)) {\n                    _depthTraverse(data[key], func, modify);\n                }\n            }\n        }\n        else {\n            func(data);\n        }\n    }\n    return data;\n}\n/**\n * Private implementation of `getAccessorList`.\n *\n * @param {object}   data - An object to traverse.\n *\n * @returns {string[]} Accessor list.\n * @ignore\n * @private\n */\nfunction _getAccessorList(data) {\n    const accessors = [];\n    for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n            if (typeof data[key] === 'object') {\n                const childKeys = _getAccessorList(data[key]);\n                childKeys.forEach((childKey) => {\n                    accessors.push(Array.isArray(childKey) ? `${key}.${childKey.join('.')}` : `${key}.${childKey}`);\n                });\n            }\n            else {\n                accessors.push(key);\n            }\n        }\n    }\n    return accessors;\n}\n/**\n * Creates a new error of type `clazz` adding the field `_objectValidateError` set to true.\n *\n * @param {Error}    clazz - Error class to instantiate.\n *\n * @param {string}   message - An error message.\n *\n * @returns {*} Error of the clazz.\n * @ignore\n * @private\n */\nfunction _validateError(clazz, message = void 0) {\n    const error = new clazz(message);\n    error._objectValidateError = true;\n    return error;\n}\n\nexport { deepFreeze, deepMerge, depthTraverse, getAccessorList, hasAccessor, hasGetter, hasPrototype, hasSetter, isAsyncIterable, isIterable, isObject, isPlainObject, klona, objectKeys, objectSize, safeAccess, safeBatchSet, safeEqual, safeSet, safeSetAll, validate, validateArray, validateEntry, validateEntryOrArray };\n//# sourceMappingURL=index.js.map\n","/**\n * Provides a basic test for a given variable to test if it has the shape of a readable store by having a `subscribe`\n * function.\n *\n * Note: functions are also objects, so test that the variable might be a function w/ a `subscribe` function.\n *\n * @param {*}  store - variable to test that might be a store.\n *\n * @returns {boolean} Whether the variable tested has the shape of a store.\n */\nfunction isReadableStore(store)\n{\n   if (store === null || store === void 0) { return false; }\n\n   switch (typeof store)\n   {\n      case 'function':\n      case 'object':\n         return typeof store.subscribe === 'function';\n   }\n\n   return false;\n}\n\n/**\n * Provides a basic test for a given variable to test if it has the shape of a writable store by having a `subscribe`\n * function and an `update` function.\n *\n * Note: functions are also objects, so test that the variable might be a function w/ a `subscribe` function.\n *\n * @param {*}  store - variable to test that might be a store.\n *\n * @returns {boolean} Whether the variable tested has the shape of a store.\n */\nfunction isUpdatableStore(store)\n{\n   if (store === null || store === void 0) { return false; }\n\n   switch (typeof store)\n   {\n      case 'function':\n      case 'object':\n         return typeof store.subscribe === 'function' && typeof store.update === 'function';\n   }\n\n   return false;\n}\n\n/**\n * Provides a basic test for a given variable to test if it has the shape of a writable store by having a `subscribe`\n * `set`, and `update` functions.\n *\n * Note: functions are also objects, so test that the variable might be a function w/ `subscribe` & `set` functions.\n *\n * @param {*}  store - variable to test that might be a store.\n *\n * @returns {boolean} Whether the variable tested has the shape of a store.\n */\nfunction isWritableStore(store)\n{\n   if (store === null || store === void 0) { return false; }\n\n   switch (typeof store)\n   {\n      case 'function':\n      case 'object':\n         return typeof store.subscribe === 'function' && typeof store.set === 'function';\n   }\n\n   return false;\n}\n\n/**\n * Wraps a writable stores set method invoking a callback after the store is set. This allows hard coupled parent /\n * child relationships between stores to update directly without having to subscribe to the child store. This is a\n * particular powerful pattern when the `setCallback` is a debounced function that syncs a parent store and / or\n * serializes data.\n *\n * Note: Do consider carefully if this is an optimum solution; this is a quick implementation helper, but a better\n * solution is properly managing store relationships through subscription.\n *\n * @template T\n *\n * @param {import('svelte/store').Writable<T>} store - A store to wrap.\n *\n * @param {(store?: import('svelte/store').Writable<T>, value?: T) => void} setCallback - A callback to invoke after\n *        store set.\n *\n * @returns {import('svelte/store').Writable<T>} Wrapped store.\n */\nfunction storeCallback(store, setCallback)\n{\n   if (!isWritableStore(store)) { throw new TypeError(`'store' is not a writable store.`); }\n   if (typeof setCallback !== 'function') { throw new TypeError(`'setCallback' is not a function.`); }\n\n   /** @type {import('svelte/store').Writable<T>} */\n   return {\n      set: (value) =>\n      {\n         store.set(value);\n         setCallback(store, value);\n      },\n\n      subscribe: store.subscribe,\n\n      update: typeof store.update === 'function' ? store.update : void 0\n   };\n}\n\n/**\n * Subscribes to the given store with the update function provided and ignores the first automatic\n * update. All future updates are dispatched to the update function.\n *\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\n *  Store to subscribe to...\n *\n * @param {import('svelte/store').Updater} update - function to receive future updates.\n *\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\n */\nfunction subscribeIgnoreFirst(store, update)\n{\n   let firedFirst = false;\n\n   return store.subscribe((value) =>\n   {\n      if (!firedFirst)\n      {\n         firedFirst = true;\n      }\n      else\n      {\n         update(value);\n      }\n   });\n}\n\n/**\n * Subscribes to the given store with two update functions provided. The first function is invoked on the initial\n * subscription. All future updates are dispatched to the update function.\n *\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\n *  Store to subscribe to...\n *\n * @param {import('svelte/store').Updater} first - Function to receive first update.\n *\n * @param {import('svelte/store').Updater} update - Function to receive future updates.\n *\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\n */\nfunction subscribeFirstRest(store, first, update)\n{\n   let firedFirst = false;\n\n   return store.subscribe((value) =>\n   {\n      if (!firedFirst)\n      {\n         firedFirst = true;\n         first(value);\n      }\n      else\n      {\n         update(value);\n      }\n   });\n}\n\nexport { isReadableStore, isUpdatableStore, isWritableStore, storeCallback, subscribeFirstRest, subscribeIgnoreFirst };\n//# sourceMappingURL=index.js.map\n","/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nexport { identity as linear } from '../internal/index.js';\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backInOut(t) {\n\tconst s = 1.70158 * 1.525;\n\tif ((t *= 2) < 1) return 0.5 * (t * t * ((s + 1) * t - s));\n\treturn 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backIn(t) {\n\tconst s = 1.70158;\n\treturn t * t * ((s + 1) * t - s);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backOut(t) {\n\tconst s = 1.70158;\n\treturn --t * t * ((s + 1) * t + s) + 1;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceOut(t) {\n\tconst a = 4.0 / 11.0;\n\tconst b = 8.0 / 11.0;\n\tconst c = 9.0 / 10.0;\n\tconst ca = 4356.0 / 361.0;\n\tconst cb = 35442.0 / 1805.0;\n\tconst cc = 16061.0 / 1805.0;\n\tconst t2 = t * t;\n\treturn t < a\n\t\t? 7.5625 * t2\n\t\t: t < b\n\t\t? 9.075 * t2 - 9.9 * t + 3.4\n\t\t: t < c\n\t\t? ca * t2 - cb * t + cc\n\t\t: 10.8 * t * t - 20.52 * t + 10.72;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceInOut(t) {\n\treturn t < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0)) : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceIn(t) {\n\treturn 1.0 - bounceOut(1.0 - t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circInOut(t) {\n\tif ((t *= 2) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circIn(t) {\n\treturn 1.0 - Math.sqrt(1.0 - t * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circOut(t) {\n\treturn Math.sqrt(1 - --t * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicInOut(t) {\n\treturn t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicIn(t) {\n\treturn t * t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicOut(t) {\n\tconst f = t - 1.0;\n\treturn f * f * f + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticInOut(t) {\n\treturn t < 0.5\n\t\t? 0.5 * Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) * Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n\t\t: 0.5 *\n\t\t\t\tMath.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n\t\t\t\tMath.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n\t\t\t\t1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticIn(t) {\n\treturn Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticOut(t) {\n\treturn Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoInOut(t) {\n\treturn t === 0.0 || t === 1.0\n\t\t? t\n\t\t: t < 0.5\n\t\t? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n\t\t: -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoIn(t) {\n\treturn t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoOut(t) {\n\treturn t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadInOut(t) {\n\tt /= 0.5;\n\tif (t < 1) return 0.5 * t * t;\n\tt--;\n\treturn -0.5 * (t * (t - 2) - 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadIn(t) {\n\treturn t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadOut(t) {\n\treturn -t * (t - 2.0);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartInOut(t) {\n\treturn t < 0.5 ? +8.0 * Math.pow(t, 4.0) : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartIn(t) {\n\treturn Math.pow(t, 4.0);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartOut(t) {\n\treturn Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintInOut(t) {\n\tif ((t *= 2) < 1) return 0.5 * t * t * t * t * t;\n\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintIn(t) {\n\treturn t * t * t * t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintOut(t) {\n\treturn --t * t * t * t * t + 1;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineInOut(t) {\n\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineIn(t) {\n\tconst v = Math.cos(t * Math.PI * 0.5);\n\tif (Math.abs(v) < 1e-14) return 1;\n\telse return 1 - v;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineOut(t) {\n\treturn Math.sin((t * Math.PI) / 2);\n}\n","/**\n * Performs linear interpolation between a start & end value by given amount between 0 - 1 inclusive.\n *\n * @param {number}   start - Start value.\n *\n * @param {number}   end - End value.\n *\n * @param {number}   amount - Current amount between 0 - 1 inclusive.\n *\n * @returns {number} Linear interpolated value between start & end.\n */\nfunction lerp(start, end, amount)\n{\n   return (1 - amount) * start + amount * end;\n}\n\nexport { lerp };\n//# sourceMappingURL=index.js.map\n","import { isObject, isIterable } from '@typhonjs-fvtt/runtime/util/object';\n\nfunction isSpace(character) {\n    return character == \" \" || character == \"\\n\" || character == \"\\r\" || character == \"\\t\";\n}\nfunction isQuote(character) {\n    return character == '\"' || character == \"'\";\n}\nconst TAG_START = \"<\";\nconst TAG_END = \">\";\nconst ENCODED_TAG_START = \"&lt;\";\nconst ENCODED_TAG_END = \"&gt;\";\nclass InPlaintextState {\n    constructor(options) {\n        this.options = options;\n    }\n    consume(character, transition) {\n        if (character == TAG_START) {\n            transition(new InTagNameState(this.options));\n            return \"\";\n        }\n        else if (character == TAG_END && this.options.encodePlaintextTagDelimiters) {\n            return ENCODED_TAG_END;\n        }\n        return character;\n    }\n}\nclass InTagNameState {\n    constructor(options) {\n        this.options = options;\n        this.nameBuffer = \"\";\n        this.isClosingTag = false;\n    }\n    consume(character, transition) {\n        if (this.nameBuffer.length == 0) {\n            if (isSpace(character)) {\n                transition(new InPlaintextState(this.options));\n                return ((this.options.encodePlaintextTagDelimiters ? ENCODED_TAG_START : \"<\") +\n                    character);\n            }\n            if (character == \"/\") {\n                this.isClosingTag = true;\n                return \"\";\n            }\n        }\n        if (isSpace(character)) {\n            if (this.isNameBufferAnAllowedTag()) {\n                transition(new InTagState(0 /* TagMode.Allowed */, this.options));\n                return TAG_START + (this.isClosingTag ? \"/\" : \"\") + this.nameBuffer + character;\n            }\n            else {\n                transition(new InTagState(1 /* TagMode.Disallowed */, this.options));\n                return this.options.tagReplacementText;\n            }\n        }\n        if (character == TAG_START) {\n            this.nameBuffer += ENCODED_TAG_START;\n            return \"\";\n        }\n        if (character == TAG_END) {\n            transition(new InPlaintextState(this.options));\n            if (this.isNameBufferAnAllowedTag()) {\n                return TAG_START + (this.isClosingTag ? \"/\" : \"\") + this.nameBuffer + character;\n            }\n            else {\n                return this.options.tagReplacementText;\n            }\n        }\n        if (character == \"-\" && this.nameBuffer == \"!-\") {\n            transition(new InCommentState(this.options));\n            return \"\";\n        }\n        this.nameBuffer += character;\n        return \"\";\n    }\n    isNameBufferAnAllowedTag() {\n        const tagName = this.nameBuffer.toLowerCase();\n        if (this.options.allowedTags) {\n            return this.options.allowedTags.has(tagName);\n        }\n        else if (this.options.disallowedTags) {\n            return !this.options.disallowedTags.has(tagName);\n        }\n        else {\n            return false;\n        }\n    }\n}\nclass InTagState {\n    constructor(mode, options) {\n        this.mode = mode;\n        this.options = options;\n    }\n    consume(character, transition) {\n        if (character == TAG_END) {\n            transition(new InPlaintextState(this.options));\n        }\n        else if (isQuote(character)) {\n            transition(new InQuotedStringInTagState(this.mode, character, this.options));\n        }\n        if (this.mode == 1 /* TagMode.Disallowed */) {\n            return \"\";\n        }\n        if (character == TAG_START) {\n            return ENCODED_TAG_START;\n        }\n        else {\n            return character;\n        }\n    }\n}\nclass InQuotedStringInTagState {\n    constructor(mode, quoteCharacter, options) {\n        this.mode = mode;\n        this.quoteCharacter = quoteCharacter;\n        this.options = options;\n    }\n    consume(character, transition) {\n        if (character == this.quoteCharacter) {\n            transition(new InTagState(this.mode, this.options));\n        }\n        if (this.mode == 1 /* TagMode.Disallowed */) {\n            return \"\";\n        }\n        if (character == TAG_START) {\n            return ENCODED_TAG_START;\n        }\n        else if (character == TAG_END) {\n            return ENCODED_TAG_END;\n        }\n        else {\n            return character;\n        }\n    }\n}\nclass InCommentState {\n    constructor(options) {\n        this.options = options;\n        this.consecutiveHyphens = 0;\n    }\n    consume(character, transition) {\n        if (character == \">\" && this.consecutiveHyphens >= 2) {\n            transition(new InPlaintextState(this.options));\n        }\n        else if (character == \"-\") {\n            this.consecutiveHyphens++;\n        }\n        else {\n            this.consecutiveHyphens = 0;\n        }\n        return \"\";\n    }\n}\n\nconst DefaultStateMachineOptions = {\n    tagReplacementText: \"\",\n    encodePlaintextTagDelimiters: true,\n};\nclass StateMachine {\n    constructor(partialOptions = {}) {\n        this.state = new InPlaintextState(Object.assign(Object.assign({}, DefaultStateMachineOptions), partialOptions));\n        this.transitionFunction = ((next) => {\n            this.state = next;\n        }).bind(this);\n    }\n    consume(text) {\n        let outputBuffer = \"\";\n        for (const character of text) {\n            outputBuffer += this.state.consume(character, this.transitionFunction);\n        }\n        return outputBuffer;\n    }\n}\nfunction striptags(text, options = {}) {\n    return new StateMachine(options).consume(text);\n}\n\n/**\n * Provides several helpful utility methods for accessibility and keyboard navigation.\n */\nclass A11yHelper\n{\n   /**\n    * Apply focus to the HTMLElement targets in a given A11yFocusSource data object. An iterable list `options.focusEl`\n    * can contain HTMLElements or selector strings. If multiple focus targets are provided in a list then the first\n    * valid target found will be focused. If focus target is a string then a lookup via `document.querySelector` is\n    * performed. In this case you should provide a unique selector for the desired focus target.\n    *\n    * Note: The body of this method is postponed to the next clock tick to allow any changes in the DOM to occur that\n    * might alter focus targets before applying.\n    *\n    * @param {A11yFocusSource|{ focusSource: A11yFocusSource }}   options - The focus options instance to apply.\n    */\n   static applyFocusSource(options)\n   {\n      if (!isObject(options)) { return; }\n\n      // Handle the case of receiving an object with embedded `focusSource`.\n      const focusOpts = isObject(options?.focusSource) ? options.focusSource : options;\n\n      setTimeout(() =>\n      {\n         const debug = typeof focusOpts.debug === 'boolean' ? focusOpts.debug : false;\n\n         if (isIterable(focusOpts.focusEl))\n         {\n            if (debug)\n            {\n               console.debug(`A11yHelper.applyFocusSource debug - Attempting to apply focus target: `, focusOpts.focusEl);\n            }\n\n            for (const target of focusOpts.focusEl)\n            {\n               if (target instanceof HTMLElement && target.isConnected)\n               {\n                  target.focus();\n                  if (debug)\n                  {\n                     console.debug(`A11yHelper.applyFocusSource debug - Applied focus to target: `, target);\n                  }\n                  break;\n               }\n               else if (typeof target === 'string')\n               {\n                  const element = document.querySelector(target);\n                  if (element instanceof HTMLElement && element.isConnected)\n                  {\n                     element.focus();\n                     if (debug)\n                     {\n                        console.debug(`A11yHelper.applyFocusSource debug - Applied focus to target: `, element);\n                     }\n                     break;\n                  }\n                  else if (debug)\n                  {\n                     console.debug(`A11yHelper.applyFocusSource debug - Could not query selector: `, target);\n                  }\n               }\n            }\n         }\n         else if (debug)\n         {\n            console.debug(`A11yHelper.applyFocusSource debug - No focus targets defined.`);\n         }\n      }, 0);\n   }\n\n   /**\n    * Returns first focusable element within a specified element.\n    *\n    * @param {HTMLElement|Document} [element=document] - Optional element to start query.\n    *\n    * @param {object} [options] - Optional parameters.\n    *\n    * @param {Iterable<string>} [options.ignoreClasses] - Iterable list of classes to ignore elements.\n    *\n    * @param {Set<HTMLElement>} [options.ignoreElements] - Set of elements to ignore.\n    *\n    * @returns {HTMLElement} First focusable child element\n    */\n   static getFirstFocusableElement(element = document, options)\n   {\n      const focusableElements = this.getFocusableElements(element, options);\n\n      return focusableElements.length > 0 ? focusableElements[0] : void 0;\n   }\n\n   /**\n    * Returns all focusable elements within a specified element.\n    *\n    * @param {HTMLElement|Document} [element=document] Optional element to start query.\n    *\n    * @param {object}            [options] - Optional parameters.\n    *\n    * @param {boolean}           [options.anchorHref=true] - When true anchors must have an HREF.\n    *\n    * @param {Iterable<string>}  [options.ignoreClasses] - Iterable list of classes to ignore elements.\n    *\n    * @param {Set<HTMLElement>}  [options.ignoreElements] - Set of elements to ignore.\n    *\n    * @param {string}            [options.selectors] - Custom list of focusable selectors for `querySelectorAll`.\n    *\n    * @returns {Array<HTMLElement>} Child keyboard focusable\n    */\n   static getFocusableElements(element = document, { anchorHref = true, ignoreClasses, ignoreElements, selectors } = {})\n   {\n      if (!(element instanceof HTMLElement) && !(element instanceof Document))\n      {\n         throw new TypeError(`'element' is not a HTMLElement or Document instance.`);\n      }\n\n      if (typeof anchorHref !== 'boolean')\n      {\n         throw new TypeError(`'anchorHref' is not a boolean.`);\n      }\n\n      if (ignoreClasses !== void 0 && !isIterable(ignoreClasses))\n      {\n         throw new TypeError(`'ignoreClasses' is not an iterable list.`);\n      }\n\n      if (ignoreElements !== void 0 && !(ignoreElements instanceof Set))\n      {\n         throw new TypeError(`'ignoreElements' is not a Set.`);\n      }\n\n      if (selectors !== void 0 && typeof selectors !== 'string')\n      {\n         throw new TypeError(`'selectors' is not a string.`);\n      }\n\n      const selectorQuery = selectors ?? this.#getFocusableSelectors(anchorHref);\n\n      const allElements = [...element.querySelectorAll(selectorQuery)];\n\n      if (ignoreElements && ignoreClasses)\n      {\n         return allElements.filter((el) =>\n         {\n            let hasIgnoreClass = false;\n            for (const ignoreClass of ignoreClasses)\n            {\n               if (el.classList.contains(ignoreClass))\n               {\n                  hasIgnoreClass = true;\n                  break;\n               }\n            }\n\n            return !hasIgnoreClass && !ignoreElements.has(el) && el.style.display !== 'none' &&\n             el.style.visibility !== 'hidden' && !el.hasAttribute('disabled') && !el.hasAttribute('inert') &&\n              el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n      else if (ignoreClasses)\n      {\n         return allElements.filter((el) =>\n         {\n            let hasIgnoreClass = false;\n            for (const ignoreClass of ignoreClasses)\n            {\n               if (el.classList.contains(ignoreClass))\n               {\n                  hasIgnoreClass = true;\n                  break;\n               }\n            }\n\n            return !hasIgnoreClass && el.style.display !== 'none' && el.style.visibility !== 'hidden' &&\n             !el.hasAttribute('disabled') && !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n      else if (ignoreElements)\n      {\n         return allElements.filter((el) =>\n         {\n            return !ignoreElements.has(el) && el.style.display !== 'none' && el.style.visibility !== 'hidden' &&\n             !el.hasAttribute('disabled') && !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n      else\n      {\n         return allElements.filter((el) =>\n         {\n            return el.style.display !== 'none' && el.style.visibility !== 'hidden' && !el.hasAttribute('disabled') &&\n             !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n   }\n\n   /**\n    * Returns the default focusable selectors query.\n    *\n    * @param {boolean}  [anchorHref=true] - When true anchors must have an HREF.\n    *\n    * @returns {string} Focusable selectors for `querySelectorAll`.\n    */\n   static #getFocusableSelectors(anchorHref = true)\n   {\n      return `button, [contenteditable=\"\"], [contenteditable=\"true\"], details summary:not([tabindex=\"-1\"]), embed, a${\n       anchorHref ? '[href]' : ''}, iframe, object, input:not([type=hidden]), select, textarea, ` +\n        `[tabindex]:not([tabindex=\"-1\"])`;\n   }\n\n   /**\n    * Gets a A11yFocusSource object from the given DOM event allowing for optional X / Y screen space overrides.\n    * Browsers (Firefox / Chrome) forwards a mouse event for the context menu keyboard button. Provides detection of\n    * when the context menu event is from the keyboard. Firefox as of (1/23) does not provide the correct screen space\n    * coordinates, so for keyboard context menu presses coordinates are generated from the centroid point of the\n    * element.\n    *\n    * A default fallback element or selector string may be provided to provide the focus target. If the event comes from\n    * the keyboard however the source focused element is inserted as the target with the fallback value appended to the\n    * list of focus targets. When A11yFocusSource is applied by {@link A11yHelper.applyFocusSource} the target focus\n    * list is iterated through until a connected target is found and focus applied.\n    *\n    * @param {object} options - Options\n    *\n    * @param {KeyboardEvent|MouseEvent}   [options.event] - The source DOM event.\n    *\n    * @param {boolean} [options.debug] - When true {@link A11yHelper.applyFocusSource} logs focus target data.\n    *\n    * @param {HTMLElement|string} [options.focusEl] - A specific HTMLElement or selector string as the focus target.\n    *\n    * @param {number}   [options.x] - Used when an event isn't provided; integer of event source in screen space.\n    *\n    * @param {number}   [options.y] - Used when an event isn't provided; integer of event source in screen space.\n    *\n    * @returns {A11yFocusSource} A A11yFocusSource object.\n    *\n    * @see https://bugzilla.mozilla.org/show_bug.cgi?id=1426671\n    * @see https://bugzilla.mozilla.org/show_bug.cgi?id=314314\n    *\n    * TODO: Evaluate / test against touch input devices.\n    */\n   static getFocusSource({ event, x, y, focusEl, debug = false })\n   {\n      if (focusEl !== void 0 && !(focusEl instanceof HTMLElement) && typeof focusEl !== 'string')\n      {\n         throw new TypeError(\n          `A11yHelper.getFocusSource error: 'focusEl' is not a HTMLElement or string.`);\n      }\n\n      if (debug !== void 0 && typeof debug !== 'boolean')\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'debug' is not a boolean.`);\n      }\n\n      // Handle the case when no event is provided and x, y, or focusEl is explicitly defined.\n      if (event === void 0)\n      {\n         if (typeof x !== 'number')\n         {\n            throw new TypeError(`A11yHelper.getFocusSource error: 'event' not defined and 'x' is not a number.`);\n         }\n\n         if (typeof y !== 'number')\n         {\n            throw new TypeError(`A11yHelper.getFocusSource error: 'event' not defined and 'y' is not a number.`);\n         }\n\n         return {\n            debug,\n            focusEl: focusEl !== void 0 ? [focusEl] : void 0,\n            x,\n            y,\n         };\n      }\n\n      if (!(event instanceof KeyboardEvent) && !(event instanceof MouseEvent))\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'event' is not a KeyboardEvent or MouseEvent.`);\n      }\n\n      if (x !== void 0 && !Number.isInteger(x))\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'x' is not a number.`);\n      }\n\n      if (y !== void 0 && !Number.isInteger(y))\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'y' is not a number.`);\n      }\n\n      /** @type {HTMLElement} */\n      const targetEl = event.target;\n\n      if (!(targetEl instanceof HTMLElement))\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'event.target' is not an HTMLElement.`);\n      }\n\n      const result = { debug };\n\n      if (event instanceof MouseEvent)\n      {\n         // Firefox currently (1/23) does not correctly determine the location of a keyboard originated\n         // context menu location, so calculate position from middle of the event target.\n         // Firefox fires a mouse event for the context menu key.\n         if (event?.button !== 2 && event.type === 'contextmenu')\n         {\n            const rect = targetEl.getBoundingClientRect();\n            result.x = x ?? rect.left + (rect.width / 2);\n            result.y = y ?? rect.top + (rect.height / 2);\n            result.focusEl = focusEl !== void 0 ? [targetEl, focusEl] : [targetEl];\n            result.source = 'keyboard';\n         }\n         else\n         {\n            result.x = x ?? event.pageX;\n            result.y = y ?? event.pageY;\n            result.focusEl = focusEl !== void 0 ? [focusEl] : void 0;\n         }\n      }\n      else\n      {\n         const rect = targetEl.getBoundingClientRect();\n         result.x = x ?? rect.left + (rect.width / 2);\n         result.y = y ?? rect.top + (rect.height / 2);\n         result.focusEl = focusEl !== void 0 ? [targetEl, focusEl] : [targetEl];\n         result.source = 'keyboard';\n      }\n\n      return result;\n   }\n\n   /**\n    * Returns first focusable element within a specified element.\n    *\n    * @param {HTMLElement|Document} [element=document] - Optional element to start query.\n    *\n    * @param {object} [options] - Optional parameters.\n    *\n    * @param {Iterable<string>} [options.ignoreClasses] - Iterable list of classes to ignore elements.\n    *\n    * @param {Set<HTMLElement>} [options.ignoreElements] - Set of elements to ignore.\n    *\n    * @returns {HTMLElement} First focusable child element\n    */\n   static getLastFocusableElement(element = document, options)\n   {\n      const focusableElements = this.getFocusableElements(element, options);\n\n      return focusableElements.length > 0 ? focusableElements[focusableElements.length - 1] : void 0;\n   }\n\n   /**\n    * Tests if the given element is focusable.\n    *\n    * @param {HTMLElement} [el] - Element to test.\n    *\n    * @param {object} [options] - Optional parameters.\n    *\n    * @param {boolean} [options.anchorHref=true] - When true anchors must have an HREF.\n    *\n    * @param {Iterable<string>} [options.ignoreClasses] - Iterable list of classes to ignore elements.\n    *\n    * @returns {boolean} Element is focusable.\n    */\n   static isFocusable(el, { anchorHref = true, ignoreClasses } = {})\n   {\n      if (el === void 0 || el === null || !(el instanceof HTMLElement) || el?.hidden || !el?.isConnected)\n      {\n         return false;\n      }\n\n      if (typeof anchorHref !== 'boolean')\n      {\n         throw new TypeError(`'anchorHref' is not a boolean.`);\n      }\n\n      if (ignoreClasses !== void 0 && !isIterable(ignoreClasses))\n      {\n         throw new TypeError(`'ignoreClasses' is not an iterable list.`);\n      }\n\n      const contenteditableAttr = el.getAttribute('contenteditable');\n      const contenteditableFocusable = typeof contenteditableAttr === 'string' &&\n       (contenteditableAttr === '' || contenteditableAttr === 'true');\n\n      const tabindexAttr = el.getAttribute('tabindex');\n      const tabindexFocusable = typeof tabindexAttr === 'string' && tabindexAttr !== '-1';\n\n      const isAnchor = el instanceof HTMLAnchorElement;\n\n      if (contenteditableFocusable || tabindexFocusable || isAnchor || el instanceof HTMLButtonElement ||\n       el instanceof HTMLDetailsElement || el instanceof HTMLEmbedElement || el instanceof HTMLIFrameElement ||\n        el instanceof HTMLInputElement || el instanceof HTMLObjectElement || el instanceof HTMLSelectElement ||\n         el instanceof HTMLTextAreaElement)\n      {\n         if (isAnchor && anchorHref && typeof el.getAttribute('href') !== 'string')\n         {\n            return false;\n         }\n\n         return el.style.display !== 'none' && el.style.visibility !== 'hidden' && !el.hasAttribute('disabled') &&\n          !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n      }\n\n      return false;\n   }\n\n   /**\n    * Convenience method to check if the given data is a valid focus source.\n    *\n    * @param {HTMLElement|string}   data - Either an HTMLElement or selector string.\n    *\n    * @returns {boolean} Is valid focus source.\n    */\n   static isFocusSource(data)\n   {\n      return data instanceof HTMLElement || typeof data === 'string';\n   }\n}\n\n/**\n * @typedef {object} A11yFocusSource Provides essential data to return focus to an HTMLElement after a series of UI\n * actions like working with context menus and modal dialogs.\n *\n * @property {boolean} [debug] When true logs to console the actions taken in {@link A11yHelper.applyFocusSource}.\n *\n * @property {Iterable<HTMLElement|string>} [focusEl] List of targets to attempt to focus.\n *\n * @property {string} [source] The source of the event: 'keyboard' for instance.\n *\n * @property {number} [x] Potential X coordinate of initial event.\n *\n * @property {number} [y] Potential Y coordinate of initial event.\n */\n\n/**\n * Provides utility methods for checking browser capabilities.\n *\n * @see https://kilianvalkhof.com/2021/web/detecting-media-query-support-in-css-and-javascript/\n * TODO: perhaps add support for various standard media query checks for level 4 & 5.\n */\nclass BrowserSupports\n{\n   /**\n    * Check for container query support.\n    *\n    * @returns {boolean} True if container queries supported.\n    */\n   static get containerQueries()\n   {\n      return 'container' in document.documentElement.style;\n   }\n}\n\n/**\n * Provides access to the Clipboard API for reading / writing text strings. This requires a secure context.\n *\n * Note: `writeText` will attempt to use the older `execCommand` if available when `navigator.clipboard` is not\n * available.\n */\nclass ClipboardAccess\n{\n   /**\n    * Uses `navigator.clipboard` if available to read text from the clipboard.\n    *\n    * Note: Always returns `undefined` when `navigator.clipboard` is not available or the clipboard contains the\n    * empty string.\n    *\n    * @returns {Promise<string|undefined>} The current clipboard text or undefined.\n    */\n   static async readText()\n   {\n      let result;\n\n      if (globalThis?.navigator?.clipboard)\n      {\n         try\n         {\n            result = await globalThis.navigator.clipboard.readText();\n         }\n         catch (err) { /**/ }\n      }\n\n      return result === '' ? void 0 : result;\n   }\n\n   /**\n    * Uses `navigator.clipboard` if available then falls back to `document.execCommand('copy')` if available to copy\n    * the given text to the clipboard.\n    *\n    * @param {string}   text - Text to copy to the browser clipboard.\n    *\n    * @returns {Promise<boolean>} Copy successful.\n    */\n   static async writeText(text)\n   {\n      if (typeof text !== 'string')\n      {\n         throw new TypeError(`ClipboardAccess.writeText error: 'text' is not a string.`);\n      }\n\n      let success = false;\n\n      if (globalThis?.navigator?.clipboard)\n      {\n         try\n         {\n            await globalThis.navigator.clipboard.writeText(text);\n            success = true;\n         }\n         catch (err) { /**/ }\n      }\n      else if (globalThis?.document?.execCommand instanceof Function)\n      {\n         const textArea = globalThis.document.createElement('textarea');\n\n         // Place in the top-left corner of screen regardless of scroll position.\n         textArea.style.position = 'fixed';\n         textArea.style.top = '0';\n         textArea.style.left = '0';\n\n         // Ensure it has a small width and height. Setting to 1px / 1em\n         // doesn't work as this gives a negative w/h on some browsers.\n         textArea.style.width = '2em';\n         textArea.style.height = '2em';\n\n         // We don't need padding, reducing the size if it does flash render.\n         textArea.style.padding = '0';\n\n         // Clean up any borders.\n         textArea.style.border = 'none';\n         textArea.style.outline = 'none';\n         textArea.style.boxShadow = 'none';\n\n         // Avoid flash of the white box if rendered for any reason.\n         textArea.style.background = 'transparent';\n\n         textArea.value = text;\n\n         globalThis.document.body.appendChild(textArea);\n         textArea.focus();\n         textArea.select();\n\n         try\n         {\n            success = document.execCommand('copy');\n         }\n         catch (err) { /**/ }\n\n         document.body.removeChild(textArea);\n      }\n\n      return success;\n   }\n}\n\n/**\n * Recursive function that finds the closest parent stacking context.\n * See also https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n *\n * Original author: Kerry Liu / https://github.com/gwwar\n *\n * @see https://github.com/gwwar/z-context/blob/master/content-script.js\n * @see https://github.com/gwwar/z-context/blob/master/LICENSE\n *\n * @param {Element} node -\n *\n * @returns {StackingContext} The closest parent stacking context\n */\nfunction getStackingContext(node)\n{\n   // the root element (HTML).\n   if (!node || node.nodeName === 'HTML')\n   {\n      return { node: document.documentElement, reason: 'root' };\n   }\n\n   // handle shadow root elements.\n   if (node.nodeName === '#document-fragment')\n   {\n      return getStackingContext(node.host);\n   }\n\n   const computedStyle = globalThis.getComputedStyle(node);\n\n   // position: fixed or sticky.\n   if (computedStyle.position === 'fixed' || computedStyle.position === 'sticky')\n   {\n      return { node, reason: `position: ${computedStyle.position}` };\n   }\n\n   // positioned (absolutely or relatively) with a z-index value other than \"auto\".\n   if (computedStyle.zIndex !== 'auto' && computedStyle.position !== 'static')\n   {\n      return { node, reason: `position: ${computedStyle.position}; z-index: ${computedStyle.zIndex}` };\n   }\n\n   // elements with an opacity value less than 1.\n   if (computedStyle.opacity !== '1')\n   {\n      return { node, reason: `opacity: ${computedStyle.opacity}` };\n   }\n\n   // elements with a transform value other than \"none\".\n   if (computedStyle.transform !== 'none')\n   {\n      return { node, reason: `transform: ${computedStyle.transform}` };\n   }\n\n   // elements with a mix-blend-mode value other than \"normal\".\n   if (computedStyle.mixBlendMode !== 'normal')\n   {\n      return { node, reason: `mixBlendMode: ${computedStyle.mixBlendMode}` };\n   }\n\n   // elements with a filter value other than \"none\".\n   if (computedStyle.filter !== 'none')\n   {\n      return { node, reason: `filter: ${computedStyle.filter}` };\n   }\n\n   // elements with a perspective value other than \"none\".\n   if (computedStyle.perspective !== 'none')\n   {\n      return { node, reason: `perspective: ${computedStyle.perspective}` };\n   }\n\n   // elements with a clip-path value other than \"none\".\n   if (computedStyle.clipPath !== 'none')\n   {\n      return { node, reason: `clip-path: ${computedStyle.clipPath} ` };\n   }\n\n   // elements with a mask value other than \"none\".\n   const mask = computedStyle.mask || computedStyle.webkitMask;\n   if (mask !== 'none' && mask !== undefined)\n   {\n      return { node, reason: `mask:  ${mask}` };\n   }\n\n   // elements with a mask-image value other than \"none\".\n   const maskImage = computedStyle.maskImage || computedStyle.webkitMaskImage;\n   if (maskImage !== 'none' && maskImage !== undefined)\n   {\n      return { node, reason: `mask-image: ${maskImage}` };\n   }\n\n   // elements with a mask-border value other than \"none\".\n   const maskBorder = computedStyle.maskBorder || computedStyle.webkitMaskBorder;\n   if (maskBorder !== 'none' && maskBorder !== undefined)\n   {\n      return { node, reason: `mask-border: ${maskBorder}` };\n   }\n\n   // elements with isolation set to \"isolate\".\n   if (computedStyle.isolation === 'isolate')\n   {\n      return { node, reason: `isolation: ${computedStyle.isolation}` };\n   }\n\n   // transform or opacity in will-change even if you don't specify values for these attributes directly.\n   if (computedStyle.willChange === 'transform' || computedStyle.willChange === 'opacity')\n   {\n      return { node, reason: `willChange: ${computedStyle.willChange}` };\n   }\n\n   // elements with -webkit-overflow-scrolling set to \"touch\".\n   if (computedStyle.webkitOverflowScrolling === 'touch')\n   {\n      return { node, reason: '-webkit-overflow-scrolling: touch' };\n   }\n\n   // an item with a z-index value other than \"auto\".\n   if (computedStyle.zIndex !== 'auto')\n   {\n      const parentStyle = globalThis.getComputedStyle(node.parentNode);\n      // with a flex|inline-flex parent.\n      if (parentStyle.display === 'flex' || parentStyle.display === 'inline-flex')\n      {\n         return { node, reason: `flex-item; z-index: ${computedStyle.zIndex}` };\n         // with a grid parent.\n      }\n      else if (parentStyle.grid !== 'none / none / none / row / auto / auto')\n      {\n         return { node, reason: `child of grid container; z-index: ${computedStyle.zIndex}` };\n      }\n   }\n\n   // contain with a value of layout, or paint, or a composite value that includes either of them\n   const contain = computedStyle.contain;\n   if (['layout', 'paint', 'strict', 'content'].indexOf(contain) > -1 ||\n    contain.indexOf('paint') > -1 ||\n    contain.indexOf('layout') > -1\n   )\n   {\n      return { node, reason: `contain: ${contain}` };\n   }\n\n   return getStackingContext(node.parentNode);\n}\n\n/**\n * @typedef {object} StackingContext\n *\n * @property {Element} node - A DOM Element.\n *\n * @property {string}  reason - Reason for why a stacking context was created.\n */\n\n/**\n * Provides resources for parsing style strings.\n */\nclass StyleParse\n{\n   static #regexPixels = /(\\d+)\\s*px/;\n\n   /**\n    * Parses a pixel string / computed styles. Ex. `100px` returns `100`.\n    *\n    * @param {string}   value - Value to parse.\n    *\n    * @returns {number|undefined} The integer component of a pixel string.\n    */\n   static pixels(value)\n   {\n      if (typeof value !== 'string') { return void 0; }\n\n      const isPixels = this.#regexPixels.test(value);\n      const number = parseInt(value);\n\n      return isPixels && Number.isFinite(number) ? number : void 0;\n   }\n}\n\n/**\n * Provides a managed dynamic style sheet / element useful in configuring global CSS variables. When creating an\n * instance of TJSStyleManager you must provide a \"document key\" / string for the style element added. The style element\n * can be accessed via `document[docKey]`.\n *\n * Instances of TJSStyleManager can also be versioned by supplying a positive integer greater than or equal to `1` via\n * the 'version' option. This version number is assigned to the associated style element. When a TJSStyleManager\n * instance is created and there is an existing instance with a version that is lower than the current instance all CSS\n * rules are removed letting the higher version to take precedence. This isn't a perfect system and requires thoughtful\n * construction of CSS variables exposed, but allows multiple independently compiled TRL packages to load the latest\n * CSS variables. It is recommended to always set `overwrite` option of {@link TJSStyleManager.setProperty} and\n * {@link TJSStyleManager.setProperties} to `false` when loading initial values.\n */\nclass TJSStyleManager\n{\n   /** @type {CSSStyleRule} */\n   #cssRule;\n\n   /** @type {string} */\n   #docKey;\n\n   /** @type {string} */\n   #selector;\n\n   /** @type {HTMLStyleElement} */\n   #styleElement;\n\n   /** @type {number} */\n   #version;\n\n   /**\n    *\n    * @param {object}   opts - Options.\n    *\n    * @param {string}   opts.docKey - Required key providing a link to a specific style sheet element.\n    *\n    * @param {string}   [opts.selector=:root] - Selector element.\n    *\n    * @param {Document} [opts.document] - Target document to load styles into.\n    *\n    * @param {number}   [opts.version] - An integer representing the version / level of styles being managed.\n    */\n   constructor({ docKey, selector = ':root', document = globalThis.document, version } = {})\n   {\n      if (typeof docKey !== 'string') { throw new TypeError(`StyleManager error: 'docKey' is not a string.`); }\n\n      // TODO: Verify 'document' type from Popout FVTT module. For some reason the popout document trips this\n      //  unintentionally.\n      // if (!(document instanceof Document))\n      // {\n      //    throw new TypeError(`TJSStyleManager error: 'document' is not an instance of Document.`);\n      // }\n\n      if (typeof selector !== 'string') { throw new TypeError(`StyleManager error: 'selector' is not a string.`); }\n\n      if (version !== void 0 && !Number.isSafeInteger(version) && version < 1)\n      {\n         throw new TypeError(`StyleManager error: 'version' is defined and is not a positive integer >= 1.`);\n      }\n\n      this.#selector = selector;\n      this.#docKey = docKey;\n      this.#version = version;\n\n      if (document[this.#docKey] === void 0)\n      {\n         this.#styleElement = document.createElement('style');\n\n         document.head.append(this.#styleElement);\n\n         // Set initial style manager version if any supplied.\n         this.#styleElement._STYLE_MANAGER_VERSION = version;\n\n         this.#styleElement.sheet.insertRule(`${selector} {}`, 0);\n\n         this.#cssRule = this.#styleElement.sheet.cssRules[0];\n\n         document[docKey] = this.#styleElement;\n      }\n      else\n      {\n         this.#styleElement = document[docKey];\n         this.#cssRule = this.#styleElement.sheet.cssRules[0];\n\n         if (version)\n         {\n            const existingVersion = this.#styleElement._STYLE_MANAGER_VERSION ?? 0;\n\n            // Remove all existing CSS rules / text if version is greater than existing version.\n            if (version > existingVersion)\n            {\n               this.#cssRule.style.cssText = '';\n            }\n         }\n      }\n   }\n\n   /**\n    * @returns {string} Provides an accessor to get the `cssText` for the style sheet.\n    */\n   get cssText()\n   {\n      return this.#cssRule.style.cssText;\n   }\n\n   /**\n    * @returns {number} Returns the version of this instance.\n    */\n   get version()\n   {\n      return this.#version;\n   }\n\n   /**\n    * Provides a copy constructor to duplicate an existing TJSStyleManager instance into a new document.\n    *\n    * Note: This is used to support the `PopOut` module.\n    *\n    * @param {Document} [document] Target browser document to clone into.\n    *\n    * @returns {TJSStyleManager} New style manager instance.\n    */\n   clone(document = globalThis.document)\n   {\n      const newStyleManager = new TJSStyleManager({\n         selector: this.#selector,\n         docKey: this.#docKey,\n         document,\n         version: this.#version\n      });\n\n      newStyleManager.#cssRule.style.cssText = this.#cssRule.style.cssText;\n\n      return newStyleManager;\n   }\n\n   get()\n   {\n      const cssText = this.#cssRule.style.cssText;\n\n      const result = {};\n\n      if (cssText !== '')\n      {\n         for (const entry of cssText.split(';'))\n         {\n            if (entry !== '')\n            {\n               const values = entry.split(':');\n               result[values[0].trim()] = values[1];\n            }\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * Gets a particular CSS variable.\n    *\n    * @param {string}   key - CSS variable property key.\n    *\n    * @returns {string} Returns CSS variable value.\n    */\n   getProperty(key)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`StyleManager error: 'key' is not a string.`); }\n\n      return this.#cssRule.style.getPropertyValue(key);\n   }\n\n   /**\n    * Set rules by property / value; useful for CSS variables.\n    *\n    * @param {{ [key: string]: string }}  rules - An object with property / value string pairs to load.\n    *\n    * @param {boolean}                 [overwrite=true] - When true overwrites any existing values.\n    */\n   setProperties(rules, overwrite = true)\n   {\n      if (!isObject(rules)) { throw new TypeError(`StyleManager error: 'rules' is not an object.`); }\n\n      if (typeof overwrite !== 'boolean') { throw new TypeError(`StyleManager error: 'overwrite' is not a boolean.`); }\n\n      if (overwrite)\n      {\n         for (const [key, value] of Object.entries(rules))\n         {\n            this.#cssRule.style.setProperty(key, value);\n         }\n      }\n      else\n      {\n         // Only set property keys for entries that don't have an existing rule set.\n         for (const [key, value] of Object.entries(rules))\n         {\n            if (this.#cssRule.style.getPropertyValue(key) === '')\n            {\n               this.#cssRule.style.setProperty(key, value);\n            }\n         }\n      }\n   }\n\n   /**\n    * Sets a particular property.\n    *\n    * @param {string}   key - CSS variable property key.\n    *\n    * @param {string}   value - CSS variable value.\n    *\n    * @param {boolean}  [overwrite=true] - Overwrite any existing value.\n    */\n   setProperty(key, value, overwrite = true)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`StyleManager error: 'key' is not a string.`); }\n\n      if (typeof value !== 'string') { throw new TypeError(`StyleManager error: 'value' is not a string.`); }\n\n      if (typeof overwrite !== 'boolean') { throw new TypeError(`StyleManager error: 'overwrite' is not a boolean.`); }\n\n      if (overwrite)\n      {\n         this.#cssRule.style.setProperty(key, value);\n      }\n      else\n      {\n         if (this.#cssRule.style.getPropertyValue(key) === '')\n         {\n            this.#cssRule.style.setProperty(key, value);\n         }\n      }\n   }\n\n   /**\n    * Removes the property keys specified. If `keys` is an iterable list then all property keys in the list are removed.\n    *\n    * @param {Iterable<string>} keys - The property keys to remove.\n    */\n   removeProperties(keys)\n   {\n      if (!isIterable(keys)) { throw new TypeError(`StyleManager error: 'keys' is not an iterable list.`); }\n\n      for (const key of keys)\n      {\n         if (typeof key === 'string') { this.#cssRule.style.removeProperty(key); }\n      }\n   }\n\n   /**\n    * Removes a particular CSS variable.\n    *\n    * @param {string}   key - CSS variable property key.\n    *\n    * @returns {string} CSS variable value when removed.\n    */\n   removeProperty(key)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`StyleManager error: 'key' is not a string.`); }\n\n      return this.#cssRule.style.removeProperty(key);\n   }\n}\n\nexport { A11yHelper, BrowserSupports, ClipboardAccess, StyleParse, TJSStyleManager, getStackingContext, striptags };\n//# sourceMappingURL=index.js.map\n","const EPSILON = 0.000001;\n\nconst IDENTITY_2X2 = new Float32Array([\n    1, 0,\n    0, 1\n]);\n/**\n * A 2x2 Matrix\n */\nclass Mat2 extends Float32Array {\n    /**\n     * The number of bytes in a {@link Mat2}.\n     */\n    static BYTE_LENGTH = 4 * Float32Array.BYTES_PER_ELEMENT;\n    /**\n     * Create a {@link Mat2}.\n     */\n    constructor(...values) {\n        switch (values.length) {\n            case 4:\n                super(values);\n                break;\n            case 2:\n                super(values[0], values[1], 4);\n                break;\n            case 1:\n                const v = values[0];\n                if (typeof v === 'number') {\n                    super([\n                        v, v,\n                        v, v\n                    ]);\n                }\n                else {\n                    super(v, 0, 4);\n                }\n                break;\n            default:\n                super(IDENTITY_2X2);\n                break;\n        }\n    }\n    //============\n    // Attributes\n    //============\n    /**\n     * A string representation of `this`\n     * Equivalent to `Mat2.str(this);`\n     */\n    get str() {\n        return Mat2.str(this);\n    }\n    //===================\n    // Instance methods\n    //===================\n    /**\n     * Copy the values from another {@link Mat2} into `this`.\n     *\n     * @param a the source vector\n     * @returns `this`\n     */\n    copy(a) {\n        this.set(a);\n        return this;\n    }\n    /**\n     * Set `this` to the identity matrix\n     * Equivalent to Mat2.identity(this)\n     *\n     * @returns `this`\n     */\n    identity() {\n        this.set(IDENTITY_2X2);\n        return this;\n    }\n    /**\n     * Multiplies this {@link Mat2} against another one\n     * Equivalent to `Mat2.multiply(this, this, b);`\n     *\n     * @param out - The receiving Matrix\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `this`\n     */\n    multiply(b) {\n        return Mat2.multiply(this, this, b);\n    }\n    /**\n     * Alias for {@link Mat2.multiply}\n     */\n    mul(b) { return this; }\n    /**\n     * Transpose this {@link Mat2}\n     * Equivalent to `Mat2.transpose(this, this);`\n     *\n     * @returns `this`\n     */\n    transpose() {\n        return Mat2.transpose(this, this);\n    }\n    /**\n     * Inverts this {@link Mat2}\n     * Equivalent to `Mat4.invert(this, this);`\n     *\n     * @returns `this`\n     */\n    invert() {\n        return Mat2.invert(this, this);\n    }\n    /**\n     * Scales this {@link Mat2} by the dimensions in the given vec3 not using vectorization\n     * Equivalent to `Mat2.scale(this, this, v);`\n     *\n     * @param v - The {@link Vec2} to scale the matrix by\n     * @returns `this`\n     */\n    scale(v) {\n        return Mat2.scale(this, this, v);\n    }\n    /**\n     * Rotates this {@link Mat2} by the given angle around the given axis\n     * Equivalent to `Mat2.rotate(this, this, rad);`\n     *\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    rotate(rad) {\n        return Mat2.rotate(this, this, rad);\n    }\n    //================\n    // Static methods\n    //================\n    /**\n     * Creates a new, identity {@link Mat2}\n     * @category Static\n     *\n     * @returns A new {@link Mat2}\n     */\n    static create() {\n        return new Mat2();\n    }\n    /**\n     * Creates a new {@link Mat2} initialized with values from an existing matrix\n     * @category Static\n     *\n     * @param a - Matrix to clone\n     * @returns A new {@link Mat2}\n     */\n    static clone(a) {\n        return new Mat2(a);\n    }\n    /**\n     * Copy the values from one {@link Mat2} to another\n     * @category Static\n     *\n     * @param out - The receiving Matrix\n     * @param a - Matrix to copy\n     * @returns `out`\n     */\n    static copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        return out;\n    }\n    /**\n     * Create a new {@link Mat2} with the given values\n     * @category Static\n     *\n     * @param values - Matrix components\n     * @returns A new {@link Mat2}\n     */\n    static fromValues(...values) {\n        return new Mat2(...values);\n    }\n    /**\n     * Set the components of a {@link Mat2} to the given values\n     * @category Static\n     *\n     * @param out - The receiving matrix\n     * @param values - Matrix components\n     * @returns `out`\n     */\n    static set(out, ...values) {\n        out[0] = values[0];\n        out[1] = values[1];\n        out[2] = values[2];\n        out[3] = values[3];\n        return out;\n    }\n    /**\n     * Set a {@link Mat2} to the identity matrix\n     * @category Static\n     *\n     * @param out - The receiving matrix\n     * @returns `out`\n     */\n    static identity(out) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 1;\n        return out;\n    }\n    /**\n     * Transpose the values of a {@link Mat2}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the source matrix\n     * @returns `out`\n     */\n    static transpose(out, a) {\n        // If we are transposing ourselves we can skip a few steps but have to cache\n        // some values\n        if (out === a) {\n            let a1 = a[1];\n            out[1] = a[2];\n            out[2] = a1;\n        }\n        else {\n            out[0] = a[0];\n            out[1] = a[2];\n            out[2] = a[1];\n            out[3] = a[3];\n        }\n        return out;\n    }\n    /**\n     * Inverts a {@link Mat2}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the source matrix\n     * @returns `out`\n     */\n    static invert(out, a) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        // Calculate the determinant\n        let det = a0 * a3 - a2 * a1;\n        if (!det) {\n            return null;\n        }\n        det = 1.0 / det;\n        out[0] = a3 * det;\n        out[1] = -a1 * det;\n        out[2] = -a2 * det;\n        out[3] = a0 * det;\n        return out;\n    }\n    /**\n     * Calculates the adjugate of a {@link Mat2}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the source matrix\n     * @returns `out`\n     */\n    static adjoint(out, a) {\n        // Caching this value is necessary if out == a\n        const a0 = a[0];\n        out[0] = a[3];\n        out[1] = -a[1];\n        out[2] = -a[2];\n        out[3] = a0;\n        return out;\n    }\n    /**\n     * Calculates the determinant of a {@link Mat2}\n     * @category Static\n     *\n     * @param a - the source matrix\n     * @returns determinant of a\n     */\n    static determinant(a) {\n        return a[0] * a[3] - a[2] * a[1];\n    }\n    /**\n     * Adds two {@link Mat2}'s\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static add(out, a, b) {\n        out[0] = a[0] + b[0];\n        out[1] = a[1] + b[1];\n        out[2] = a[2] + b[2];\n        out[3] = a[3] + b[3];\n        return out;\n    }\n    /**\n     * Subtracts matrix b from matrix a\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static subtract(out, a, b) {\n        out[0] = a[0] - b[0];\n        out[1] = a[1] - b[1];\n        out[2] = a[2] - b[2];\n        out[3] = a[3] - b[3];\n        return out;\n    }\n    /**\n     * Alias for {@link Mat2.subtract}\n     * @category Static\n     */\n    static sub(out, a, b) { return out; }\n    /**\n     * Multiplies two {@link Mat2}s\n     * @category Static\n     *\n     * @param out - The receiving Matrix\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static multiply(out, a, b) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const b0 = b[0];\n        const b1 = b[1];\n        const b2 = b[2];\n        const b3 = b[3];\n        out[0] = a0 * b0 + a2 * b1;\n        out[1] = a1 * b0 + a3 * b1;\n        out[2] = a0 * b2 + a2 * b3;\n        out[3] = a1 * b2 + a3 * b3;\n        return out;\n    }\n    /**\n     * Alias for {@link Mat2.multiply}\n     * @category Static\n     */\n    static mul(out, a, b) { return out; }\n    /**\n     * Rotates a {@link Mat2} by the given angle\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to rotate\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    static rotate(out, a, rad) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const s = Math.sin(rad);\n        const c = Math.cos(rad);\n        out[0] = a0 * c + a2 * s;\n        out[1] = a1 * c + a3 * s;\n        out[2] = a0 * -s + a2 * c;\n        out[3] = a1 * -s + a3 * c;\n        return out;\n    }\n    /**\n     * Scales the {@link Mat2} by the dimensions in the given {@link Vec2}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to scale\n     * @param v - the {@link Vec2} to scale the matrix by\n     * @returns `out`\n     **/\n    static scale(out, a, v) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const v0 = v[0];\n        const v1 = v[1];\n        out[0] = a0 * v0;\n        out[1] = a1 * v0;\n        out[2] = a2 * v1;\n        out[3] = a3 * v1;\n        return out;\n    }\n    /**\n     * Creates a {@link Mat2} from a given angle around a given axis\n     * This is equivalent to (but much faster than):\n     *\n     *     mat2.identity(dest);\n     *     mat2.rotate(dest, dest, rad);\n     * @category Static\n     *\n     * @param out - {@link Mat2} receiving operation result\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    static fromRotation(out, rad) {\n        const s = Math.sin(rad);\n        const c = Math.cos(rad);\n        out[0] = c;\n        out[1] = s;\n        out[2] = -s;\n        out[3] = c;\n        return out;\n    }\n    /**\n     * Creates a {@link Mat2} from a vector scaling\n     * This is equivalent to (but much faster than):\n     *\n     *     mat2.identity(dest);\n     *     mat2.scale(dest, dest, vec);\n     * @category Static\n     *\n     * @param out - {@link Mat2} receiving operation result\n     * @param v - Scaling vector\n     * @returns `out`\n     */\n    static fromScaling(out, v) {\n        out[0] = v[0];\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = v[1];\n        return out;\n    }\n    /**\n     * Returns Frobenius norm of a {@link Mat2}\n     * @category Static\n     *\n     * @param a - the matrix to calculate Frobenius norm of\n     * @returns Frobenius norm\n     */\n    static frob(a) {\n        return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3]);\n    }\n    /**\n     * Multiply each element of a {@link Mat2} by a scalar.\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to scale\n     * @param b - amount to scale the matrix's elements by\n     * @returns `out`\n     */\n    static multiplyScalar(out, a, b) {\n        out[0] = a[0] * b;\n        out[1] = a[1] * b;\n        out[2] = a[2] * b;\n        out[3] = a[3] * b;\n        return out;\n    }\n    /**\n     * Adds two {@link Mat2}'s after multiplying each element of the second operand by a scalar value.\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param scale - the amount to scale b's elements by before adding\n     * @returns `out`\n     */\n    static multiplyScalarAndAdd(out, a, b, scale) {\n        out[0] = a[0] + b[0] * scale;\n        out[1] = a[1] + b[1] * scale;\n        out[2] = a[2] + b[2] * scale;\n        out[3] = a[3] + b[3] * scale;\n        return out;\n    }\n    /**\n     * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n     * @category Static\n     *\n     * @param L - the lower triangular matrix\n     * @param D - the diagonal matrix\n     * @param U - the upper triangular matrix\n     * @param a - the input matrix to factorize\n     */\n    static LDU(L, D, U, a) {\n        L[2] = a[2] / a[0];\n        U[0] = a[0];\n        U[1] = a[1];\n        U[3] = a[3] - L[2] * U[1];\n        return [L, D, U];\n    }\n    /**\n     * Returns whether or not two {@link Mat2}s have exactly the same elements in the same position (when compared with ===)\n     * @category Static\n     *\n     * @param a - The first matrix.\n     * @param b - The second matrix.\n     * @returns True if the matrices are equal, false otherwise.\n     */\n    static exactEquals(a, b) {\n        return (a[0] === b[0] &&\n            a[1] === b[1] &&\n            a[2] === b[2] &&\n            a[3] === b[3]);\n    }\n    /**\n     * Returns whether or not two {@link Mat2}s have approximately the same elements in the same position.\n     * @category Static\n     *\n     * @param a - The first matrix.\n     * @param b - The second matrix.\n     * @returns True if the matrices are equal, false otherwise.\n     */\n    static equals(a, b) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const b0 = b[0];\n        const b1 = b[1];\n        const b2 = b[2];\n        const b3 = b[3];\n        return (Math.abs(a0 - b0) <= EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3)));\n    }\n    /**\n     * Returns a string representation of a {@link Mat2}\n     * @category Static\n     *\n     * @param a - matrix to represent as a string\n     * @returns string representation of the matrix\n     */\n    static str(a) {\n        return `Mat2(${a.join(', ')})`;\n    }\n}\n// Instance method alias assignments\nMat2.prototype.mul = Mat2.prototype.multiply;\n// Static method alias assignments\nMat2.mul = Mat2.multiply;\nMat2.sub = Mat2.subtract;\n\nconst IDENTITY_2X3 = new Float32Array([\n    1, 0,\n    0, 1,\n    0, 0,\n]);\n/**\n * A 2x3 Matrix\n */\nclass Mat2d extends Float32Array {\n    /**\n     * The number of bytes in a {@link Mat2d}.\n     */\n    static BYTE_LENGTH = 6 * Float32Array.BYTES_PER_ELEMENT;\n    /**\n     * Create a {@link Mat2}.\n     */\n    constructor(...values) {\n        switch (values.length) {\n            case 6:\n                super(values);\n                break;\n            case 2:\n                super(values[0], values[1], 6);\n                break;\n            case 1:\n                const v = values[0];\n                if (typeof v === 'number') {\n                    super([\n                        v, v,\n                        v, v,\n                        v, v\n                    ]);\n                }\n                else {\n                    super(v, 0, 6);\n                }\n                break;\n            default:\n                super(IDENTITY_2X3);\n                break;\n        }\n    }\n    //============\n    // Attributes\n    //============\n    /**\n     * A string representation of `this`\n     * Equivalent to `Mat2d.str(this);`\n     */\n    get str() {\n        return Mat2d.str(this);\n    }\n    //===================\n    // Instances methods\n    //===================\n    /**\n     * Copy the values from another {@link Mat2d} into `this`.\n     *\n     * @param a the source vector\n     * @returns `this`\n     */\n    copy(a) {\n        this.set(a);\n        return this;\n    }\n    /**\n     * Set `this` to the identity matrix\n     * Equivalent to Mat2d.identity(this)\n     *\n     * @returns `this`\n     */\n    identity() {\n        this.set(IDENTITY_2X3);\n        return this;\n    }\n    /**\n     * Multiplies this {@link Mat2d} against another one\n     * Equivalent to `Mat2d.multiply(this, this, b);`\n     *\n     * @param out - The receiving Matrix\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `this`\n     */\n    multiply(b) {\n        return Mat2d.multiply(this, this, b);\n    }\n    /**\n     * Alias for {@link Mat2d.multiply}\n     */\n    mul(b) { return this; }\n    /**\n     * Translate this {@link Mat2d} by the given vector\n     * Equivalent to `Mat2d.translate(this, this, v);`\n     *\n     * @param v - The {@link Vec2} to translate by\n     * @returns `this`\n     */\n    translate(v) {\n        return Mat2d.translate(this, this, v);\n    }\n    /**\n     * Rotates this {@link Mat2d} by the given angle around the given axis\n     * Equivalent to `Mat2d.rotate(this, this, rad);`\n     *\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    rotate(rad) {\n        return Mat2d.rotate(this, this, rad);\n    }\n    /**\n     * Scales this {@link Mat2d} by the dimensions in the given vec3 not using vectorization\n     * Equivalent to `Mat2d.scale(this, this, v);`\n     *\n     * @param v - The {@link Vec2} to scale the matrix by\n     * @returns `this`\n     */\n    scale(v) {\n        return Mat2d.scale(this, this, v);\n    }\n    //================\n    // Static methods\n    //================\n    /**\n     * Creates a new, identity {@link Mat2d}\n     * @category Static\n     *\n     * @returns A new {@link Mat2d}\n     */\n    static create() {\n        return new Mat2d();\n    }\n    /**\n     * Creates a new {@link Mat2d} initialized with values from an existing matrix\n     * @category Static\n     *\n     * @param a - Matrix to clone\n     * @returns A new {@link Mat2d}\n     */\n    static clone(a) {\n        return new Mat2d(a);\n    }\n    /**\n     * Copy the values from one {@link Mat2d} to another\n     * @category Static\n     *\n     * @param out - The receiving Matrix\n     * @param a - Matrix to copy\n     * @returns `out`\n     */\n    static copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        out[4] = a[4];\n        out[5] = a[5];\n        return out;\n    }\n    /**\n     * Create a new {@link Mat2d} with the given values\n     * @category Static\n     *\n     * @param values - Matrix components\n     * @returns A new {@link Mat2d}\n     */\n    static fromValues(...values) {\n        return new Mat2d(...values);\n    }\n    /**\n     * Set the components of a {@link Mat2d} to the given values\n     * @category Static\n     *\n     * @param out - The receiving matrix\n     * @param values - Matrix components\n     * @returns `out`\n     */\n    static set(out, ...values) {\n        out[0] = values[0];\n        out[1] = values[1];\n        out[2] = values[2];\n        out[3] = values[3];\n        out[4] = values[4];\n        out[5] = values[5];\n        return out;\n    }\n    /**\n     * Set a {@link Mat2d} to the identity matrix\n     * @category Static\n     *\n     * @param out - The receiving matrix\n     * @returns `out`\n     */\n    static identity(out) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 1;\n        out[4] = 0;\n        out[5] = 0;\n        return out;\n    }\n    /**\n     * Inverts a {@link Mat2d}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the source matrix\n     * @returns `out`\n     */\n    static invert(out, a) {\n        const aa = a[0];\n        const ab = a[1];\n        const ac = a[2];\n        const ad = a[3];\n        const atx = a[4];\n        const aty = a[5];\n        let det = aa * ad - ab * ac;\n        if (!det) {\n            return null;\n        }\n        det = 1.0 / det;\n        out[0] = ad * det;\n        out[1] = -ab * det;\n        out[2] = -ac * det;\n        out[3] = aa * det;\n        out[4] = (ac * aty - ad * atx) * det;\n        out[5] = (ab * atx - aa * aty) * det;\n        return out;\n    }\n    /**\n     * Calculates the determinant of a {@link Mat2d}\n     * @category Static\n     *\n     * @param a - the source matrix\n     * @returns determinant of a\n     */\n    static determinant(a) {\n        return a[0] * a[3] - a[1] * a[2];\n    }\n    /**\n     * Adds two {@link Mat2d}'s\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static add(out, a, b) {\n        out[0] = a[0] + b[0];\n        out[1] = a[1] + b[1];\n        out[2] = a[2] + b[2];\n        out[3] = a[3] + b[3];\n        out[4] = a[4] + b[4];\n        out[5] = a[5] + b[5];\n        return out;\n    }\n    /**\n     * Subtracts matrix b from matrix a\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static subtract(out, a, b) {\n        out[0] = a[0] - b[0];\n        out[1] = a[1] - b[1];\n        out[2] = a[2] - b[2];\n        out[3] = a[3] - b[3];\n        out[4] = a[4] - b[4];\n        out[5] = a[5] - b[5];\n        return out;\n    }\n    /**\n     * Alias for {@link Mat2d.subtract}\n     * @category Static\n     */\n    static sub(out, a, b) { return out; }\n    /**\n     * Multiplies two {@link Mat2d}s\n     * @category Static\n     *\n     * @param out - The receiving Matrix\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static multiply(out, a, b) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const a4 = a[4];\n        const a5 = a[5];\n        const b0 = b[0];\n        const b1 = b[1];\n        const b2 = b[2];\n        const b3 = b[3];\n        const b4 = b[4];\n        const b5 = b[5];\n        out[0] = a0 * b0 + a2 * b1;\n        out[1] = a1 * b0 + a3 * b1;\n        out[2] = a0 * b2 + a2 * b3;\n        out[3] = a1 * b2 + a3 * b3;\n        out[4] = a0 * b4 + a2 * b5 + a4;\n        out[5] = a1 * b4 + a3 * b5 + a5;\n        return out;\n    }\n    /**\n     * Alias for {@link Mat2d.multiply}\n     * @category Static\n     */\n    static mul(out, a, b) { return out; }\n    /**\n     * Translate a {@link Mat2d} by the given vector\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to translate\n     * @param v - vector to translate by\n     * @returns `out`\n     */\n    static translate(out, a, v) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const a4 = a[4];\n        const a5 = a[5];\n        const v0 = v[0];\n        const v1 = v[1];\n        out[0] = a0;\n        out[1] = a1;\n        out[2] = a2;\n        out[3] = a3;\n        out[4] = a0 * v0 + a2 * v1 + a4;\n        out[5] = a1 * v0 + a3 * v1 + a5;\n        return out;\n    }\n    /**\n     * Rotates a {@link Mat2d} by the given angle\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to rotate\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    static rotate(out, a, rad) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const a4 = a[4];\n        const a5 = a[5];\n        const s = Math.sin(rad);\n        const c = Math.cos(rad);\n        out[0] = a0 * c + a2 * s;\n        out[1] = a1 * c + a3 * s;\n        out[2] = a0 * -s + a2 * c;\n        out[3] = a1 * -s + a3 * c;\n        out[4] = a4;\n        out[5] = a5;\n        return out;\n    }\n    /**\n     * Scales the {@link Mat2d} by the dimensions in the given {@link Vec2}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to scale\n     * @param v - the {@link Vec2} to scale the matrix by\n     * @returns `out`\n     **/\n    static scale(out, a, v) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const a4 = a[4];\n        const a5 = a[5];\n        const v0 = v[0];\n        const v1 = v[1];\n        out[0] = a0 * v0;\n        out[1] = a1 * v0;\n        out[2] = a2 * v1;\n        out[3] = a3 * v1;\n        out[4] = a4;\n        out[5] = a5;\n        return out;\n    }\n    // TODO: Got to fromRotation\n    /**\n     * Creates a {@link Mat2d} from a vector translation\n     * This is equivalent to (but much faster than):\n     *\n     *     Mat2d.identity(dest);\n     *     Mat2d.translate(dest, dest, vec);\n     * @category Static\n     *\n     * @param out - {@link Mat2d} receiving operation result\n     * @param v - Translation vector\n     * @returns `out`\n     */\n    static fromTranslation(out, v) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 1;\n        out[4] = v[0];\n        out[5] = v[1];\n        return out;\n    }\n    /**\n     * Creates a {@link Mat2d} from a given angle around a given axis\n     * This is equivalent to (but much faster than):\n     *\n     *     Mat2d.identity(dest);\n     *     Mat2d.rotate(dest, dest, rad);\n     * @category Static\n     *\n     * @param out - {@link Mat2d} receiving operation result\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    static fromRotation(out, rad) {\n        const s = Math.sin(rad);\n        const c = Math.cos(rad);\n        out[0] = c;\n        out[1] = s;\n        out[2] = -s;\n        out[3] = c;\n        out[4] = 0;\n        out[5] = 0;\n        return out;\n    }\n    /**\n     * Creates a {@link Mat2d} from a vector scaling\n     * This is equivalent to (but much faster than):\n     *\n     *     Mat2d.identity(dest);\n     *     Mat2d.scale(dest, dest, vec);\n     * @category Static\n     *\n     * @param out - {@link Mat2d} receiving operation result\n     * @param v - Scaling vector\n     * @returns `out`\n     */\n    static fromScaling(out, v) {\n        out[0] = v[0];\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = v[1];\n        out[4] = 0;\n        out[5] = 0;\n        return out;\n    }\n    /**\n     * Returns Frobenius norm of a {@link Mat2d}\n     * @category Static\n     *\n     * @param a - the matrix to calculate Frobenius norm of\n     * @returns Frobenius norm\n     */\n    static frob(a) {\n        return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3] + a[4] * a[4] + a[5] * a[5] + 1);\n    }\n    /**\n     * Multiply each element of a {@link Mat2d} by a scalar.\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to scale\n     * @param b - amount to scale the matrix's elements by\n     * @returns `out`\n     */\n    static multiplyScalar(out, a, b) {\n        out[0] = a[0] * b;\n        out[1] = a[1] * b;\n        out[2] = a[2] * b;\n        out[3] = a[3] * b;\n        out[4] = a[4] * b;\n        out[5] = a[5] * b;\n        return out;\n    }\n    /**\n     * Adds two {@link Mat2d}'s after multiplying each element of the second operand by a scalar value.\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param scale - the amount to scale b's elements by before adding\n     * @returns `out`\n     */\n    static multiplyScalarAndAdd(out, a, b, scale) {\n        out[0] = a[0] + b[0] * scale;\n        out[1] = a[1] + b[1] * scale;\n        out[2] = a[2] + b[2] * scale;\n        out[3] = a[3] + b[3] * scale;\n        out[4] = a[4] + b[4] * scale;\n        out[5] = a[5] + b[5] * scale;\n        return out;\n    }\n    /**\n     * Returns whether or not two {@link Mat2d}s have exactly the same elements in the same position (when compared with ===)\n     * @category Static\n     *\n     * @param a - The first matrix.\n     * @param b - The second matrix.\n     * @returns True if the matrices are equal, false otherwise.\n     */\n    static exactEquals(a, b) {\n        return (a[0] === b[0] &&\n            a[1] === b[1] &&\n            a[2] === b[2] &&\n            a[3] === b[3] &&\n            a[4] === b[4] &&\n            a[5] === b[5]);\n    }\n    /**\n     * Returns whether or not two {@link Mat2d}s have approximately the same elements in the same position.\n     * @category Static\n     *\n     * @param a - The first matrix.\n     * @param b - The second matrix.\n     * @returns True if the matrices are equal, false otherwise.\n     */\n    static equals(a, b) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const a4 = a[4];\n        const a5 = a[5];\n        const b0 = b[0];\n        const b1 = b[1];\n        const b2 = b[2];\n        const b3 = b[3];\n        const b4 = b[4];\n        const b5 = b[5];\n        return (Math.abs(a0 - b0) <= EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3)) &&\n            Math.abs(a4 - b4) <= EPSILON * Math.max(1, Math.abs(a4), Math.abs(b4)) &&\n            Math.abs(a5 - b5) <= EPSILON * Math.max(1, Math.abs(a5), Math.abs(b5)));\n    }\n    /**\n     * Returns a string representation of a {@link Mat2d}\n     * @category Static\n     *\n     * @param a - matrix to represent as a string\n     * @returns string representation of the matrix\n     */\n    static str(a) {\n        return `Mat2d(${a.join(', ')})`;\n    }\n}\n// Static method alias assignments\nMat2d.mul = Mat2d.multiply;\nMat2d.sub = Mat2d.subtract;\n\nconst IDENTITY_3X3 = new Float32Array([\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1,\n]);\n/**\n * A 3x3 Matrix\n */\nclass Mat3 extends Float32Array {\n    /**\n     * The number of bytes in a {@link Mat3}.\n     */\n    static BYTE_LENGTH = 9 * Float32Array.BYTES_PER_ELEMENT;\n    /**\n     * Create a {@link Mat3}.\n     */\n    constructor(...values) {\n        switch (values.length) {\n            case 9:\n                super(values);\n                break;\n            case 2:\n                super(values[0], values[1], 9);\n                break;\n            case 1:\n                const v = values[0];\n                if (typeof v === 'number') {\n                    super([\n                        v, v, v,\n                        v, v, v,\n                        v, v, v\n                    ]);\n                }\n                else {\n                    super(v, 0, 9);\n                }\n                break;\n            default:\n                super(IDENTITY_3X3);\n                break;\n        }\n    }\n    //============\n    // Attributes\n    //============\n    /**\n     * A string representation of `this`\n     * Equivalent to `Mat3.str(this);`\n     */\n    get str() {\n        return Mat3.str(this);\n    }\n    //===================\n    // Instance methods\n    //===================\n    /**\n     * Copy the values from another {@link Mat3} into `this`.\n     *\n     * @param a the source vector\n     * @returns `this`\n     */\n    copy(a) {\n        this.set(a);\n        return this;\n    }\n    /**\n     * Set `this` to the identity matrix\n     * Equivalent to Mat3.identity(this)\n     *\n     * @returns `this`\n     */\n    identity() {\n        this.set(IDENTITY_3X3);\n        return this;\n    }\n    /**\n     * Multiplies this {@link Mat3} against another one\n     * Equivalent to `Mat3.multiply(this, this, b);`\n     *\n     * @param out - The receiving Matrix\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `this`\n     */\n    multiply(b) {\n        return Mat3.multiply(this, this, b);\n    }\n    /**\n     * Alias for {@link Mat3.multiply}\n     */\n    mul(b) { return this; }\n    /**\n     * Transpose this {@link Mat3}\n     * Equivalent to `Mat3.transpose(this, this);`\n     *\n     * @returns `this`\n     */\n    transpose() {\n        return Mat3.transpose(this, this);\n    }\n    /**\n     * Inverts this {@link Mat3}\n     * Equivalent to `Mat4.invert(this, this);`\n     *\n     * @returns `this`\n     */\n    invert() {\n        return Mat3.invert(this, this);\n    }\n    /**\n     * Translate this {@link Mat3} by the given vector\n     * Equivalent to `Mat3.translate(this, this, v);`\n     *\n     * @param v - The {@link Vec2} to translate by\n     * @returns `this`\n     */\n    translate(v) {\n        return Mat3.translate(this, this, v);\n    }\n    /**\n     * Rotates this {@link Mat3} by the given angle around the given axis\n     * Equivalent to `Mat3.rotate(this, this, rad);`\n     *\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    rotate(rad) {\n        return Mat3.rotate(this, this, rad);\n    }\n    /**\n     * Scales this {@link Mat3} by the dimensions in the given vec3 not using vectorization\n     * Equivalent to `Mat3.scale(this, this, v);`\n     *\n     * @param v - The {@link Vec2} to scale the matrix by\n     * @returns `this`\n     */\n    scale(v) {\n        return Mat3.scale(this, this, v);\n    }\n    //================\n    // Static methods\n    //================\n    /**\n     * Creates a new, identity {@link Mat3}\n     * @category Static\n     *\n     * @returns A new {@link Mat3}\n     */\n    static create() {\n        return new Mat3();\n    }\n    /**\n     * Creates a new {@link Mat3} initialized with values from an existing matrix\n     * @category Static\n     *\n     * @param a - Matrix to clone\n     * @returns A new {@link Mat3}\n     */\n    static clone(a) {\n        return new Mat3(a);\n    }\n    /**\n     * Copy the values from one {@link Mat3} to another\n     * @category Static\n     *\n     * @param out - The receiving Matrix\n     * @param a - Matrix to copy\n     * @returns `out`\n     */\n    static copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        out[4] = a[4];\n        out[5] = a[5];\n        out[6] = a[6];\n        out[7] = a[7];\n        out[8] = a[8];\n        return out;\n    }\n    /**\n     * Create a new {@link Mat3} with the given values\n     * @category Static\n     *\n     * @param values - Matrix components\n     * @returns A new {@link Mat3}\n     */\n    static fromValues(...values) {\n        return new Mat3(...values);\n    }\n    /**\n     * Set the components of a {@link Mat3} to the given values\n     * @category Static\n     *\n     * @param out - The receiving matrix\n     * @param values - Matrix components\n     * @returns `out`\n     */\n    static set(out, ...values) {\n        out[0] = values[0];\n        out[1] = values[1];\n        out[2] = values[2];\n        out[3] = values[3];\n        out[4] = values[4];\n        out[5] = values[5];\n        out[6] = values[6];\n        out[7] = values[7];\n        out[8] = values[8];\n        return out;\n    }\n    /**\n     * Set a {@link Mat3} to the identity matrix\n     * @category Static\n     *\n     * @param out - The receiving matrix\n     * @returns `out`\n     */\n    static identity(out) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 1;\n        out[5] = 0;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 1;\n        return out;\n    }\n    /**\n     * Transpose the values of a {@link Mat3}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the source matrix\n     * @returns `out`\n     */\n    static transpose(out, a) {\n        // If we are transposing ourselves we can skip a few steps but have to cache some values\n        if (out === a) {\n            const a01 = a[1], a02 = a[2], a12 = a[5];\n            out[1] = a[3];\n            out[2] = a[6];\n            out[3] = a01;\n            out[5] = a[7];\n            out[6] = a02;\n            out[7] = a12;\n        }\n        else {\n            out[0] = a[0];\n            out[1] = a[3];\n            out[2] = a[6];\n            out[3] = a[1];\n            out[4] = a[4];\n            out[5] = a[7];\n            out[6] = a[2];\n            out[7] = a[5];\n            out[8] = a[8];\n        }\n        return out;\n    }\n    /**\n     * Inverts a {@link Mat3}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the source matrix\n     * @returns `out`\n     */\n    static invert(out, a) {\n        const a00 = a[0], a01 = a[1], a02 = a[2];\n        const a10 = a[3], a11 = a[4], a12 = a[5];\n        const a20 = a[6], a21 = a[7], a22 = a[8];\n        const b01 = a22 * a11 - a12 * a21;\n        const b11 = -a22 * a10 + a12 * a20;\n        const b21 = a21 * a10 - a11 * a20;\n        // Calculate the determinant\n        let det = a00 * b01 + a01 * b11 + a02 * b21;\n        if (!det) {\n            return null;\n        }\n        det = 1.0 / det;\n        out[0] = b01 * det;\n        out[1] = (-a22 * a01 + a02 * a21) * det;\n        out[2] = (a12 * a01 - a02 * a11) * det;\n        out[3] = b11 * det;\n        out[4] = (a22 * a00 - a02 * a20) * det;\n        out[5] = (-a12 * a00 + a02 * a10) * det;\n        out[6] = b21 * det;\n        out[7] = (-a21 * a00 + a01 * a20) * det;\n        out[8] = (a11 * a00 - a01 * a10) * det;\n        return out;\n    }\n    /**\n     * Calculates the adjugate of a {@link Mat3}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the source matrix\n     * @returns `out`\n     */\n    static adjoint(out, a) {\n        const a00 = a[0];\n        const a01 = a[1];\n        const a02 = a[2];\n        const a10 = a[3];\n        const a11 = a[4];\n        const a12 = a[5];\n        const a20 = a[6];\n        const a21 = a[7];\n        const a22 = a[8];\n        out[0] = a11 * a22 - a12 * a21;\n        out[1] = a02 * a21 - a01 * a22;\n        out[2] = a01 * a12 - a02 * a11;\n        out[3] = a12 * a20 - a10 * a22;\n        out[4] = a00 * a22 - a02 * a20;\n        out[5] = a02 * a10 - a00 * a12;\n        out[6] = a10 * a21 - a11 * a20;\n        out[7] = a01 * a20 - a00 * a21;\n        out[8] = a00 * a11 - a01 * a10;\n        return out;\n    }\n    /**\n     * Calculates the determinant of a {@link Mat3}\n     * @category Static\n     *\n     * @param a - the source matrix\n     * @returns determinant of a\n     */\n    static determinant(a) {\n        const a00 = a[0];\n        const a01 = a[1];\n        const a02 = a[2];\n        const a10 = a[3];\n        const a11 = a[4];\n        const a12 = a[5];\n        const a20 = a[6];\n        const a21 = a[7];\n        const a22 = a[8];\n        return (a00 * (a22 * a11 - a12 * a21) +\n            a01 * (-a22 * a10 + a12 * a20) +\n            a02 * (a21 * a10 - a11 * a20));\n    }\n    /**\n     * Adds two {@link Mat3}'s\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static add(out, a, b) {\n        out[0] = a[0] + b[0];\n        out[1] = a[1] + b[1];\n        out[2] = a[2] + b[2];\n        out[3] = a[3] + b[3];\n        out[4] = a[4] + b[4];\n        out[5] = a[5] + b[5];\n        out[6] = a[6] + b[6];\n        out[7] = a[7] + b[7];\n        out[8] = a[8] + b[8];\n        return out;\n    }\n    /**\n     * Subtracts matrix b from matrix a\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static subtract(out, a, b) {\n        out[0] = a[0] - b[0];\n        out[1] = a[1] - b[1];\n        out[2] = a[2] - b[2];\n        out[3] = a[3] - b[3];\n        out[4] = a[4] - b[4];\n        out[5] = a[5] - b[5];\n        out[6] = a[6] - b[6];\n        out[7] = a[7] - b[7];\n        out[8] = a[8] - b[8];\n        return out;\n    }\n    /**\n     * Alias for {@link Mat3.subtract}\n     * @category Static\n     */\n    static sub(out, a, b) { return out; }\n    /**\n     * Multiplies two {@link Mat3}s\n     * @category Static\n     *\n     * @param out - The receiving Matrix\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static multiply(out, a, b) {\n        const a00 = a[0];\n        const a01 = a[1];\n        const a02 = a[2];\n        const a10 = a[3];\n        const a11 = a[4];\n        const a12 = a[5];\n        const a20 = a[6];\n        const a21 = a[7];\n        const a22 = a[8];\n        let b0 = b[0];\n        let b1 = b[1];\n        let b2 = b[2];\n        out[0] = b0 * a00 + b1 * a10 + b2 * a20;\n        out[1] = b0 * a01 + b1 * a11 + b2 * a21;\n        out[2] = b0 * a02 + b1 * a12 + b2 * a22;\n        b0 = b[3];\n        b1 = b[4];\n        b2 = b[5];\n        out[3] = b0 * a00 + b1 * a10 + b2 * a20;\n        out[4] = b0 * a01 + b1 * a11 + b2 * a21;\n        out[5] = b0 * a02 + b1 * a12 + b2 * a22;\n        b0 = b[6];\n        b1 = b[7];\n        b2 = b[8];\n        out[6] = b0 * a00 + b1 * a10 + b2 * a20;\n        out[7] = b0 * a01 + b1 * a11 + b2 * a21;\n        out[8] = b0 * a02 + b1 * a12 + b2 * a22;\n        return out;\n    }\n    /**\n     * Alias for {@link Mat3.multiply}\n     * @category Static\n     */\n    static mul(out, a, b) { return out; }\n    /**\n     * Translate a {@link Mat3} by the given vector\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to translate\n     * @param v - vector to translate by\n     * @returns `out`\n     */\n    static translate(out, a, v) {\n        const a00 = a[0];\n        const a01 = a[1];\n        const a02 = a[2];\n        const a10 = a[3];\n        const a11 = a[4];\n        const a12 = a[5];\n        const a20 = a[6];\n        const a21 = a[7];\n        const a22 = a[8];\n        const x = v[0];\n        const y = v[1];\n        out[0] = a00;\n        out[1] = a01;\n        out[2] = a02;\n        out[3] = a10;\n        out[4] = a11;\n        out[5] = a12;\n        out[6] = x * a00 + y * a10 + a20;\n        out[7] = x * a01 + y * a11 + a21;\n        out[8] = x * a02 + y * a12 + a22;\n        return out;\n    }\n    /**\n     * Rotates a {@link Mat3} by the given angle\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to rotate\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    static rotate(out, a, rad) {\n        const a00 = a[0];\n        const a01 = a[1];\n        const a02 = a[2];\n        const a10 = a[3];\n        const a11 = a[4];\n        const a12 = a[5];\n        const a20 = a[6];\n        const a21 = a[7];\n        const a22 = a[8];\n        const s = Math.sin(rad);\n        const c = Math.cos(rad);\n        out[0] = c * a00 + s * a10;\n        out[1] = c * a01 + s * a11;\n        out[2] = c * a02 + s * a12;\n        out[3] = c * a10 - s * a00;\n        out[4] = c * a11 - s * a01;\n        out[5] = c * a12 - s * a02;\n        out[6] = a20;\n        out[7] = a21;\n        out[8] = a22;\n        return out;\n    }\n    /**\n     * Scales the {@link Mat3} by the dimensions in the given {@link Vec2}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to scale\n     * @param v - the {@link Vec2} to scale the matrix by\n     * @returns `out`\n     **/\n    static scale(out, a, v) {\n        const x = v[0];\n        const y = v[1];\n        out[0] = x * a[0];\n        out[1] = x * a[1];\n        out[2] = x * a[2];\n        out[3] = y * a[3];\n        out[4] = y * a[4];\n        out[5] = y * a[5];\n        out[6] = a[6];\n        out[7] = a[7];\n        out[8] = a[8];\n        return out;\n    }\n    /**\n     * Creates a {@link Mat3} from a vector translation\n     * This is equivalent to (but much faster than):\n     *\n     *     mat3.identity(dest);\n     *     mat3.translate(dest, dest, vec);\n     * @category Static\n     *\n     * @param out - {@link Mat3} receiving operation result\n     * @param v - Translation vector\n     * @returns `out`\n     */\n    static fromTranslation(out, v) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 1;\n        out[5] = 0;\n        out[6] = v[0];\n        out[7] = v[1];\n        out[8] = 1;\n        return out;\n    }\n    /**\n     * Creates a {@link Mat3} from a given angle around a given axis\n     * This is equivalent to (but much faster than):\n     *\n     *     mat3.identity(dest);\n     *     mat3.rotate(dest, dest, rad);\n     * @category Static\n     *\n     * @param out - {@link Mat3} receiving operation result\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    static fromRotation(out, rad) {\n        const s = Math.sin(rad);\n        const c = Math.cos(rad);\n        out[0] = c;\n        out[1] = s;\n        out[2] = 0;\n        out[3] = -s;\n        out[4] = c;\n        out[5] = 0;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 1;\n        return out;\n    }\n    /**\n     * Creates a {@link Mat3} from a vector scaling\n     * This is equivalent to (but much faster than):\n     *\n     *     mat3.identity(dest);\n     *     mat3.scale(dest, dest, vec);\n     * @category Static\n     *\n     * @param out - {@link Mat3} receiving operation result\n     * @param v - Scaling vector\n     * @returns `out`\n     */\n    static fromScaling(out, v) {\n        out[0] = v[0];\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = v[1];\n        out[5] = 0;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 1;\n        return out;\n    }\n    /**\n     * Copies the upper-left 3x3 values of a {@link Mat2d} into the given\n     * {@link Mat3}.\n     * @category Static\n     *\n     * @param out - the receiving 3x3 matrix\n     * @param a - the source 2x3 matrix\n     * @returns `out`\n     */\n    static fromMat2d(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = 0;\n        out[3] = a[2];\n        out[4] = a[3];\n        out[5] = 0;\n        out[6] = a[4];\n        out[7] = a[5];\n        out[8] = 1;\n        return out;\n    }\n    /**\n     * Calculates a {@link Mat3} from the given quaternion\n     *\n     * @param out - {@link Mat3} receiving operation result\n     * @param q - {@link Quat} to create matrix from\n     * @returns `out`\n     */\n    static fromQuat(out, q) {\n        const x = q[0];\n        const y = q[1];\n        const z = q[2];\n        const w = q[3];\n        const x2 = x + x;\n        const y2 = y + y;\n        const z2 = z + z;\n        const xx = x * x2;\n        const yx = y * x2;\n        const yy = y * y2;\n        const zx = z * x2;\n        const zy = z * y2;\n        const zz = z * z2;\n        const wx = w * x2;\n        const wy = w * y2;\n        const wz = w * z2;\n        out[0] = 1 - yy - zz;\n        out[3] = yx - wz;\n        out[6] = zx + wy;\n        out[1] = yx + wz;\n        out[4] = 1 - xx - zz;\n        out[7] = zy - wx;\n        out[2] = zx - wy;\n        out[5] = zy + wx;\n        out[8] = 1 - xx - yy;\n        return out;\n    }\n    /**\n     * Copies the upper-left 3x3 values of a {@link Mat4} into the given\n     * {@link Mat3}.\n     * @category Static\n     *\n     * @param out - the receiving 3x3 matrix\n     * @param a - the source 4x4 matrix\n     * @returns `out`\n     */\n    static fromMat4(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[4];\n        out[4] = a[5];\n        out[5] = a[6];\n        out[6] = a[8];\n        out[7] = a[9];\n        out[8] = a[10];\n        return out;\n    }\n    /**\n     * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n     * @category Static\n     *\n     * @param {mat3} out mat3 receiving operation result\n     * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n     * @returns `out`\n     */\n    static normalFromMat4(out, a) {\n        const a00 = a[0];\n        const a01 = a[1];\n        const a02 = a[2];\n        const a03 = a[3];\n        const a10 = a[4];\n        const a11 = a[5];\n        const a12 = a[6];\n        const a13 = a[7];\n        const a20 = a[8];\n        const a21 = a[9];\n        const a22 = a[10];\n        const a23 = a[11];\n        const a30 = a[12];\n        const a31 = a[13];\n        const a32 = a[14];\n        const a33 = a[15];\n        const b00 = a00 * a11 - a01 * a10;\n        const b01 = a00 * a12 - a02 * a10;\n        const b02 = a00 * a13 - a03 * a10;\n        const b03 = a01 * a12 - a02 * a11;\n        const b04 = a01 * a13 - a03 * a11;\n        const b05 = a02 * a13 - a03 * a12;\n        const b06 = a20 * a31 - a21 * a30;\n        const b07 = a20 * a32 - a22 * a30;\n        const b08 = a20 * a33 - a23 * a30;\n        const b09 = a21 * a32 - a22 * a31;\n        const b10 = a21 * a33 - a23 * a31;\n        const b11 = a22 * a33 - a23 * a32;\n        // Calculate the determinant\n        let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n        if (!det) {\n            return null;\n        }\n        det = 1.0 / det;\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n        out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n        out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n        out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n        out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n        out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n        out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n        out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n        out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n        return out;\n    }\n    /**\n     * Generates a 2D projection matrix with the given bounds\n     * @category Static\n     *\n     * @param out mat3 frustum matrix will be written into\n     * @param width Width of your gl context\n     * @param height Height of gl context\n     * @returns `out`\n     */\n    static projection(out, width, height) {\n        out[0] = 2 / width;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = -2 / height;\n        out[5] = 0;\n        out[6] = -1;\n        out[7] = 1;\n        out[8] = 1;\n        return out;\n    }\n    /**\n     * Returns Frobenius norm of a {@link Mat3}\n     * @category Static\n     *\n     * @param a - the matrix to calculate Frobenius norm of\n     * @returns Frobenius norm\n     */\n    static frob(a) {\n        return Math.sqrt(a[0] * a[0] +\n            a[1] * a[1] +\n            a[2] * a[2] +\n            a[3] * a[3] +\n            a[4] * a[4] +\n            a[5] * a[5] +\n            a[6] * a[6] +\n            a[7] * a[7] +\n            a[8] * a[8]);\n    }\n    /**\n     * Multiply each element of a {@link Mat3} by a scalar.\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to scale\n     * @param b - amount to scale the matrix's elements by\n     * @returns `out`\n     */\n    static multiplyScalar(out, a, b) {\n        out[0] = a[0] * b;\n        out[1] = a[1] * b;\n        out[2] = a[2] * b;\n        out[3] = a[3] * b;\n        out[4] = a[4] * b;\n        out[5] = a[5] * b;\n        out[6] = a[6] * b;\n        out[7] = a[7] * b;\n        out[8] = a[8] * b;\n        return out;\n    }\n    /**\n     * Adds two {@link Mat3}'s after multiplying each element of the second operand by a scalar value.\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param scale - the amount to scale b's elements by before adding\n     * @returns `out`\n     */\n    static multiplyScalarAndAdd(out, a, b, scale) {\n        out[0] = a[0] + b[0] * scale;\n        out[1] = a[1] + b[1] * scale;\n        out[2] = a[2] + b[2] * scale;\n        out[3] = a[3] + b[3] * scale;\n        out[4] = a[4] + b[4] * scale;\n        out[5] = a[5] + b[5] * scale;\n        out[6] = a[6] + b[6] * scale;\n        out[7] = a[7] + b[7] * scale;\n        out[8] = a[8] + b[8] * scale;\n        return out;\n    }\n    /**\n     * Returns whether or not two {@link Mat3}s have exactly the same elements in the same position (when compared with ===)\n     * @category Static\n     *\n     * @param a - The first matrix.\n     * @param b - The second matrix.\n     * @returns True if the matrices are equal, false otherwise.\n     */\n    static exactEquals(a, b) {\n        return (a[0] === b[0] &&\n            a[1] === b[1] &&\n            a[2] === b[2] &&\n            a[3] === b[3] &&\n            a[4] === b[4] &&\n            a[5] === b[5] &&\n            a[6] === b[6] &&\n            a[7] === b[7] &&\n            a[8] === b[8]);\n    }\n    /**\n     * Returns whether or not two {@link Mat3}s have approximately the same elements in the same position.\n     * @category Static\n     *\n     * @param a - The first matrix.\n     * @param b - The second matrix.\n     * @returns True if the matrices are equal, false otherwise.\n     */\n    static equals(a, b) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const a4 = a[4];\n        const a5 = a[5];\n        const a6 = a[6];\n        const a7 = a[7];\n        const a8 = a[8];\n        const b0 = b[0];\n        const b1 = b[1];\n        const b2 = b[2];\n        const b3 = b[3];\n        const b4 = b[4];\n        const b5 = b[5];\n        const b6 = b[6];\n        const b7 = b[7];\n        const b8 = b[8];\n        return (Math.abs(a0 - b0) <= EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3)) &&\n            Math.abs(a4 - b4) <= EPSILON * Math.max(1, Math.abs(a4), Math.abs(b4)) &&\n            Math.abs(a5 - b5) <= EPSILON * Math.max(1, Math.abs(a5), Math.abs(b5)) &&\n            Math.abs(a6 - b6) <= EPSILON * Math.max(1, Math.abs(a6), Math.abs(b6)) &&\n            Math.abs(a7 - b7) <= EPSILON * Math.max(1, Math.abs(a7), Math.abs(b7)) &&\n            Math.abs(a8 - b8) <= EPSILON * Math.max(1, Math.abs(a8), Math.abs(b8)));\n    }\n    /**\n     * Returns a string representation of a {@link Mat3}\n     * @category Static\n     *\n     * @param a - matrix to represent as a string\n     * @returns string representation of the matrix\n     */\n    static str(a) {\n        return `Mat3(${a.join(', ')})`;\n    }\n}\n// Instance method alias assignments\nMat3.prototype.mul = Mat3.prototype.multiply;\n// Static method alias assignments\nMat3.mul = Mat3.multiply;\nMat3.sub = Mat3.subtract;\n\nconst IDENTITY_4X4 = new Float32Array([\n    1, 0, 0, 0,\n    0, 1, 0, 0,\n    0, 0, 1, 0,\n    0, 0, 0, 1,\n]);\n/**\n * A 4x4 Matrix\n */\nclass Mat4 extends Float32Array {\n    /**\n     * The number of bytes in a {@link Mat4}.\n     */\n    static BYTE_LENGTH = 16 * Float32Array.BYTES_PER_ELEMENT;\n    /**\n     * Create a {@link Mat4}.\n     */\n    constructor(...values) {\n        switch (values.length) {\n            case 16:\n                super(values);\n                break;\n            case 2:\n                super(values[0], values[1], 16);\n                break;\n            case 1:\n                const v = values[0];\n                if (typeof v === 'number') {\n                    super([\n                        v, v, v, v,\n                        v, v, v, v,\n                        v, v, v, v,\n                        v, v, v, v\n                    ]);\n                }\n                else {\n                    super(v, 0, 16);\n                }\n                break;\n            default:\n                super(IDENTITY_4X4);\n                break;\n        }\n    }\n    //============\n    // Attributes\n    //============\n    /**\n     * A string representation of `this`\n     * Equivalent to `Mat4.str(this);`\n     */\n    get str() {\n        return Mat4.str(this);\n    }\n    //===================\n    // Instance methods\n    //===================\n    /**\n     * Copy the values from another {@link Mat4} into `this`.\n     *\n     * @param a the source vector\n     * @returns `this`\n     */\n    copy(a) {\n        this.set(a);\n        return this;\n    }\n    /**\n     * Set `this` to the identity matrix\n     * Equivalent to Mat4.identity(this)\n     *\n     * @returns `this`\n     */\n    identity() {\n        this.set(IDENTITY_4X4);\n        return this;\n    }\n    /**\n     * Multiplies this {@link Mat4} against another one\n     * Equivalent to `Mat4.multiply(this, this, b);`\n     *\n     * @param out - The receiving Matrix\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `this`\n     */\n    multiply(b) {\n        return Mat4.multiply(this, this, b);\n    }\n    /**\n     * Alias for {@link Mat4.multiply}\n     */\n    mul(b) { return this; }\n    /**\n     * Transpose this {@link Mat4}\n     * Equivalent to `Mat4.transpose(this, this);`\n     *\n     * @returns `this`\n     */\n    transpose() {\n        return Mat4.transpose(this, this);\n    }\n    /**\n     * Inverts this {@link Mat4}\n     * Equivalent to `Mat4.invert(this, this);`\n     *\n     * @returns `this`\n     */\n    invert() {\n        return Mat4.invert(this, this);\n    }\n    /**\n     * Translate this {@link Mat4} by the given vector\n     * Equivalent to `Mat4.translate(this, this, v);`\n     *\n     * @param v - The {@link Vec3} to translate by\n     * @returns `this`\n     */\n    translate(v) {\n        return Mat4.translate(this, this, v);\n    }\n    /**\n     * Rotates this {@link Mat4} by the given angle around the given axis\n     * Equivalent to `Mat4.rotate(this, this, rad, axis);`\n     *\n     * @param rad - the angle to rotate the matrix by\n     * @param axis - the axis to rotate around\n     * @returns `out`\n     */\n    rotate(rad, axis) {\n        return Mat4.rotate(this, this, rad, axis);\n    }\n    /**\n     * Scales this {@link Mat4} by the dimensions in the given vec3 not using vectorization\n     * Equivalent to `Mat4.scale(this, this, v);`\n     *\n     * @param v - The {@link Vec3} to scale the matrix by\n     * @returns `this`\n     */\n    scale(v) {\n        return Mat4.scale(this, this, v);\n    }\n    /**\n     * Rotates this {@link Mat4} by the given angle around the X axis\n     * Equivalent to `Mat4.rotateX(this, this, rad);`\n     *\n     * @param rad - the angle to rotate the matrix by\n     * @returns `this`\n     */\n    rotateX(rad) {\n        return Mat4.rotateX(this, this, rad);\n    }\n    /**\n     * Rotates this {@link Mat4} by the given angle around the Y axis\n     * Equivalent to `Mat4.rotateY(this, this, rad);`\n     *\n     * @param rad - the angle to rotate the matrix by\n     * @returns `this`\n     */\n    rotateY(rad) {\n        return Mat4.rotateY(this, this, rad);\n    }\n    /**\n     * Rotates this {@link Mat4} by the given angle around the Z axis\n     * Equivalent to `Mat4.rotateZ(this, this, rad);`\n     *\n     * @param rad - the angle to rotate the matrix by\n     * @returns `this`\n     */\n    rotateZ(rad) {\n        return Mat4.rotateZ(this, this, rad);\n    }\n    /**\n     * Generates a perspective projection matrix with the given bounds.\n     * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n     * which matches WebGL/OpenGL's clip volume.\n     * Passing null/undefined/no value for far will generate infinite projection matrix.\n     * Equivalent to `Mat4.perspectiveNO(this, fovy, aspect, near, far);`\n     *\n     * @param fovy - Vertical field of view in radians\n     * @param aspect - Aspect ratio. typically viewport width/height\n     * @param near - Near bound of the frustum\n     * @param far - Far bound of the frustum, can be null or Infinity\n     * @returns `this`\n     */\n    perspectiveNO(fovy, aspect, near, far) {\n        return Mat4.perspectiveNO(this, fovy, aspect, near, far);\n    }\n    /**\n     * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n     * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n     * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n     * Passing null/undefined/no value for far will generate infinite projection matrix.\n     * Equivalent to `Mat4.perspectiveZO(this, fovy, aspect, near, far);`\n     *\n     * @param fovy - Vertical field of view in radians\n     * @param aspect - Aspect ratio. typically viewport width/height\n     * @param near - Near bound of the frustum\n     * @param far - Far bound of the frustum, can be null or Infinity\n     * @returns `this`\n     */\n    perspectiveZO(fovy, aspect, near, far) {\n        return Mat4.perspectiveZO(this, fovy, aspect, near, far);\n    }\n    /**\n     * Generates a orthogonal projection matrix with the given bounds.\n     * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n     * which matches WebGL/OpenGL's clip volume.\n     * Equivalent to `Mat4.orthoNO(this, left, right, bottom, top, near, far);`\n     *\n     * @param left - Left bound of the frustum\n     * @param right - Right bound of the frustum\n     * @param bottom - Bottom bound of the frustum\n     * @param top - Top bound of the frustum\n     * @param near - Near bound of the frustum\n     * @param far - Far bound of the frustum\n     * @returns `this`\n     */\n    orthoNO(left, right, bottom, top, near, far) {\n        return Mat4.orthoNO(this, left, right, bottom, top, near, far);\n    }\n    /**\n     * Generates a orthogonal projection matrix with the given bounds.\n     * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n     * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n     * Equivalent to `Mat4.orthoZO(this, left, right, bottom, top, near, far);`\n     *\n     * @param left - Left bound of the frustum\n     * @param right - Right bound of the frustum\n     * @param bottom - Bottom bound of the frustum\n     * @param top - Top bound of the frustum\n     * @param near - Near bound of the frustum\n     * @param far - Far bound of the frustum\n     * @returns `this`\n     */\n    orthoZO(left, right, bottom, top, near, far) {\n        return Mat4.orthoZO(this, left, right, bottom, top, near, far);\n    }\n    //================\n    // Static methods\n    //================\n    /**\n     * Creates a new, identity {@link Mat4}\n     * @category Static\n     *\n     * @returns A new {@link Mat4}\n     */\n    static create() {\n        return new Mat4();\n    }\n    /**\n     * Creates a new {@link Mat4} initialized with values from an existing matrix\n     * @category Static\n     *\n     * @param a - Matrix to clone\n     * @returns A new {@link Mat4}\n     */\n    static clone(a) {\n        return new Mat4(a);\n    }\n    /**\n     * Copy the values from one {@link Mat4} to another\n     * @category Static\n     *\n     * @param out - The receiving Matrix\n     * @param a - Matrix to copy\n     * @returns `out`\n     */\n    static copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        out[4] = a[4];\n        out[5] = a[5];\n        out[6] = a[6];\n        out[7] = a[7];\n        out[8] = a[8];\n        out[9] = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n        return out;\n    }\n    /**\n     * Create a new mat4 with the given values\n     * @category Static\n     *\n     * @param values - Matrix components\n     * @returns A new {@link Mat4}\n     */\n    static fromValues(...values) {\n        return new Mat4(...values);\n    }\n    /**\n     * Set the components of a mat4 to the given values\n     * @category Static\n     *\n     * @param out - The receiving matrix\n     * @param values - Matrix components\n     * @returns `out`\n     */\n    static set(out, ...values) {\n        out[0] = values[0];\n        out[1] = values[1];\n        out[2] = values[2];\n        out[3] = values[3];\n        out[4] = values[4];\n        out[5] = values[5];\n        out[6] = values[6];\n        out[7] = values[7];\n        out[8] = values[8];\n        out[9] = values[9];\n        out[10] = values[10];\n        out[11] = values[11];\n        out[12] = values[12];\n        out[13] = values[13];\n        out[14] = values[14];\n        out[15] = values[15];\n        return out;\n    }\n    /**\n     * Set a {@link Mat4} to the identity matrix\n     * @category Static\n     *\n     * @param out - The receiving Matrix\n     * @returns `out`\n     */\n    static identity(out) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = 1;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = 0;\n        out[10] = 1;\n        out[11] = 0;\n        out[12] = 0;\n        out[13] = 0;\n        out[14] = 0;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Transpose the values of a {@link Mat4}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the source matrix\n     * @returns `out`\n     */\n    static transpose(out, a) {\n        // If we are transposing ourselves we can skip a few steps but have to cache some values\n        if (out === a) {\n            const a01 = a[1], a02 = a[2], a03 = a[3];\n            const a12 = a[6], a13 = a[7];\n            const a23 = a[11];\n            out[1] = a[4];\n            out[2] = a[8];\n            out[3] = a[12];\n            out[4] = a01;\n            out[6] = a[9];\n            out[7] = a[13];\n            out[8] = a02;\n            out[9] = a12;\n            out[11] = a[14];\n            out[12] = a03;\n            out[13] = a13;\n            out[14] = a23;\n        }\n        else {\n            out[0] = a[0];\n            out[1] = a[4];\n            out[2] = a[8];\n            out[3] = a[12];\n            out[4] = a[1];\n            out[5] = a[5];\n            out[6] = a[9];\n            out[7] = a[13];\n            out[8] = a[2];\n            out[9] = a[6];\n            out[10] = a[10];\n            out[11] = a[14];\n            out[12] = a[3];\n            out[13] = a[7];\n            out[14] = a[11];\n            out[15] = a[15];\n        }\n        return out;\n    }\n    /**\n     * Inverts a {@link Mat4}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the source matrix\n     * @returns `out`\n     */\n    static invert(out, a) {\n        const a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n        const a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n        const a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n        const a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n        const b00 = a00 * a11 - a01 * a10;\n        const b01 = a00 * a12 - a02 * a10;\n        const b02 = a00 * a13 - a03 * a10;\n        const b03 = a01 * a12 - a02 * a11;\n        const b04 = a01 * a13 - a03 * a11;\n        const b05 = a02 * a13 - a03 * a12;\n        const b06 = a20 * a31 - a21 * a30;\n        const b07 = a20 * a32 - a22 * a30;\n        const b08 = a20 * a33 - a23 * a30;\n        const b09 = a21 * a32 - a22 * a31;\n        const b10 = a21 * a33 - a23 * a31;\n        const b11 = a22 * a33 - a23 * a32;\n        // Calculate the determinant\n        let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n        if (!det) {\n            return null;\n        }\n        det = 1.0 / det;\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n        out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n        out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n        out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n        out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n        out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n        out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n        out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n        out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n        out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n        out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n        out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n        out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n        out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n        out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n        out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n        return out;\n    }\n    /**\n     * Calculates the adjugate of a {@link Mat4}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the source matrix\n     * @returns `out`\n     */\n    static adjoint(out, a) {\n        const a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n        const a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n        const a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n        const a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n        const b00 = a00 * a11 - a01 * a10;\n        const b01 = a00 * a12 - a02 * a10;\n        const b02 = a00 * a13 - a03 * a10;\n        const b03 = a01 * a12 - a02 * a11;\n        const b04 = a01 * a13 - a03 * a11;\n        const b05 = a02 * a13 - a03 * a12;\n        const b06 = a20 * a31 - a21 * a30;\n        const b07 = a20 * a32 - a22 * a30;\n        const b08 = a20 * a33 - a23 * a30;\n        const b09 = a21 * a32 - a22 * a31;\n        const b10 = a21 * a33 - a23 * a31;\n        const b11 = a22 * a33 - a23 * a32;\n        out[0] = a11 * b11 - a12 * b10 + a13 * b09;\n        out[1] = a02 * b10 - a01 * b11 - a03 * b09;\n        out[2] = a31 * b05 - a32 * b04 + a33 * b03;\n        out[3] = a22 * b04 - a21 * b05 - a23 * b03;\n        out[4] = a12 * b08 - a10 * b11 - a13 * b07;\n        out[5] = a00 * b11 - a02 * b08 + a03 * b07;\n        out[6] = a32 * b02 - a30 * b05 - a33 * b01;\n        out[7] = a20 * b05 - a22 * b02 + a23 * b01;\n        out[8] = a10 * b10 - a11 * b08 + a13 * b06;\n        out[9] = a01 * b08 - a00 * b10 - a03 * b06;\n        out[10] = a30 * b04 - a31 * b02 + a33 * b00;\n        out[11] = a21 * b02 - a20 * b04 - a23 * b00;\n        out[12] = a11 * b07 - a10 * b09 - a12 * b06;\n        out[13] = a00 * b09 - a01 * b07 + a02 * b06;\n        out[14] = a31 * b01 - a30 * b03 - a32 * b00;\n        out[15] = a20 * b03 - a21 * b01 + a22 * b00;\n        return out;\n    }\n    /**\n     * Calculates the determinant of a {@link Mat4}\n     * @category Static\n     *\n     * @param a - the source matrix\n     * @returns determinant of a\n     */\n    static determinant(a) {\n        const a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n        const a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n        const a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n        const a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n        const b0 = a00 * a11 - a01 * a10;\n        const b1 = a00 * a12 - a02 * a10;\n        const b2 = a01 * a12 - a02 * a11;\n        const b3 = a20 * a31 - a21 * a30;\n        const b4 = a20 * a32 - a22 * a30;\n        const b5 = a21 * a32 - a22 * a31;\n        const b6 = a00 * b5 - a01 * b4 + a02 * b3;\n        const b7 = a10 * b5 - a11 * b4 + a12 * b3;\n        const b8 = a20 * b2 - a21 * b1 + a22 * b0;\n        const b9 = a30 * b2 - a31 * b1 + a32 * b0;\n        // Calculate the determinant\n        return a13 * b6 - a03 * b7 + a33 * b8 - a23 * b9;\n    }\n    /**\n     * Multiplies two {@link Mat4}s\n     * @category Static\n     *\n     * @param out - The receiving Matrix\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static multiply(out, a, b) {\n        const a00 = a[0];\n        const a01 = a[1];\n        const a02 = a[2];\n        const a03 = a[3];\n        const a10 = a[4];\n        const a11 = a[5];\n        const a12 = a[6];\n        const a13 = a[7];\n        const a20 = a[8];\n        const a21 = a[9];\n        const a22 = a[10];\n        const a23 = a[11];\n        const a30 = a[12];\n        const a31 = a[13];\n        const a32 = a[14];\n        const a33 = a[15];\n        // Cache only the current line of the second matrix\n        let b0 = b[0];\n        let b1 = b[1];\n        let b2 = b[2];\n        let b3 = b[3];\n        out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n        out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n        out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n        out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n        b0 = b[4];\n        b1 = b[5];\n        b2 = b[6];\n        b3 = b[7];\n        out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n        out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n        out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n        out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n        b0 = b[8];\n        b1 = b[9];\n        b2 = b[10];\n        b3 = b[11];\n        out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n        out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n        out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n        out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n        b0 = b[12];\n        b1 = b[13];\n        b2 = b[14];\n        b3 = b[15];\n        out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n        out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n        out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n        out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n        return out;\n    }\n    /**\n     * Alias for {@link Mat4.multiply}\n     * @category Static\n     */\n    static mul(out, a, b) { return out; }\n    /**\n     * Translate a {@link Mat4} by the given vector\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to translate\n     * @param v - vector to translate by\n     * @returns `out`\n     */\n    static translate(out, a, v) {\n        const x = v[0];\n        const y = v[1];\n        const z = v[2];\n        if (a === out) {\n            out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n            out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n            out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n            out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n        }\n        else {\n            const a00 = a[0];\n            const a01 = a[1];\n            const a02 = a[2];\n            const a03 = a[3];\n            const a10 = a[4];\n            const a11 = a[5];\n            const a12 = a[6];\n            const a13 = a[7];\n            const a20 = a[8];\n            const a21 = a[9];\n            const a22 = a[10];\n            const a23 = a[11];\n            out[0] = a00;\n            out[1] = a01;\n            out[2] = a02;\n            out[3] = a03;\n            out[4] = a10;\n            out[5] = a11;\n            out[6] = a12;\n            out[7] = a13;\n            out[8] = a20;\n            out[9] = a21;\n            out[10] = a22;\n            out[11] = a23;\n            out[12] = a00 * x + a10 * y + a20 * z + a[12];\n            out[13] = a01 * x + a11 * y + a21 * z + a[13];\n            out[14] = a02 * x + a12 * y + a22 * z + a[14];\n            out[15] = a03 * x + a13 * y + a23 * z + a[15];\n        }\n        return out;\n    }\n    /**\n     * Scales the {@link Mat4} by the dimensions in the given {@link Vec3} not using vectorization\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to scale\n     * @param v - the {@link Vec3} to scale the matrix by\n     * @returns `out`\n     **/\n    static scale(out, a, v) {\n        const x = v[0];\n        const y = v[1];\n        const z = v[2];\n        out[0] = a[0] * x;\n        out[1] = a[1] * x;\n        out[2] = a[2] * x;\n        out[3] = a[3] * x;\n        out[4] = a[4] * y;\n        out[5] = a[5] * y;\n        out[6] = a[6] * y;\n        out[7] = a[7] * y;\n        out[8] = a[8] * z;\n        out[9] = a[9] * z;\n        out[10] = a[10] * z;\n        out[11] = a[11] * z;\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n        return out;\n    }\n    /**\n     * Rotates a {@link Mat4} by the given angle around the given axis\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to rotate\n     * @param rad - the angle to rotate the matrix by\n     * @param axis - the axis to rotate around\n     * @returns `out`\n     */\n    static rotate(out, a, rad, axis) {\n        let x = axis[0];\n        let y = axis[1];\n        let z = axis[2];\n        let len = Math.sqrt(x * x + y * y + z * z);\n        if (len < EPSILON) {\n            return null;\n        }\n        len = 1 / len;\n        x *= len;\n        y *= len;\n        z *= len;\n        const s = Math.sin(rad);\n        const c = Math.cos(rad);\n        const t = 1 - c;\n        const a00 = a[0];\n        const a01 = a[1];\n        const a02 = a[2];\n        const a03 = a[3];\n        const a10 = a[4];\n        const a11 = a[5];\n        const a12 = a[6];\n        const a13 = a[7];\n        const a20 = a[8];\n        const a21 = a[9];\n        const a22 = a[10];\n        const a23 = a[11];\n        // Construct the elements of the rotation matrix\n        const b00 = x * x * t + c;\n        const b01 = y * x * t + z * s;\n        const b02 = z * x * t - y * s;\n        const b10 = x * y * t - z * s;\n        const b11 = y * y * t + c;\n        const b12 = z * y * t + x * s;\n        const b20 = x * z * t + y * s;\n        const b21 = y * z * t - x * s;\n        const b22 = z * z * t + c;\n        // Perform rotation-specific matrix multiplication\n        out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n        out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n        out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n        out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n        out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n        out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n        out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n        out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n        out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n        out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n        out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n        out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n        if (a !== out) {\n            // If the source and destination differ, copy the unchanged last row\n            out[12] = a[12];\n            out[13] = a[13];\n            out[14] = a[14];\n            out[15] = a[15];\n        }\n        return out;\n    }\n    /**\n     * Rotates a matrix by the given angle around the X axis\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to rotate\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    static rotateX(out, a, rad) {\n        let s = Math.sin(rad);\n        let c = Math.cos(rad);\n        let a10 = a[4];\n        let a11 = a[5];\n        let a12 = a[6];\n        let a13 = a[7];\n        let a20 = a[8];\n        let a21 = a[9];\n        let a22 = a[10];\n        let a23 = a[11];\n        if (a !== out) {\n            // If the source and destination differ, copy the unchanged rows\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[12] = a[12];\n            out[13] = a[13];\n            out[14] = a[14];\n            out[15] = a[15];\n        }\n        // Perform axis-specific matrix multiplication\n        out[4] = a10 * c + a20 * s;\n        out[5] = a11 * c + a21 * s;\n        out[6] = a12 * c + a22 * s;\n        out[7] = a13 * c + a23 * s;\n        out[8] = a20 * c - a10 * s;\n        out[9] = a21 * c - a11 * s;\n        out[10] = a22 * c - a12 * s;\n        out[11] = a23 * c - a13 * s;\n        return out;\n    }\n    /**\n     * Rotates a matrix by the given angle around the Y axis\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to rotate\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    static rotateY(out, a, rad) {\n        let s = Math.sin(rad);\n        let c = Math.cos(rad);\n        let a00 = a[0];\n        let a01 = a[1];\n        let a02 = a[2];\n        let a03 = a[3];\n        let a20 = a[8];\n        let a21 = a[9];\n        let a22 = a[10];\n        let a23 = a[11];\n        if (a !== out) {\n            // If the source and destination differ, copy the unchanged rows\n            out[4] = a[4];\n            out[5] = a[5];\n            out[6] = a[6];\n            out[7] = a[7];\n            out[12] = a[12];\n            out[13] = a[13];\n            out[14] = a[14];\n            out[15] = a[15];\n        }\n        // Perform axis-specific matrix multiplication\n        out[0] = a00 * c - a20 * s;\n        out[1] = a01 * c - a21 * s;\n        out[2] = a02 * c - a22 * s;\n        out[3] = a03 * c - a23 * s;\n        out[8] = a00 * s + a20 * c;\n        out[9] = a01 * s + a21 * c;\n        out[10] = a02 * s + a22 * c;\n        out[11] = a03 * s + a23 * c;\n        return out;\n    }\n    /**\n     * Rotates a matrix by the given angle around the Z axis\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to rotate\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    static rotateZ(out, a, rad) {\n        let s = Math.sin(rad);\n        let c = Math.cos(rad);\n        let a00 = a[0];\n        let a01 = a[1];\n        let a02 = a[2];\n        let a03 = a[3];\n        let a10 = a[4];\n        let a11 = a[5];\n        let a12 = a[6];\n        let a13 = a[7];\n        if (a !== out) {\n            // If the source and destination differ, copy the unchanged last row\n            out[8] = a[8];\n            out[9] = a[9];\n            out[10] = a[10];\n            out[11] = a[11];\n            out[12] = a[12];\n            out[13] = a[13];\n            out[14] = a[14];\n            out[15] = a[15];\n        }\n        // Perform axis-specific matrix multiplication\n        out[0] = a00 * c + a10 * s;\n        out[1] = a01 * c + a11 * s;\n        out[2] = a02 * c + a12 * s;\n        out[3] = a03 * c + a13 * s;\n        out[4] = a10 * c - a00 * s;\n        out[5] = a11 * c - a01 * s;\n        out[6] = a12 * c - a02 * s;\n        out[7] = a13 * c - a03 * s;\n        return out;\n    }\n    /**\n     * Creates a {@link Mat4} from a vector translation\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.translate(dest, dest, vec);\n     * @category Static\n     *\n     * @param out - {@link Mat4} receiving operation result\n     * @param v - Translation vector\n     * @returns `out`\n     */\n    static fromTranslation(out, v) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = 1;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = 0;\n        out[10] = 1;\n        out[11] = 0;\n        out[12] = v[0];\n        out[13] = v[1];\n        out[14] = v[2];\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Creates a {@link Mat4} from a vector scaling\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.scale(dest, dest, vec);\n     * @category Static\n     *\n     * @param out - {@link Mat4} receiving operation result\n     * @param v - Scaling vector\n     * @returns `out`\n     */\n    static fromScaling(out, v) {\n        out[0] = v[0];\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = v[1];\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = 0;\n        out[10] = v[2];\n        out[11] = 0;\n        out[12] = 0;\n        out[13] = 0;\n        out[14] = 0;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Creates a {@link Mat4} from a given angle around a given axis\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.rotate(dest, dest, rad, axis);\n     * @category Static\n     *\n     * @param out - {@link Mat4} receiving operation result\n     * @param rad - the angle to rotate the matrix by\n     * @param axis - the axis to rotate around\n     * @returns `out`\n     */\n    static fromRotation(out, rad, axis) {\n        let x = axis[0];\n        let y = axis[1];\n        let z = axis[2];\n        let len = Math.sqrt(x * x + y * y + z * z);\n        if (len < EPSILON) {\n            return null;\n        }\n        len = 1 / len;\n        x *= len;\n        y *= len;\n        z *= len;\n        const s = Math.sin(rad);\n        const c = Math.cos(rad);\n        const t = 1 - c;\n        // Perform rotation-specific matrix multiplication\n        out[0] = x * x * t + c;\n        out[1] = y * x * t + z * s;\n        out[2] = z * x * t - y * s;\n        out[3] = 0;\n        out[4] = x * y * t - z * s;\n        out[5] = y * y * t + c;\n        out[6] = z * y * t + x * s;\n        out[7] = 0;\n        out[8] = x * z * t + y * s;\n        out[9] = y * z * t - x * s;\n        out[10] = z * z * t + c;\n        out[11] = 0;\n        out[12] = 0;\n        out[13] = 0;\n        out[14] = 0;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Creates a matrix from the given angle around the X axis\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.rotateX(dest, dest, rad);\n     * @category Static\n     *\n     * @param out - mat4 receiving operation result\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    static fromXRotation(out, rad) {\n        let s = Math.sin(rad);\n        let c = Math.cos(rad);\n        // Perform axis-specific matrix multiplication\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = c;\n        out[6] = s;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = -s;\n        out[10] = c;\n        out[11] = 0;\n        out[12] = 0;\n        out[13] = 0;\n        out[14] = 0;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Creates a matrix from the given angle around the Y axis\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.rotateY(dest, dest, rad);\n     * @category Static\n     *\n     * @param out - mat4 receiving operation result\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    static fromYRotation(out, rad) {\n        let s = Math.sin(rad);\n        let c = Math.cos(rad);\n        // Perform axis-specific matrix multiplication\n        out[0] = c;\n        out[1] = 0;\n        out[2] = -s;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = 1;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = s;\n        out[9] = 0;\n        out[10] = c;\n        out[11] = 0;\n        out[12] = 0;\n        out[13] = 0;\n        out[14] = 0;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Creates a matrix from the given angle around the Z axis\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.rotateZ(dest, dest, rad);\n     * @category Static\n     *\n     * @param out - mat4 receiving operation result\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    static fromZRotation(out, rad) {\n        const s = Math.sin(rad);\n        const c = Math.cos(rad);\n        // Perform axis-specific matrix multiplication\n        out[0] = c;\n        out[1] = s;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = -s;\n        out[5] = c;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = 0;\n        out[10] = 1;\n        out[11] = 0;\n        out[12] = 0;\n        out[13] = 0;\n        out[14] = 0;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Creates a matrix from a quaternion rotation and vector translation\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.translate(dest, vec);\n     *     let quatMat = mat4.create();\n     *     quat4.toMat4(quat, quatMat);\n     *     mat4.multiply(dest, quatMat);\n     * @category Static\n     *\n     * @param out - mat4 receiving operation result\n     * @param q - Rotation quaternion\n     * @param v - Translation vector\n     * @returns `out`\n     */\n    static fromRotationTranslation(out, q, v) {\n        // Quaternion math\n        const x = q[0];\n        const y = q[1];\n        const z = q[2];\n        const w = q[3];\n        const x2 = x + x;\n        const y2 = y + y;\n        const z2 = z + z;\n        const xx = x * x2;\n        const xy = x * y2;\n        const xz = x * z2;\n        const yy = y * y2;\n        const yz = y * z2;\n        const zz = z * z2;\n        const wx = w * x2;\n        const wy = w * y2;\n        const wz = w * z2;\n        out[0] = 1 - (yy + zz);\n        out[1] = xy + wz;\n        out[2] = xz - wy;\n        out[3] = 0;\n        out[4] = xy - wz;\n        out[5] = 1 - (xx + zz);\n        out[6] = yz + wx;\n        out[7] = 0;\n        out[8] = xz + wy;\n        out[9] = yz - wx;\n        out[10] = 1 - (xx + yy);\n        out[11] = 0;\n        out[12] = v[0];\n        out[13] = v[1];\n        out[14] = v[2];\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Sets a {@link Mat4} from a {@link Quat2}.\n     * @category Static\n     *\n     * @param out - Matrix\n     * @param a - Dual Quaternion\n     * @returns `out`\n     */\n    static fromQuat2(out, a) {\n        let translation = [0, 0, 0];\n        const bx = -a[0];\n        const by = -a[1];\n        const bz = -a[2];\n        const bw = a[3];\n        const ax = a[4];\n        const ay = a[5];\n        const az = a[6];\n        const aw = a[7];\n        let magnitude = bx * bx + by * by + bz * bz + bw * bw;\n        //Only scale if it makes sense\n        if (magnitude > 0) {\n            translation[0] = ((ax * bw + aw * bx + ay * bz - az * by) * 2) / magnitude;\n            translation[1] = ((ay * bw + aw * by + az * bx - ax * bz) * 2) / magnitude;\n            translation[2] = ((az * bw + aw * bz + ax * by - ay * bx) * 2) / magnitude;\n        }\n        else {\n            translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n            translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n            translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n        }\n        Mat4.fromRotationTranslation(out, a, translation);\n        return out;\n    }\n    /**\n     * Returns the translation vector component of a transformation\n     * matrix. If a matrix is built with fromRotationTranslation,\n     * the returned vector will be the same as the translation vector\n     * originally supplied.\n     * @category Static\n     *\n     * @param  {vec3} out Vector to receive translation component\n     * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n     * @return {vec3} out\n     */\n    static getTranslation(out, mat) {\n        out[0] = mat[12];\n        out[1] = mat[13];\n        out[2] = mat[14];\n        return out;\n    }\n    /**\n     * Returns the scaling factor component of a transformation\n     * matrix. If a matrix is built with fromRotationTranslationScale\n     * with a normalized Quaternion paramter, the returned vector will be\n     * the same as the scaling vector\n     * originally supplied.\n     * @category Static\n     *\n     * @param  {vec3} out Vector to receive scaling factor component\n     * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n     * @return {vec3} out\n     */\n    static getScaling(out, mat) {\n        const m11 = mat[0];\n        const m12 = mat[1];\n        const m13 = mat[2];\n        const m21 = mat[4];\n        const m22 = mat[5];\n        const m23 = mat[6];\n        const m31 = mat[8];\n        const m32 = mat[9];\n        const m33 = mat[10];\n        out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n        out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n        out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n        return out;\n    }\n    /**\n     * Returns a quaternion representing the rotational component\n     * of a transformation matrix. If a matrix is built with\n     * fromRotationTranslation, the returned quaternion will be the\n     * same as the quaternion originally supplied.\n     * @category Static\n     *\n     * @param out - Quaternion to receive the rotation component\n     * @param mat - Matrix to be decomposed (input)\n     * @return `out`\n     */\n    static getRotation(out, mat) {\n        Mat4.getScaling(tmpVec3$1, mat);\n        const is1 = 1 / tmpVec3$1[0];\n        const is2 = 1 / tmpVec3$1[1];\n        const is3 = 1 / tmpVec3$1[2];\n        const sm11 = mat[0] * is1;\n        const sm12 = mat[1] * is2;\n        const sm13 = mat[2] * is3;\n        const sm21 = mat[4] * is1;\n        const sm22 = mat[5] * is2;\n        const sm23 = mat[6] * is3;\n        const sm31 = mat[8] * is1;\n        const sm32 = mat[9] * is2;\n        const sm33 = mat[10] * is3;\n        const trace = sm11 + sm22 + sm33;\n        let S = 0;\n        if (trace > 0) {\n            S = Math.sqrt(trace + 1.0) * 2;\n            out[3] = 0.25 * S;\n            out[0] = (sm23 - sm32) / S;\n            out[1] = (sm31 - sm13) / S;\n            out[2] = (sm12 - sm21) / S;\n        }\n        else if (sm11 > sm22 && sm11 > sm33) {\n            S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n            out[3] = (sm23 - sm32) / S;\n            out[0] = 0.25 * S;\n            out[1] = (sm12 + sm21) / S;\n            out[2] = (sm31 + sm13) / S;\n        }\n        else if (sm22 > sm33) {\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n            out[3] = (sm31 - sm13) / S;\n            out[0] = (sm12 + sm21) / S;\n            out[1] = 0.25 * S;\n            out[2] = (sm23 + sm32) / S;\n        }\n        else {\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n            out[3] = (sm12 - sm21) / S;\n            out[0] = (sm31 + sm13) / S;\n            out[1] = (sm23 + sm32) / S;\n            out[2] = 0.25 * S;\n        }\n        return out;\n    }\n    /**\n     * Decomposes a transformation matrix into its rotation, translation\n     * and scale components. Returns only the rotation component\n     * @category Static\n     *\n     * @param out_r - Quaternion to receive the rotation component\n     * @param out_t - Vector to receive the translation vector\n     * @param out_s - Vector to receive the scaling factor\n     * @param mat - Matrix to be decomposed (input)\n     * @returns `out_r`\n     */\n    static decompose(out_r, out_t, out_s, mat) {\n        out_t[0] = mat[12];\n        out_t[1] = mat[13];\n        out_t[2] = mat[14];\n        const m11 = mat[0];\n        const m12 = mat[1];\n        const m13 = mat[2];\n        const m21 = mat[4];\n        const m22 = mat[5];\n        const m23 = mat[6];\n        const m31 = mat[8];\n        const m32 = mat[9];\n        const m33 = mat[10];\n        out_s[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n        out_s[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n        out_s[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n        const is1 = 1 / out_s[0];\n        const is2 = 1 / out_s[1];\n        const is3 = 1 / out_s[2];\n        const sm11 = m11 * is1;\n        const sm12 = m12 * is2;\n        const sm13 = m13 * is3;\n        const sm21 = m21 * is1;\n        const sm22 = m22 * is2;\n        const sm23 = m23 * is3;\n        const sm31 = m31 * is1;\n        const sm32 = m32 * is2;\n        const sm33 = m33 * is3;\n        const trace = sm11 + sm22 + sm33;\n        let S = 0;\n        if (trace > 0) {\n            S = Math.sqrt(trace + 1.0) * 2;\n            out_r[3] = 0.25 * S;\n            out_r[0] = (sm23 - sm32) / S;\n            out_r[1] = (sm31 - sm13) / S;\n            out_r[2] = (sm12 - sm21) / S;\n        }\n        else if (sm11 > sm22 && sm11 > sm33) {\n            S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n            out_r[3] = (sm23 - sm32) / S;\n            out_r[0] = 0.25 * S;\n            out_r[1] = (sm12 + sm21) / S;\n            out_r[2] = (sm31 + sm13) / S;\n        }\n        else if (sm22 > sm33) {\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n            out_r[3] = (sm31 - sm13) / S;\n            out_r[0] = (sm12 + sm21) / S;\n            out_r[1] = 0.25 * S;\n            out_r[2] = (sm23 + sm32) / S;\n        }\n        else {\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n            out_r[3] = (sm12 - sm21) / S;\n            out_r[0] = (sm31 + sm13) / S;\n            out_r[1] = (sm23 + sm32) / S;\n            out_r[2] = 0.25 * S;\n        }\n        return out_r;\n    }\n    /**\n     * Creates a matrix from a quaternion rotation, vector translation and vector scale\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.translate(dest, vec);\n     *     let quatMat = mat4.create();\n     *     quat4.toMat4(quat, quatMat);\n     *     mat4.multiply(dest, quatMat);\n     *     mat4.scale(dest, scale);\n     * @category Static\n     *\n     * @param out - mat4 receiving operation result\n     * @param q - Rotation quaternion\n     * @param v - Translation vector\n     * @param s - Scaling vector\n     * @returns `out`\n     */\n    static fromRotationTranslationScale(out, q, v, s) {\n        // Quaternion math\n        const x = q[0];\n        const y = q[1];\n        const z = q[2];\n        const w = q[3];\n        const x2 = x + x;\n        const y2 = y + y;\n        const z2 = z + z;\n        const xx = x * x2;\n        const xy = x * y2;\n        const xz = x * z2;\n        const yy = y * y2;\n        const yz = y * z2;\n        const zz = z * z2;\n        const wx = w * x2;\n        const wy = w * y2;\n        const wz = w * z2;\n        const sx = s[0];\n        const sy = s[1];\n        const sz = s[2];\n        out[0] = (1 - (yy + zz)) * sx;\n        out[1] = (xy + wz) * sx;\n        out[2] = (xz - wy) * sx;\n        out[3] = 0;\n        out[4] = (xy - wz) * sy;\n        out[5] = (1 - (xx + zz)) * sy;\n        out[6] = (yz + wx) * sy;\n        out[7] = 0;\n        out[8] = (xz + wy) * sz;\n        out[9] = (yz - wx) * sz;\n        out[10] = (1 - (xx + yy)) * sz;\n        out[11] = 0;\n        out[12] = v[0];\n        out[13] = v[1];\n        out[14] = v[2];\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.translate(dest, vec);\n     *     mat4.translate(dest, origin);\n     *     let quatMat = mat4.create();\n     *     quat4.toMat4(quat, quatMat);\n     *     mat4.multiply(dest, quatMat);\n     *     mat4.scale(dest, scale)\n     *     mat4.translate(dest, negativeOrigin);\n     * @category Static\n     *\n     * @param out - mat4 receiving operation result\n     * @param q - Rotation quaternion\n     * @param v - Translation vector\n     * @param s - Scaling vector\n     * @param o - The origin vector around which to scale and rotate\n     * @returns `out`\n     */\n    static fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n        // Quaternion math\n        const x = q[0];\n        const y = q[1];\n        const z = q[2];\n        const w = q[3];\n        const x2 = x + x;\n        const y2 = y + y;\n        const z2 = z + z;\n        const xx = x * x2;\n        const xy = x * y2;\n        const xz = x * z2;\n        const yy = y * y2;\n        const yz = y * z2;\n        const zz = z * z2;\n        const wx = w * x2;\n        const wy = w * y2;\n        const wz = w * z2;\n        const sx = s[0];\n        const sy = s[1];\n        const sz = s[2];\n        const ox = o[0];\n        const oy = o[1];\n        const oz = o[2];\n        const out0 = (1 - (yy + zz)) * sx;\n        const out1 = (xy + wz) * sx;\n        const out2 = (xz - wy) * sx;\n        const out4 = (xy - wz) * sy;\n        const out5 = (1 - (xx + zz)) * sy;\n        const out6 = (yz + wx) * sy;\n        const out8 = (xz + wy) * sz;\n        const out9 = (yz - wx) * sz;\n        const out10 = (1 - (xx + yy)) * sz;\n        out[0] = out0;\n        out[1] = out1;\n        out[2] = out2;\n        out[3] = 0;\n        out[4] = out4;\n        out[5] = out5;\n        out[6] = out6;\n        out[7] = 0;\n        out[8] = out8;\n        out[9] = out9;\n        out[10] = out10;\n        out[11] = 0;\n        out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n        out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n        out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Calculates a 4x4 matrix from the given quaternion\n     * @category Static\n     *\n     * @param out - mat4 receiving operation result\n     * @param q - Quaternion to create matrix from\n     * @returns `out`\n     */\n    static fromQuat(out, q) {\n        const x = q[0];\n        const y = q[1];\n        const z = q[2];\n        const w = q[3];\n        const x2 = x + x;\n        const y2 = y + y;\n        const z2 = z + z;\n        const xx = x * x2;\n        const yx = y * x2;\n        const yy = y * y2;\n        const zx = z * x2;\n        const zy = z * y2;\n        const zz = z * z2;\n        const wx = w * x2;\n        const wy = w * y2;\n        const wz = w * z2;\n        out[0] = 1 - yy - zz;\n        out[1] = yx + wz;\n        out[2] = zx - wy;\n        out[3] = 0;\n        out[4] = yx - wz;\n        out[5] = 1 - xx - zz;\n        out[6] = zy + wx;\n        out[7] = 0;\n        out[8] = zx + wy;\n        out[9] = zy - wx;\n        out[10] = 1 - xx - yy;\n        out[11] = 0;\n        out[12] = 0;\n        out[13] = 0;\n        out[14] = 0;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Generates a frustum matrix with the given bounds\n     * @category Static\n     *\n     * @param out - mat4 frustum matrix will be written into\n     * @param left - Left bound of the frustum\n     * @param right - Right bound of the frustum\n     * @param bottom - Bottom bound of the frustum\n     * @param top - Top bound of the frustum\n     * @param near - Near bound of the frustum\n     * @param far - Far bound of the frustum\n     * @returns `out`\n     */\n    static frustum(out, left, right, bottom, top, near, far) {\n        const rl = 1 / (right - left);\n        const tb = 1 / (top - bottom);\n        const nf = 1 / (near - far);\n        out[0] = near * 2 * rl;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = near * 2 * tb;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = (right + left) * rl;\n        out[9] = (top + bottom) * tb;\n        out[10] = (far + near) * nf;\n        out[11] = -1;\n        out[12] = 0;\n        out[13] = 0;\n        out[14] = far * near * 2 * nf;\n        out[15] = 0;\n        return out;\n    }\n    /**\n     * Generates a perspective projection matrix with the given bounds.\n     * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n     * which matches WebGL/OpenGL's clip volume.\n     * Passing null/undefined/no value for far will generate infinite projection matrix.\n     * @category Static\n     *\n     * @param out - mat4 frustum matrix will be written into\n     * @param fovy - Vertical field of view in radians\n     * @param aspect - Aspect ratio. typically viewport width/height\n     * @param near - Near bound of the frustum\n     * @param far - Far bound of the frustum, can be null or Infinity\n     * @returns `out`\n     */\n    static perspectiveNO(out, fovy, aspect, near, far) {\n        const f = 1.0 / Math.tan(fovy / 2);\n        out[0] = f / aspect;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = f;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = 0;\n        out[11] = -1;\n        out[12] = 0;\n        out[13] = 0;\n        out[15] = 0;\n        if (far != null && far !== Infinity) {\n            const nf = 1 / (near - far);\n            out[10] = (far + near) * nf;\n            out[14] = 2 * far * near * nf;\n        }\n        else {\n            out[10] = -1;\n            out[14] = -2 * near;\n        }\n        return out;\n    }\n    /**\n     * Alias for {@link Mat4.perspectiveNO}\n     * @category Static\n     * @deprecated Use {@link Mat4.perspectiveNO} or {@link Mat4.perspectiveZO} explicitly\n     */\n    static perspective(out, fovy, aspect, near, far) { return out; }\n    /**\n     * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n     * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n     * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n     * Passing null/undefined/no value for far will generate infinite projection matrix.\n     * @category Static\n     *\n     * @param out - mat4 frustum matrix will be written into\n     * @param fovy - Vertical field of view in radians\n     * @param aspect - Aspect ratio. typically viewport width/height\n     * @param near - Near bound of the frustum\n     * @param far - Far bound of the frustum, can be null or Infinity\n     * @returns `out`\n     */\n    static perspectiveZO(out, fovy, aspect, near, far) {\n        const f = 1.0 / Math.tan(fovy / 2);\n        out[0] = f / aspect;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = f;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = 0;\n        out[11] = -1;\n        out[12] = 0;\n        out[13] = 0;\n        out[15] = 0;\n        if (far != null && far !== Infinity) {\n            const nf = 1 / (near - far);\n            out[10] = far * nf;\n            out[14] = far * near * nf;\n        }\n        else {\n            out[10] = -1;\n            out[14] = -near;\n        }\n        return out;\n    }\n    /**\n     * Generates a perspective projection matrix with the given field of view.\n     * This is primarily useful for generating projection matrices to be used\n     * with the still experiemental WebVR API.\n     * @category Static\n     *\n     * @param out - mat4 frustum matrix will be written into\n     * @param fov - Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n     * @param near - Near bound of the frustum\n     * @param far - Far bound of the frustum\n     * @returns `out`\n     * @deprecated\n     */\n    static perspectiveFromFieldOfView(out, fov, near, far) {\n        const upTan = Math.tan((fov.upDegrees * Math.PI) / 180.0);\n        const downTan = Math.tan((fov.downDegrees * Math.PI) / 180.0);\n        const leftTan = Math.tan((fov.leftDegrees * Math.PI) / 180.0);\n        const rightTan = Math.tan((fov.rightDegrees * Math.PI) / 180.0);\n        const xScale = 2.0 / (leftTan + rightTan);\n        const yScale = 2.0 / (upTan + downTan);\n        out[0] = xScale;\n        out[1] = 0.0;\n        out[2] = 0.0;\n        out[3] = 0.0;\n        out[4] = 0.0;\n        out[5] = yScale;\n        out[6] = 0.0;\n        out[7] = 0.0;\n        out[8] = -((leftTan - rightTan) * xScale * 0.5);\n        out[9] = (upTan - downTan) * yScale * 0.5;\n        out[10] = far / (near - far);\n        out[11] = -1.0;\n        out[12] = 0.0;\n        out[13] = 0.0;\n        out[14] = (far * near) / (near - far);\n        out[15] = 0.0;\n        return out;\n    }\n    /**\n     * Generates a orthogonal projection matrix with the given bounds.\n     * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n     * which matches WebGL/OpenGL's clip volume.\n     * @category Static\n     *\n     * @param out - mat4 frustum matrix will be written into\n     * @param left - Left bound of the frustum\n     * @param right - Right bound of the frustum\n     * @param bottom - Bottom bound of the frustum\n     * @param top - Top bound of the frustum\n     * @param near - Near bound of the frustum\n     * @param far - Far bound of the frustum\n     * @returns `out`\n     */\n    static orthoNO(out, left, right, bottom, top, near, far) {\n        const lr = 1 / (left - right);\n        const bt = 1 / (bottom - top);\n        const nf = 1 / (near - far);\n        out[0] = -2 * lr;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = -2 * bt;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = 0;\n        out[10] = 2 * nf;\n        out[11] = 0;\n        out[12] = (left + right) * lr;\n        out[13] = (top + bottom) * bt;\n        out[14] = (far + near) * nf;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Alias for {@link Mat4.orthoNO}\n     * @category Static\n     * @deprecated Use {@link Mat4.orthoNO} or {@link Mat4.orthoZO} explicitly\n     */\n    static ortho(out, left, right, bottom, top, near, far) { return out; }\n    /**\n     * Generates a orthogonal projection matrix with the given bounds.\n     * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n     * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n     * @category Static\n     *\n     * @param out - mat4 frustum matrix will be written into\n     * @param left - Left bound of the frustum\n     * @param right - Right bound of the frustum\n     * @param bottom - Bottom bound of the frustum\n     * @param top - Top bound of the frustum\n     * @param near - Near bound of the frustum\n     * @param far - Far bound of the frustum\n     * @returns `out`\n     */\n    static orthoZO(out, left, right, bottom, top, near, far) {\n        const lr = 1 / (left - right);\n        const bt = 1 / (bottom - top);\n        const nf = 1 / (near - far);\n        out[0] = -2 * lr;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = -2 * bt;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = 0;\n        out[10] = nf;\n        out[11] = 0;\n        out[12] = (left + right) * lr;\n        out[13] = (top + bottom) * bt;\n        out[14] = near * nf;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Generates a look-at matrix with the given eye position, focal point, and up axis.\n     * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n     * @category Static\n     *\n     * @param out - mat4 frustum matrix will be written into\n     * @param eye - Position of the viewer\n     * @param center - Point the viewer is looking at\n     * @param up - vec3 pointing up\n     * @returns `out`\n     */\n    static lookAt(out, eye, center, up) {\n        const eyex = eye[0];\n        const eyey = eye[1];\n        const eyez = eye[2];\n        const upx = up[0];\n        const upy = up[1];\n        const upz = up[2];\n        const centerx = center[0];\n        const centery = center[1];\n        const centerz = center[2];\n        if (Math.abs(eyex - centerx) < EPSILON &&\n            Math.abs(eyey - centery) < EPSILON &&\n            Math.abs(eyez - centerz) < EPSILON) {\n            return Mat4.identity(out);\n        }\n        let z0 = eyex - centerx;\n        let z1 = eyey - centery;\n        let z2 = eyez - centerz;\n        let len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n        let x0 = upy * z2 - upz * z1;\n        let x1 = upz * z0 - upx * z2;\n        let x2 = upx * z1 - upy * z0;\n        len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n        if (!len) {\n            x0 = 0;\n            x1 = 0;\n            x2 = 0;\n        }\n        else {\n            len = 1 / len;\n            x0 *= len;\n            x1 *= len;\n            x2 *= len;\n        }\n        let y0 = z1 * x2 - z2 * x1;\n        let y1 = z2 * x0 - z0 * x2;\n        let y2 = z0 * x1 - z1 * x0;\n        len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n        if (!len) {\n            y0 = 0;\n            y1 = 0;\n            y2 = 0;\n        }\n        else {\n            len = 1 / len;\n            y0 *= len;\n            y1 *= len;\n            y2 *= len;\n        }\n        out[0] = x0;\n        out[1] = y0;\n        out[2] = z0;\n        out[3] = 0;\n        out[4] = x1;\n        out[5] = y1;\n        out[6] = z1;\n        out[7] = 0;\n        out[8] = x2;\n        out[9] = y2;\n        out[10] = z2;\n        out[11] = 0;\n        out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n        out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n        out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Generates a matrix that makes something look at something else.\n     * @category Static\n     *\n     * @param out - mat4 frustum matrix will be written into\n     * @param eye - Position of the viewer\n     * @param target - Point the viewer is looking at\n     * @param up - vec3 pointing up\n     * @returns `out`\n     */\n    static targetTo(out, eye, target, up) {\n        const eyex = eye[0];\n        const eyey = eye[1];\n        const eyez = eye[2];\n        const upx = up[0];\n        const upy = up[1];\n        const upz = up[2];\n        let z0 = eyex - target[0];\n        let z1 = eyey - target[1];\n        let z2 = eyez - target[2];\n        let len = z0 * z0 + z1 * z1 + z2 * z2;\n        if (len > 0) {\n            len = 1 / Math.sqrt(len);\n            z0 *= len;\n            z1 *= len;\n            z2 *= len;\n        }\n        let x0 = upy * z2 - upz * z1;\n        let x1 = upz * z0 - upx * z2;\n        let x2 = upx * z1 - upy * z0;\n        len = x0 * x0 + x1 * x1 + x2 * x2;\n        if (len > 0) {\n            len = 1 / Math.sqrt(len);\n            x0 *= len;\n            x1 *= len;\n            x2 *= len;\n        }\n        out[0] = x0;\n        out[1] = x1;\n        out[2] = x2;\n        out[3] = 0;\n        out[4] = z1 * x2 - z2 * x1;\n        out[5] = z2 * x0 - z0 * x2;\n        out[6] = z0 * x1 - z1 * x0;\n        out[7] = 0;\n        out[8] = z0;\n        out[9] = z1;\n        out[10] = z2;\n        out[11] = 0;\n        out[12] = eyex;\n        out[13] = eyey;\n        out[14] = eyez;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Returns Frobenius norm of a {@link Mat4}\n     * @category Static\n     *\n     * @param a - the matrix to calculate Frobenius norm of\n     * @returns Frobenius norm\n     */\n    static frob(a) {\n        return Math.sqrt(a[0] * a[0] +\n            a[1] * a[1] +\n            a[2] * a[2] +\n            a[3] * a[3] +\n            a[4] * a[4] +\n            a[5] * a[5] +\n            a[6] * a[6] +\n            a[7] * a[7] +\n            a[8] * a[8] +\n            a[9] * a[9] +\n            a[10] * a[10] +\n            a[11] * a[11] +\n            a[12] * a[12] +\n            a[13] * a[13] +\n            a[14] * a[14] +\n            a[15] * a[15]);\n    }\n    /**\n     * Adds two {@link Mat4}'s\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static add(out, a, b) {\n        out[0] = a[0] + b[0];\n        out[1] = a[1] + b[1];\n        out[2] = a[2] + b[2];\n        out[3] = a[3] + b[3];\n        out[4] = a[4] + b[4];\n        out[5] = a[5] + b[5];\n        out[6] = a[6] + b[6];\n        out[7] = a[7] + b[7];\n        out[8] = a[8] + b[8];\n        out[9] = a[9] + b[9];\n        out[10] = a[10] + b[10];\n        out[11] = a[11] + b[11];\n        out[12] = a[12] + b[12];\n        out[13] = a[13] + b[13];\n        out[14] = a[14] + b[14];\n        out[15] = a[15] + b[15];\n        return out;\n    }\n    /**\n     * Subtracts matrix b from matrix a\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static subtract(out, a, b) {\n        out[0] = a[0] - b[0];\n        out[1] = a[1] - b[1];\n        out[2] = a[2] - b[2];\n        out[3] = a[3] - b[3];\n        out[4] = a[4] - b[4];\n        out[5] = a[5] - b[5];\n        out[6] = a[6] - b[6];\n        out[7] = a[7] - b[7];\n        out[8] = a[8] - b[8];\n        out[9] = a[9] - b[9];\n        out[10] = a[10] - b[10];\n        out[11] = a[11] - b[11];\n        out[12] = a[12] - b[12];\n        out[13] = a[13] - b[13];\n        out[14] = a[14] - b[14];\n        out[15] = a[15] - b[15];\n        return out;\n    }\n    /**\n     * Alias for {@link Mat4.subtract}\n     * @category Static\n     */\n    static sub(out, a, b) { return out; }\n    /**\n     * Multiply each element of the matrix by a scalar.\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to scale\n     * @param b - amount to scale the matrix's elements by\n     * @returns `out`\n     */\n    static multiplyScalar(out, a, b) {\n        out[0] = a[0] * b;\n        out[1] = a[1] * b;\n        out[2] = a[2] * b;\n        out[3] = a[3] * b;\n        out[4] = a[4] * b;\n        out[5] = a[5] * b;\n        out[6] = a[6] * b;\n        out[7] = a[7] * b;\n        out[8] = a[8] * b;\n        out[9] = a[9] * b;\n        out[10] = a[10] * b;\n        out[11] = a[11] * b;\n        out[12] = a[12] * b;\n        out[13] = a[13] * b;\n        out[14] = a[14] * b;\n        out[15] = a[15] * b;\n        return out;\n    }\n    /**\n     * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param scale - the amount to scale b's elements by before adding\n     * @returns `out`\n     */\n    static multiplyScalarAndAdd(out, a, b, scale) {\n        out[0] = a[0] + b[0] * scale;\n        out[1] = a[1] + b[1] * scale;\n        out[2] = a[2] + b[2] * scale;\n        out[3] = a[3] + b[3] * scale;\n        out[4] = a[4] + b[4] * scale;\n        out[5] = a[5] + b[5] * scale;\n        out[6] = a[6] + b[6] * scale;\n        out[7] = a[7] + b[7] * scale;\n        out[8] = a[8] + b[8] * scale;\n        out[9] = a[9] + b[9] * scale;\n        out[10] = a[10] + b[10] * scale;\n        out[11] = a[11] + b[11] * scale;\n        out[12] = a[12] + b[12] * scale;\n        out[13] = a[13] + b[13] * scale;\n        out[14] = a[14] + b[14] * scale;\n        out[15] = a[15] + b[15] * scale;\n        return out;\n    }\n    /**\n     * Returns whether or not two {@link Mat4}s have exactly the same elements in the same position (when compared with ===)\n     * @category Static\n     *\n     * @param a - The first matrix.\n     * @param b - The second matrix.\n     * @returns True if the matrices are equal, false otherwise.\n     */\n    static exactEquals(a, b) {\n        return (a[0] === b[0] &&\n            a[1] === b[1] &&\n            a[2] === b[2] &&\n            a[3] === b[3] &&\n            a[4] === b[4] &&\n            a[5] === b[5] &&\n            a[6] === b[6] &&\n            a[7] === b[7] &&\n            a[8] === b[8] &&\n            a[9] === b[9] &&\n            a[10] === b[10] &&\n            a[11] === b[11] &&\n            a[12] === b[12] &&\n            a[13] === b[13] &&\n            a[14] === b[14] &&\n            a[15] === b[15]);\n    }\n    /**\n     * Returns whether or not two {@link Mat4}s have approximately the same elements in the same position.\n     * @category Static\n     *\n     * @param a - The first matrix.\n     * @param b - The second matrix.\n     * @returns True if the matrices are equal, false otherwise.\n     */\n    static equals(a, b) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const a4 = a[4];\n        const a5 = a[5];\n        const a6 = a[6];\n        const a7 = a[7];\n        const a8 = a[8];\n        const a9 = a[9];\n        const a10 = a[10];\n        const a11 = a[11];\n        const a12 = a[12];\n        const a13 = a[13];\n        const a14 = a[14];\n        const a15 = a[15];\n        const b0 = b[0];\n        const b1 = b[1];\n        const b2 = b[2];\n        const b3 = b[3];\n        const b4 = b[4];\n        const b5 = b[5];\n        const b6 = b[6];\n        const b7 = b[7];\n        const b8 = b[8];\n        const b9 = b[9];\n        const b10 = b[10];\n        const b11 = b[11];\n        const b12 = b[12];\n        const b13 = b[13];\n        const b14 = b[14];\n        const b15 = b[15];\n        return (Math.abs(a0 - b0) <= EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3)) &&\n            Math.abs(a4 - b4) <= EPSILON * Math.max(1, Math.abs(a4), Math.abs(b4)) &&\n            Math.abs(a5 - b5) <= EPSILON * Math.max(1, Math.abs(a5), Math.abs(b5)) &&\n            Math.abs(a6 - b6) <= EPSILON * Math.max(1, Math.abs(a6), Math.abs(b6)) &&\n            Math.abs(a7 - b7) <= EPSILON * Math.max(1, Math.abs(a7), Math.abs(b7)) &&\n            Math.abs(a8 - b8) <= EPSILON * Math.max(1, Math.abs(a8), Math.abs(b8)) &&\n            Math.abs(a9 - b9) <= EPSILON * Math.max(1, Math.abs(a9), Math.abs(b9)) &&\n            Math.abs(a10 - b10) <= EPSILON * Math.max(1, Math.abs(a10), Math.abs(b10)) &&\n            Math.abs(a11 - b11) <= EPSILON * Math.max(1, Math.abs(a11), Math.abs(b11)) &&\n            Math.abs(a12 - b12) <= EPSILON * Math.max(1, Math.abs(a12), Math.abs(b12)) &&\n            Math.abs(a13 - b13) <= EPSILON * Math.max(1, Math.abs(a13), Math.abs(b13)) &&\n            Math.abs(a14 - b14) <= EPSILON * Math.max(1, Math.abs(a14), Math.abs(b14)) &&\n            Math.abs(a15 - b15) <= EPSILON * Math.max(1, Math.abs(a15), Math.abs(b15)));\n    }\n    /**\n     * Returns a string representation of a {@link Mat4}\n     * @category Static\n     *\n     * @param a - matrix to represent as a string\n     * @returns string representation of the matrix\n     */\n    static str(a) {\n        return `Mat4(${a.join(', ')})`;\n    }\n}\n// Temporary variables to prevent repeated allocations in the algorithms above.\nconst tmpVec3$1 = [0, 0, 0];\n// Instance method alias assignments\nMat4.prototype.mul = Mat4.prototype.multiply;\n// Static method alias assignments\nMat4.sub = Mat4.subtract;\nMat4.mul = Mat4.multiply;\nMat4.perspective = Mat4.perspectiveNO;\nMat4.ortho = Mat4.orthoNO;\n\n/**\n * 3 Dimensional Vector\n */\nclass Vec3 extends Float32Array {\n    /**\n    * The number of bytes in a {@link Vec3}.\n    */\n    static BYTE_LENGTH = 3 * Float32Array.BYTES_PER_ELEMENT;\n    /**\n    * Create a {@link Vec3}.\n    */\n    constructor(...values) {\n        switch (values.length) {\n            case 3:\n                super(values);\n                break;\n            case 2:\n                super(values[0], values[1], 3);\n                break;\n            case 1: {\n                const v = values[0];\n                if (typeof v === 'number') {\n                    super([v, v, v]);\n                }\n                else {\n                    super(v, 0, 3);\n                }\n                break;\n            }\n            default:\n                super(3);\n                break;\n        }\n    }\n    //============\n    // Attributes\n    //============\n    // Getters and setters to make component access read better.\n    // These are likely to be a little bit slower than direct array access.\n    /**\n     * The x component of the vector. Equivalent to `this[0];`\n     * @category Vector components\n     */\n    get x() { return this[0]; }\n    set x(value) { this[0] = value; }\n    /**\n     * The y component of the vector. Equivalent to `this[1];`\n     * @category Vector components\n     */\n    get y() { return this[1]; }\n    set y(value) { this[1] = value; }\n    /**\n     * The z component of the vector. Equivalent to `this[2];`\n     * @category Vector components\n     */\n    get z() { return this[2]; }\n    set z(value) { this[2] = value; }\n    // Alternate set of getters and setters in case this is being used to define\n    // a color.\n    /**\n     * The r component of the vector. Equivalent to `this[0];`\n     * @category Color components\n     */\n    get r() { return this[0]; }\n    set r(value) { this[0] = value; }\n    /**\n     * The g component of the vector. Equivalent to `this[1];`\n     * @category Color components\n     */\n    get g() { return this[1]; }\n    set g(value) { this[1] = value; }\n    /**\n     * The b component of the vector. Equivalent to `this[2];`\n     * @category Color components\n     */\n    get b() { return this[2]; }\n    set b(value) { this[2] = value; }\n    /**\n     * The magnitude (length) of this.\n     * Equivalent to `Vec3.magnitude(this);`\n     *\n     * Magnitude is used because the `length` attribute is already defined by\n     * `Float32Array` to mean the number of elements in the array.\n     */\n    get magnitude() {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n        return Math.sqrt(x * x + y * y + z * z);\n    }\n    /**\n     * Alias for {@link Vec3.magnitude}\n     */\n    get mag() { return this.magnitude; }\n    /**\n     * The squared magnitude (length) of `this`.\n     * Equivalent to `Vec3.squaredMagnitude(this);`\n     */\n    get squaredMagnitude() {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n        return x * x + y * y + z * z;\n    }\n    /**\n     * Alias for {@link Vec3.squaredMagnitude}\n     */\n    get sqrMag() { return this.squaredMagnitude; }\n    /**\n     * A string representation of `this`\n     * Equivalent to `Vec3.str(this);`\n     */\n    get str() {\n        return Vec3.str(this);\n    }\n    //===================\n    // Instances methods\n    //===================\n    /**\n     * Copy the values from another {@link Vec3} into `this`.\n     *\n     * @param a the source vector\n     * @returns `this`\n     */\n    copy(a) {\n        this.set(a);\n        return this;\n    }\n    /**\n     * Adds a {@link Vec3} to `this`.\n     * Equivalent to `Vec3.add(this, this, b);`\n     *\n     * @param b - The vector to add to `this`\n     * @returns `this`\n     */\n    add(b) {\n        this[0] += b[0];\n        this[1] += b[1];\n        this[2] += b[2];\n        return this;\n    }\n    /**\n     * Subtracts a {@link Vec3} from `this`.\n     * Equivalent to `Vec3.subtract(this, this, b);`\n     *\n     * @param b - The vector to subtract from `this`\n     * @returns `this`\n     */\n    subtract(b) {\n        this[0] -= b[0];\n        this[1] -= b[1];\n        this[2] -= b[2];\n        return this;\n    }\n    /**\n     * Alias for {@link Vec3.subtract}\n     */\n    sub(b) { return this; }\n    /**\n     * Multiplies `this` by a {@link Vec3}.\n     * Equivalent to `Vec3.multiply(this, this, b);`\n     *\n     * @param b - The vector to multiply `this` by\n     * @returns `this`\n     */\n    multiply(b) {\n        this[0] *= b[0];\n        this[1] *= b[1];\n        this[2] *= b[2];\n        return this;\n    }\n    /**\n     * Alias for {@link Vec3.multiply}\n     */\n    mul(b) { return this; }\n    /**\n     * Divides `this` by a {@link Vec3}.\n     * Equivalent to `Vec3.divide(this, this, b);`\n     *\n     * @param b - The vector to divide `this` by\n     * @returns `this`\n     */\n    divide(b) {\n        this[0] /= b[0];\n        this[1] /= b[1];\n        this[2] /= b[2];\n        return this;\n    }\n    /**\n     * Alias for {@link Vec3.divide}\n     */\n    div(b) { return this; }\n    /**\n     * Scales `this` by a scalar number.\n     * Equivalent to `Vec3.scale(this, this, b);`\n     *\n     * @param b - Amount to scale `this` by\n     * @returns `this`\n     */\n    scale(b) {\n        this[0] *= b;\n        this[1] *= b;\n        this[2] *= b;\n        return this;\n    }\n    /**\n     * Calculates `this` scaled by a scalar value then adds the result to `this`.\n     * Equivalent to `Vec3.scaleAndAdd(this, this, b, scale);`\n     *\n     * @param b - The vector to add to `this`\n     * @param scale - The amount to scale `b` by before adding\n     * @returns `this`\n     */\n    scaleAndAdd(b, scale) {\n        this[0] += b[0] * scale;\n        this[1] += b[1] * scale;\n        this[2] += b[2] * scale;\n        return this;\n    }\n    /**\n     * Calculates the euclidian distance between another {@link Vec3} and `this`.\n     * Equivalent to `Vec3.distance(this, b);`\n     *\n     * @param b - The vector to calculate the distance to\n     * @returns Distance between `this` and `b`\n     */\n    distance(b) {\n        return Vec3.distance(this, b);\n    }\n    /**\n     * Alias for {@link Vec3.distance}\n     */\n    dist(b) { return 0; }\n    /**\n     * Calculates the squared euclidian distance between another {@link Vec3} and `this`.\n     * Equivalent to `Vec3.squaredDistance(this, b);`\n     *\n     * @param b The vector to calculate the squared distance to\n     * @returns Squared distance between `this` and `b`\n     */\n    squaredDistance(b) {\n        return Vec3.squaredDistance(this, b);\n    }\n    /**\n     * Alias for {@link Vec3.squaredDistance}\n     */\n    sqrDist(b) { return 0; }\n    /**\n     * Negates the components of `this`.\n     * Equivalent to `Vec3.negate(this, this);`\n     *\n     * @returns `this`\n     */\n    negate() {\n        this[0] *= -1;\n        this[1] *= -1;\n        this[2] *= -1;\n        return this;\n    }\n    /**\n     * Inverts the components of `this`.\n     * Equivalent to `Vec3.inverse(this, this);`\n     *\n     * @returns `this`\n     */\n    invert() {\n        this[0] = 1.0 / this[0];\n        this[1] = 1.0 / this[1];\n        this[2] = 1.0 / this[2];\n        return this;\n    }\n    /**\n     * Calculates the dot product of this and another {@link Vec3}.\n     * Equivalent to `Vec3.dot(this, b);`\n     *\n     * @param b - The second operand\n     * @returns Dot product of `this` and `b`\n     */\n    dot(b) {\n        return this[0] * b[0] + this[1] * b[1] + this[2] * b[2];\n    }\n    /**\n     * Normalize `this`.\n     * Equivalent to `Vec3.normalize(this, this);`\n     *\n     * @returns `this`\n     */\n    normalize() {\n        return Vec3.normalize(this, this);\n    }\n    //================\n    // Static methods\n    //================\n    /**\n     * Creates a new, empty vec3\n     * @category Static\n     *\n     * @returns a new 3D vector\n     */\n    static create() {\n        return new Vec3();\n    }\n    /**\n     * Creates a new vec3 initialized with values from an existing vector\n     * @category Static\n     *\n     * @param a - vector to clone\n     * @returns a new 3D vector\n     */\n    static clone(a) {\n        return new Vec3(a);\n    }\n    /**\n     * Calculates the magnitude (length) of a {@link Vec3}\n     * @category Static\n     *\n     * @param a - Vector to calculate magnitude of\n     * @returns Magnitude of a\n     */\n    static magnitude(a) {\n        let x = a[0];\n        let y = a[1];\n        let z = a[2];\n        return Math.sqrt(x * x + y * y + z * z);\n    }\n    /**\n     * Alias for {@link Vec3.magnitude}\n     * @category Static\n     */\n    static mag(a) { return 0; }\n    /**\n     * Alias for {@link Vec3.magnitude}\n     * @category Static\n     * @deprecated Use {@link Vec3.magnitude} to avoid conflicts with builtin `length` methods/attribs\n     *\n     * @param a - vector to calculate length of\n     * @returns length of a\n     */\n    // @ts-ignore: Length conflicts with Function.length\n    static length(a) { return 0; }\n    /**\n     * Alias for {@link Vec3.magnitude}\n     * @category Static\n     * @deprecated Use {@link Vec3.mag}\n     */\n    static len(a) { return 0; }\n    /**\n     * Creates a new vec3 initialized with the given values\n     * @category Static\n     *\n     * @param x - X component\n     * @param y - Y component\n     * @param z - Z component\n     * @returns a new 3D vector\n     */\n    static fromValues(x, y, z) {\n        return new Vec3(x, y, z);\n    }\n    /**\n     * Copy the values from one vec3 to another\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the source vector\n     * @returns `out`\n     */\n    static copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        return out;\n    }\n    /**\n     * Set the components of a vec3 to the given values\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param x - X component\n     * @param y - Y component\n     * @param z - Z component\n     * @returns `out`\n     */\n    static set(out, x, y, z) {\n        out[0] = x;\n        out[1] = y;\n        out[2] = z;\n        return out;\n    }\n    /**\n     * Adds two {@link Vec3}s\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static add(out, a, b) {\n        out[0] = a[0] + b[0];\n        out[1] = a[1] + b[1];\n        out[2] = a[2] + b[2];\n        return out;\n    }\n    /**\n     * Subtracts vector b from vector a\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static subtract(out, a, b) {\n        out[0] = a[0] - b[0];\n        out[1] = a[1] - b[1];\n        out[2] = a[2] - b[2];\n        return out;\n    }\n    /**\n     * Alias for {@link Vec3.subtract}\n     * @category Static\n     */\n    static sub(out, a, b) { return [0, 0, 0]; }\n    ;\n    /**\n     * Multiplies two vec3's\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static multiply(out, a, b) {\n        out[0] = a[0] * b[0];\n        out[1] = a[1] * b[1];\n        out[2] = a[2] * b[2];\n        return out;\n    }\n    /**\n     * Alias for {@link Vec3.multiply}\n     * @category Static\n     */\n    static mul(out, a, b) { return [0, 0, 0]; }\n    /**\n     * Divides two vec3's\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static divide(out, a, b) {\n        out[0] = a[0] / b[0];\n        out[1] = a[1] / b[1];\n        out[2] = a[2] / b[2];\n        return out;\n    }\n    /**\n     * Alias for {@link Vec3.divide}\n     * @category Static\n     */\n    static div(out, a, b) { return [0, 0, 0]; }\n    ;\n    /**\n     * Math.ceil the components of a vec3\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - vector to ceil\n     * @returns `out`\n     */\n    static ceil(out, a) {\n        out[0] = Math.ceil(a[0]);\n        out[1] = Math.ceil(a[1]);\n        out[2] = Math.ceil(a[2]);\n        return out;\n    }\n    /**\n     * Math.floor the components of a vec3\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - vector to floor\n     * @returns `out`\n     */\n    static floor(out, a) {\n        out[0] = Math.floor(a[0]);\n        out[1] = Math.floor(a[1]);\n        out[2] = Math.floor(a[2]);\n        return out;\n    }\n    /**\n     * Returns the minimum of two vec3's\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static min(out, a, b) {\n        out[0] = Math.min(a[0], b[0]);\n        out[1] = Math.min(a[1], b[1]);\n        out[2] = Math.min(a[2], b[2]);\n        return out;\n    }\n    /**\n     * Returns the maximum of two vec3's\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static max(out, a, b) {\n        out[0] = Math.max(a[0], b[0]);\n        out[1] = Math.max(a[1], b[1]);\n        out[2] = Math.max(a[2], b[2]);\n        return out;\n    }\n    /**\n     * symmetric round the components of a vec3\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - vector to round\n     * @returns `out`\n     */\n    /*static round(out: Vec3Like, a: Readonly<Vec3Like>): Vec3Like {\n      out[0] = glMatrix.round(a[0]);\n      out[1] = glMatrix.round(a[1]);\n      out[2] = glMatrix.round(a[2]);\n      return out;\n    }*/\n    /**\n     * Scales a vec3 by a scalar number\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the vector to scale\n     * @param scale - amount to scale the vector by\n     * @returns `out`\n     */\n    static scale(out, a, scale) {\n        out[0] = a[0] * scale;\n        out[1] = a[1] * scale;\n        out[2] = a[2] * scale;\n        return out;\n    }\n    /**\n     * Adds two vec3's after scaling the second operand by a scalar value\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param scale - the amount to scale b by before adding\n     * @returns `out`\n     */\n    static scaleAndAdd(out, a, b, scale) {\n        out[0] = a[0] + b[0] * scale;\n        out[1] = a[1] + b[1] * scale;\n        out[2] = a[2] + b[2] * scale;\n        return out;\n    }\n    /**\n     * Calculates the euclidian distance between two vec3's\n     * @category Static\n     *\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns distance between a and b\n     */\n    static distance(a, b) {\n        const x = b[0] - a[0];\n        const y = b[1] - a[1];\n        const z = b[2] - a[2];\n        return Math.sqrt(x * x + y * y + z * z);\n    }\n    /**\n     * Alias for {@link Vec3.distance}\n     */\n    static dist(a, b) { return 0; }\n    /**\n     * Calculates the squared euclidian distance between two vec3's\n     * @category Static\n     *\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns squared distance between a and b\n     */\n    static squaredDistance(a, b) {\n        const x = b[0] - a[0];\n        const y = b[1] - a[1];\n        const z = b[2] - a[2];\n        return x * x + y * y + z * z;\n    }\n    /**\n     * Alias for {@link Vec3.squaredDistance}\n     */\n    static sqrDist(a, b) { return 0; }\n    /**\n     * Calculates the squared length of a vec3\n     * @category Static\n     *\n     * @param a - vector to calculate squared length of\n     * @returns squared length of a\n     */\n    static squaredLength(a) {\n        const x = a[0];\n        const y = a[1];\n        const z = a[2];\n        return x * x + y * y + z * z;\n    }\n    /**\n     * Alias for {@link Vec3.squaredLength}\n     */\n    static sqrLen(a, b) { return 0; }\n    /**\n     * Negates the components of a vec3\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - vector to negate\n     * @returns `out`\n     */\n    static negate(out, a) {\n        out[0] = -a[0];\n        out[1] = -a[1];\n        out[2] = -a[2];\n        return out;\n    }\n    /**\n     * Returns the inverse of the components of a vec3\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - vector to invert\n     * @returns `out`\n     */\n    static inverse(out, a) {\n        out[0] = 1.0 / a[0];\n        out[1] = 1.0 / a[1];\n        out[2] = 1.0 / a[2];\n        return out;\n    }\n    /**\n     * Normalize a vec3\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - vector to normalize\n     * @returns `out`\n     */\n    static normalize(out, a) {\n        const x = a[0];\n        const y = a[1];\n        const z = a[2];\n        let len = x * x + y * y + z * z;\n        if (len > 0) {\n            //TODO: evaluate use of glm_invsqrt here?\n            len = 1 / Math.sqrt(len);\n        }\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n        out[2] = a[2] * len;\n        return out;\n    }\n    /**\n     * Calculates the dot product of two vec3's\n     * @category Static\n     *\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns dot product of a and b\n     */\n    static dot(a, b) {\n        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    }\n    /**\n     * Computes the cross product of two vec3's\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static cross(out, a, b) {\n        const ax = a[0], ay = a[1], az = a[2];\n        const bx = b[0], by = b[1], bz = b[2];\n        out[0] = ay * bz - az * by;\n        out[1] = az * bx - ax * bz;\n        out[2] = ax * by - ay * bx;\n        return out;\n    }\n    /**\n     * Performs a linear interpolation between two vec3's\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param t - interpolation amount, in the range [0-1], between the two inputs\n     * @returns `out`\n     */\n    static lerp(out, a, b, t) {\n        const ax = a[0];\n        const ay = a[1];\n        const az = a[2];\n        out[0] = ax + t * (b[0] - ax);\n        out[1] = ay + t * (b[1] - ay);\n        out[2] = az + t * (b[2] - az);\n        return out;\n    }\n    /**\n     * Performs a spherical linear interpolation between two vec3's\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param t - interpolation amount, in the range [0-1], between the two inputs\n     * @returns `out`\n     */\n    static slerp(out, a, b, t) {\n        const angle = Math.acos(Math.min(Math.max(Vec3.dot(a, b), -1), 1));\n        const sinTotal = Math.sin(angle);\n        const ratioA = Math.sin((1 - t) * angle) / sinTotal;\n        const ratioB = Math.sin(t * angle) / sinTotal;\n        out[0] = ratioA * a[0] + ratioB * b[0];\n        out[1] = ratioA * a[1] + ratioB * b[1];\n        out[2] = ratioA * a[2] + ratioB * b[2];\n        return out;\n    }\n    /**\n     * Performs a hermite interpolation with two control points\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param c - the third operand\n     * @param d - the fourth operand\n     * @param t - interpolation amount, in the range [0-1], between the two inputs\n     * @returns `out`\n     */\n    static hermite(out, a, b, c, d, t) {\n        const factorTimes2 = t * t;\n        const factor1 = factorTimes2 * (2 * t - 3) + 1;\n        const factor2 = factorTimes2 * (t - 2) + t;\n        const factor3 = factorTimes2 * (t - 1);\n        const factor4 = factorTimes2 * (3 - 2 * t);\n        out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n        out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n        out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n        return out;\n    }\n    /**\n     * Performs a bezier interpolation with two control points\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param c - the third operand\n     * @param d - the fourth operand\n     * @param t - interpolation amount, in the range [0-1], between the two inputs\n     * @returns `out`\n     */\n    static bezier(out, a, b, c, d, t) {\n        const inverseFactor = 1 - t;\n        const inverseFactorTimesTwo = inverseFactor * inverseFactor;\n        const factorTimes2 = t * t;\n        const factor1 = inverseFactorTimesTwo * inverseFactor;\n        const factor2 = 3 * t * inverseFactorTimesTwo;\n        const factor3 = 3 * factorTimes2 * inverseFactor;\n        const factor4 = factorTimes2 * t;\n        out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n        out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n        out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n        return out;\n    }\n    /**\n     * Generates a random vector with the given scale\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n     * @returns `out`\n     */\n    /*static random(out: Vec3Like, scale) {\n      scale = scale === undefined ? 1.0 : scale;\n  \n      let r = glMatrix.RANDOM() * 2.0 * Math.PI;\n      let z = glMatrix.RANDOM() * 2.0 - 1.0;\n      let zScale = Math.sqrt(1.0 - z * z) * scale;\n  \n      out[0] = Math.cos(r) * zScale;\n      out[1] = Math.sin(r) * zScale;\n      out[2] = z * scale;\n      return out;\n    }*/\n    /**\n     * Transforms the vec3 with a mat4.\n     * 4th vector component is implicitly '1'\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the vector to transform\n     * @param m - matrix to transform with\n     * @returns `out`\n     */\n    static transformMat4(out, a, m) {\n        const x = a[0], y = a[1], z = a[2];\n        const w = (m[3] * x + m[7] * y + m[11] * z + m[15]) || 1.0;\n        out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n        out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n        out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n        return out;\n    }\n    /**\n     * Transforms the vec3 with a mat3.\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the vector to transform\n     * @param m - the 3x3 matrix to transform with\n     * @returns `out`\n     */\n    static transformMat3(out, a, m) {\n        let x = a[0], y = a[1], z = a[2];\n        out[0] = x * m[0] + y * m[3] + z * m[6];\n        out[1] = x * m[1] + y * m[4] + z * m[7];\n        out[2] = x * m[2] + y * m[5] + z * m[8];\n        return out;\n    }\n    /**\n     * Transforms the vec3 with a quat\n     * Can also be used for dual quaternions. (Multiply it with the real part)\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the vector to transform\n     * @param q - quaternion to transform with\n     * @returns `out`\n     */\n    static transformQuat(out, a, q) {\n        // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n        const qx = q[0];\n        const qy = q[1];\n        const qz = q[2];\n        const w2 = q[3] * 2;\n        const x = a[0];\n        const y = a[1];\n        const z = a[2];\n        // var qvec = [qx, qy, qz];\n        // var uv = vec3.cross([], qvec, a);\n        const uvx = (qy * z - qz * y);\n        const uvy = (qz * x - qx * z);\n        const uvz = (qx * y - qy * x);\n        // var uuv = vec3.cross([], qvec, uv);\n        // vec3.scale(uuv, uuv, 2);\n        const uuvx = (qy * uvz - qz * uvy) * 2;\n        const uuvy = (qz * uvx - qx * uvz) * 2;\n        const uuvz = (qx * uvy - qy * uvx) * 2;\n        // vec3.scale(uv, uv, 2 * w);\n        // return vec3.add(out, a, vec3.add(out, uv, uuv));\n        out[0] = x + (uvx * w2) + uuvx;\n        out[1] = y + (uvy * w2) + uuvy;\n        out[2] = z + (uvz * w2) + uuvz;\n        return out;\n    }\n    /**\n     * Rotate a 3D vector around the x-axis\n     * @param out - The receiving vec3\n     * @param a - The vec3 point to rotate\n     * @param b - The origin of the rotation\n     * @param rad - The angle of rotation in radians\n     * @returns `out`\n     */\n    static rotateX(out, a, b, rad) {\n        const by = b[1];\n        const bz = b[2];\n        //Translate point to the origin\n        const py = a[1] - by;\n        const pz = a[2] - bz;\n        //perform rotation\n        //translate to correct position\n        out[0] = a[0];\n        out[1] = (py * Math.cos(rad) - pz * Math.sin(rad)) + by;\n        out[2] = (py * Math.sin(rad) + pz * Math.cos(rad)) + bz;\n        return out;\n    }\n    /**\n     * Rotate a 3D vector around the y-axis\n     * @param out - The receiving vec3\n     * @param a - The vec3 point to rotate\n     * @param b - The origin of the rotation\n     * @param rad - The angle of rotation in radians\n     * @returns `out`\n     */\n    static rotateY(out, a, b, rad) {\n        const bx = b[0];\n        const bz = b[2];\n        //Translate point to the origin\n        const px = a[0] - bx;\n        const pz = a[2] - bz;\n        //perform rotation\n        //translate to correct position\n        out[0] = (pz * Math.sin(rad) + px * Math.cos(rad)) + bx;\n        out[1] = a[1];\n        out[2] = (pz * Math.cos(rad) - px * Math.sin(rad)) + bz;\n        return out;\n    }\n    /**\n     * Rotate a 3D vector around the z-axis\n     * @param out - The receiving vec3\n     * @param a - The vec3 point to rotate\n     * @param b - The origin of the rotation\n     * @param rad - The angle of rotation in radians\n     * @returns `out`\n     */\n    static rotateZ(out, a, b, rad) {\n        const bx = b[0];\n        const by = b[1];\n        //Translate point to the origin\n        const px = a[0] - bx;\n        const py = a[1] - by;\n        //perform rotation\n        //translate to correct position\n        out[0] = (px * Math.cos(rad) - py * Math.sin(rad)) + bx;\n        out[1] = (px * Math.sin(rad) + py * Math.cos(rad)) + by;\n        out[2] = b[2];\n        return out;\n    }\n    /**\n     * Get the angle between two 3D vectors\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns The angle in radians\n     */\n    static angle(a, b) {\n        const ax = a[0];\n        const ay = a[1];\n        const az = a[2];\n        const bx = b[0];\n        const by = b[1];\n        const bz = b[2];\n        const mag = Math.sqrt((ax * ax + ay * ay + az * az) * (bx * bx + by * by + bz * bz));\n        const cosine = mag && Vec3.dot(a, b) / mag;\n        return Math.acos(Math.min(Math.max(cosine, -1), 1));\n    }\n    /**\n     * Set the components of a vec3 to zero\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @returns `out`\n     */\n    static zero(out) {\n        out[0] = 0.0;\n        out[1] = 0.0;\n        out[2] = 0.0;\n        return out;\n    }\n    /**\n     * Returns a string representation of a vector\n     * @category Static\n     *\n     * @param a - vector to represent as a string\n     * @returns string representation of the vector\n     */\n    static str(a) {\n        return `Vec3(${a.join(', ')})`;\n    }\n    /**\n     * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n     * @category Static\n     *\n     * @param a - The first vector.\n     * @param b - The second vector.\n     * @returns True if the vectors are equal, false otherwise.\n     */\n    static exactEquals(a, b) {\n        return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n    }\n    /**\n     * Returns whether or not the vectors have approximately the same elements in the same position.\n     * @category Static\n     *\n     * @param a - The first vector.\n     * @param b - The second vector.\n     * @returns True if the vectors are equal, false otherwise.\n     */\n    static equals(a, b) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const b0 = b[0];\n        const b1 = b[1];\n        const b2 = b[2];\n        return (Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)));\n    }\n}\n// Instance method alias assignments\nVec3.prototype.sub = Vec3.prototype.subtract;\nVec3.prototype.mul = Vec3.prototype.multiply;\nVec3.prototype.div = Vec3.prototype.divide;\nVec3.prototype.dist = Vec3.prototype.distance;\nVec3.prototype.sqrDist = Vec3.prototype.squaredDistance;\n// Static method alias assignments\nVec3.sub = Vec3.subtract;\nVec3.mul = Vec3.multiply;\nVec3.div = Vec3.divide;\nVec3.dist = Vec3.distance;\nVec3.sqrDist = Vec3.squaredDistance;\nVec3.sqrLen = Vec3.squaredLength;\nVec3.mag = Vec3.magnitude;\nVec3.length = Vec3.magnitude;\nVec3.len = Vec3.magnitude;\n\n/**\n * 4 Dimensional Vector\n */\nclass Vec4 extends Float32Array {\n    /**\n     * The number of bytes in a {@link Vec4}.\n     */\n    static BYTE_LENGTH = 4 * Float32Array.BYTES_PER_ELEMENT;\n    /**\n     * Create a {@link Vec4}.\n     */\n    constructor(...values) {\n        switch (values.length) {\n            case 4:\n                super(values);\n                break;\n            case 2:\n                super(values[0], values[1], 4);\n                break;\n            case 1: {\n                const v = values[0];\n                if (typeof v === 'number') {\n                    super([v, v, v, v]);\n                }\n                else {\n                    super(v, 0, 4);\n                }\n                break;\n            }\n            default:\n                super(4);\n                break;\n        }\n    }\n    //============\n    // Attributes\n    //============\n    // Getters and setters to make component access read better.\n    // These are likely to be a little bit slower than direct array access.\n    /**\n     * The x component of the vector. Equivalent to `this[0];`\n     * @category Vector components\n     */\n    get x() { return this[0]; }\n    set x(value) { this[0] = value; }\n    /**\n     * The y component of the vector. Equivalent to `this[1];`\n     * @category Vector components\n     */\n    get y() { return this[1]; }\n    set y(value) { this[1] = value; }\n    /**\n     * The z component of the vector. Equivalent to `this[2];`\n     * @category Vector components\n     */\n    get z() { return this[2]; }\n    set z(value) { this[2] = value; }\n    /**\n     * The w component of the vector. Equivalent to `this[3];`\n     * @category Vector components\n     */\n    get w() { return this[3]; }\n    set w(value) { this[3] = value; }\n    // Alternate set of getters and setters in case this is being used to define\n    // a color.\n    /**\n     * The r component of the vector. Equivalent to `this[0];`\n     * @category Color components\n     */\n    get r() { return this[0]; }\n    set r(value) { this[0] = value; }\n    /**\n     * The g component of the vector. Equivalent to `this[1];`\n     * @category Color components\n     */\n    get g() { return this[1]; }\n    set g(value) { this[1] = value; }\n    /**\n     * The b component of the vector. Equivalent to `this[2];`\n     * @category Color components\n     */\n    get b() { return this[2]; }\n    set b(value) { this[2] = value; }\n    /**\n     * The a component of the vector. Equivalent to `this[3];`\n     * @category Color components\n     */\n    get a() { return this[3]; }\n    set a(value) { this[3] = value; }\n    /**\n     * The magnitude (length) of this.\n     * Equivalent to `Vec4.magnitude(this);`\n     *\n     * Magnitude is used because the `length` attribute is already defined by\n     * `Float32Array` to mean the number of elements in the array.\n     */\n    get magnitude() {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n        const w = this[3];\n        return Math.sqrt(x * x + y * y + z * z + w * w);\n    }\n    /**\n     * Alias for {@link Vec4.magnitude}\n     */\n    get mag() { return this.magnitude; }\n    /**\n     * A string representation of `this`\n     * Equivalent to `Vec4.str(this);`\n     */\n    get str() {\n        return Vec4.str(this);\n    }\n    //===================\n    // Instances methods\n    //===================\n    /**\n     * Copy the values from another {@link Vec4} into `this`.\n     *\n     * @param a the source vector\n     * @returns `this`\n     */\n    copy(a) {\n        super.set(a);\n        return this;\n    }\n    /**\n     * Adds a {@link Vec4} to `this`.\n     * Equivalent to `Vec4.add(this, this, b);`\n     *\n     * @param b - The vector to add to `this`\n     * @returns `this`\n     */\n    add(b) {\n        this[0] += b[0];\n        this[1] += b[1];\n        this[2] += b[2];\n        this[3] += b[3];\n        return this;\n    }\n    /**\n     * Subtracts a {@link Vec4} from `this`.\n     * Equivalent to `Vec4.subtract(this, this, b);`\n     *\n     * @param b - The vector to subtract from `this`\n     * @returns `this`\n     */\n    subtract(b) {\n        this[0] -= b[0];\n        this[1] -= b[1];\n        this[2] -= b[2];\n        this[3] -= b[3];\n        return this;\n    }\n    /**\n     * Alias for {@link Vec4.subtract}\n     */\n    sub(b) { return this; }\n    /**\n     * Multiplies `this` by a {@link Vec4}.\n     * Equivalent to `Vec4.multiply(this, this, b);`\n     *\n     * @param b - The vector to multiply `this` by\n     * @returns `this`\n     */\n    multiply(b) {\n        this[0] *= b[0];\n        this[1] *= b[1];\n        this[2] *= b[2];\n        this[3] *= b[3];\n        return this;\n    }\n    /**\n     * Alias for {@link Vec4.multiply}\n     */\n    mul(b) { return this; }\n    /**\n     * Divides `this` by a {@link Vec4}.\n     * Equivalent to `Vec4.divide(this, this, b);`\n     *\n     * @param b - The vector to divide `this` by\n     * @returns `this`\n     */\n    divide(b) {\n        this[0] /= b[0];\n        this[1] /= b[1];\n        this[2] /= b[2];\n        this[3] /= b[3];\n        return this;\n    }\n    /**\n     * Alias for {@link Vec4.divide}\n     */\n    div(b) { return this; }\n    /**\n     * Scales `this` by a scalar number.\n     * Equivalent to `Vec4.scale(this, this, b);`\n     *\n     * @param b - Amount to scale `this` by\n     * @returns `this`\n     */\n    scale(b) {\n        this[0] *= b;\n        this[1] *= b;\n        this[2] *= b;\n        this[3] *= b;\n        return this;\n    }\n    /**\n     * Calculates `this` scaled by a scalar value then adds the result to `this`.\n     * Equivalent to `Vec4.scaleAndAdd(this, this, b, scale);`\n     *\n     * @param b - The vector to add to `this`\n     * @param scale - The amount to scale `b` by before adding\n     * @returns `this`\n     */\n    scaleAndAdd(b, scale) {\n        this[0] += b[0] * scale;\n        this[1] += b[1] * scale;\n        this[2] += b[2] * scale;\n        this[3] += b[3] * scale;\n        return this;\n    }\n    /**\n     * Calculates the euclidian distance between another {@link Vec4} and `this`.\n     * Equivalent to `Vec4.distance(this, b);`\n     *\n     * @param b - The vector to calculate the distance to\n     * @returns Distance between `this` and `b`\n     */\n    distance(b) {\n        return Vec4.distance(this, b);\n    }\n    /**\n     * Alias for {@link Vec4.distance}\n     */\n    dist(b) { return 0; }\n    /**\n     * Calculates the squared euclidian distance between another {@link Vec4} and `this`.\n     * Equivalent to `Vec4.squaredDistance(this, b);`\n     *\n     * @param b The vector to calculate the squared distance to\n     * @returns Squared distance between `this` and `b`\n     */\n    squaredDistance(b) {\n        return Vec4.squaredDistance(this, b);\n    }\n    /**\n     * Alias for {@link Vec4.squaredDistance}\n     */\n    sqrDist(b) { return 0; }\n    /**\n     * Negates the components of `this`.\n     * Equivalent to `Vec4.negate(this, this);`\n     *\n     * @returns `this`\n     */\n    negate() {\n        this[0] *= -1;\n        this[1] *= -1;\n        this[2] *= -1;\n        this[3] *= -1;\n        return this;\n    }\n    /**\n     * Inverts the components of `this`.\n     * Equivalent to `Vec4.inverse(this, this);`\n     *\n     * @returns `this`\n     */\n    invert() {\n        this[0] = 1.0 / this[0];\n        this[1] = 1.0 / this[1];\n        this[2] = 1.0 / this[2];\n        this[3] = 1.0 / this[3];\n        return this;\n    }\n    /**\n     * Calculates the dot product of this and another {@link Vec4}.\n     * Equivalent to `Vec4.dot(this, b);`\n     *\n     * @param b - The second operand\n     * @returns Dot product of `this` and `b`\n     */\n    dot(b) {\n        return this[0] * b[0] + this[1] * b[1] + this[2] * b[2] + this[3] * b[3];\n    }\n    /**\n     * Normalize `this`.\n     * Equivalent to `Vec4.normalize(this, this);`\n     *\n     * @returns `this`\n     */\n    normalize() {\n        return Vec4.normalize(this, this);\n    }\n    //===================\n    // Static methods\n    //===================\n    /**\n     * Creates a new, empty {@link Vec4}\n     * @category Static\n     *\n     * @returns a new 4D vector\n     */\n    static create() {\n        return new Vec4();\n    }\n    /**\n     * Creates a new {@link Vec4} initialized with values from an existing vector\n     * @category Static\n     *\n     * @param a - vector to clone\n     * @returns a new 4D vector\n     */\n    static clone(a) {\n        return new Vec4(a);\n    }\n    /**\n     * Creates a new {@link Vec4} initialized with the given values\n     * @category Static\n     *\n     * @param x - X component\n     * @param y - Y component\n     * @param z - Z component\n     * @param w - W component\n     * @returns a new 4D vector\n     */\n    static fromValues(x, y, z, w) {\n        return new Vec4(x, y, z, w);\n    }\n    /**\n     * Copy the values from one {@link Vec4} to another\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the source vector\n     * @returns `out`\n     */\n    static copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        return out;\n    }\n    /**\n     * Set the components of a {@link Vec4} to the given values\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param x - X component\n     * @param y - Y component\n     * @param z - Z component\n     * @param w - W component\n     * @returns `out`\n     */\n    static set(out, x, y, z, w) {\n        out[0] = x;\n        out[1] = y;\n        out[2] = z;\n        out[3] = w;\n        return out;\n    }\n    /**\n     * Adds two {@link Vec4}s\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static add(out, a, b) {\n        out[0] = a[0] + b[0];\n        out[1] = a[1] + b[1];\n        out[2] = a[2] + b[2];\n        out[3] = a[3] + b[3];\n        return out;\n    }\n    /**\n     * Subtracts vector b from vector a\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static subtract(out, a, b) {\n        out[0] = a[0] - b[0];\n        out[1] = a[1] - b[1];\n        out[2] = a[2] - b[2];\n        out[3] = a[3] - b[3];\n        return out;\n    }\n    /**\n     * Alias for {@link Vec4.subtract}\n     * @category Static\n     */\n    static sub(out, a, b) { return out; }\n    /**\n     * Multiplies two {@link Vec4}'s\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static multiply(out, a, b) {\n        out[0] = a[0] * b[0];\n        out[1] = a[1] * b[1];\n        out[2] = a[2] * b[2];\n        out[3] = a[3] * b[3];\n        return out;\n    }\n    /**\n     * Alias for {@link Vec4.multiply}\n     * @category Static\n     */\n    static mul(out, a, b) { return out; }\n    /**\n     * Divides two {@link Vec4}'s\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static divide(out, a, b) {\n        out[0] = a[0] / b[0];\n        out[1] = a[1] / b[1];\n        out[2] = a[2] / b[2];\n        out[3] = a[3] / b[3];\n        return out;\n    }\n    /**\n     * Alias for {@link Vec4.divide}\n     * @category Static\n     */\n    static div(out, a, b) { return out; }\n    /**\n     * Math.ceil the components of a {@link Vec4}\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - vector to ceil\n     * @returns `out`\n     */\n    static ceil(out, a) {\n        out[0] = Math.ceil(a[0]);\n        out[1] = Math.ceil(a[1]);\n        out[2] = Math.ceil(a[2]);\n        out[3] = Math.ceil(a[3]);\n        return out;\n    }\n    /**\n     * Math.floor the components of a {@link Vec4}\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - vector to floor\n     * @returns `out`\n     */\n    static floor(out, a) {\n        out[0] = Math.floor(a[0]);\n        out[1] = Math.floor(a[1]);\n        out[2] = Math.floor(a[2]);\n        out[3] = Math.floor(a[3]);\n        return out;\n    }\n    /**\n     * Returns the minimum of two {@link Vec4}'s\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static min(out, a, b) {\n        out[0] = Math.min(a[0], b[0]);\n        out[1] = Math.min(a[1], b[1]);\n        out[2] = Math.min(a[2], b[2]);\n        out[3] = Math.min(a[3], b[3]);\n        return out;\n    }\n    /**\n     * Returns the maximum of two {@link Vec4}'s\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static max(out, a, b) {\n        out[0] = Math.max(a[0], b[0]);\n        out[1] = Math.max(a[1], b[1]);\n        out[2] = Math.max(a[2], b[2]);\n        out[3] = Math.max(a[3], b[3]);\n        return out;\n    }\n    /**\n     * Math.round the components of a {@link Vec4}\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - vector to round\n     * @returns `out`\n     */\n    static round(out, a) {\n        out[0] = Math.round(a[0]);\n        out[1] = Math.round(a[1]);\n        out[2] = Math.round(a[2]);\n        out[3] = Math.round(a[3]);\n        return out;\n    }\n    /**\n     * Scales a {@link Vec4} by a scalar number\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the vector to scale\n     * @param scale - amount to scale the vector by\n     * @returns `out`\n     */\n    static scale(out, a, scale) {\n        out[0] = a[0] * scale;\n        out[1] = a[1] * scale;\n        out[2] = a[2] * scale;\n        out[3] = a[3] * scale;\n        return out;\n    }\n    /**\n     * Adds two {@link Vec4}'s after scaling the second operand by a scalar value\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param scale - the amount to scale b by before adding\n     * @returns `out`\n     */\n    static scaleAndAdd(out, a, b, scale) {\n        out[0] = a[0] + b[0] * scale;\n        out[1] = a[1] + b[1] * scale;\n        out[2] = a[2] + b[2] * scale;\n        out[3] = a[3] + b[3] * scale;\n        return out;\n    }\n    /**\n     * Calculates the euclidian distance between two {@link Vec4}'s\n     * @category Static\n     *\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns distance between a and b\n     */\n    static distance(a, b) {\n        const x = b[0] - a[0];\n        const y = b[1] - a[1];\n        const z = b[2] - a[2];\n        const w = b[3] - a[3];\n        return Math.hypot(x, y, z, w);\n    }\n    /**\n     * Alias for {@link Vec4.distance}\n     * @category Static\n     */\n    static dist(a, b) { return 0; }\n    /**\n     * Calculates the squared euclidian distance between two {@link Vec4}'s\n     * @category Static\n     *\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns squared distance between a and b\n     */\n    static squaredDistance(a, b) {\n        const x = b[0] - a[0];\n        const y = b[1] - a[1];\n        const z = b[2] - a[2];\n        const w = b[3] - a[3];\n        return x * x + y * y + z * z + w * w;\n    }\n    /**\n     * Alias for {@link Vec4.squaredDistance}\n     * @category Static\n     */\n    static sqrDist(a, b) { return 0; }\n    /**\n     * Calculates the magnitude (length) of a {@link Vec4}\n     * @category Static\n     *\n     * @param a - vector to calculate length of\n     * @returns length of `a`\n     */\n    static magnitude(a) {\n        const x = a[0];\n        const y = a[1];\n        const z = a[2];\n        const w = a[3];\n        return Math.sqrt(x * x + y * y + z * z + w * w);\n    }\n    /**\n     * Alias for {@link Vec4.magnitude}\n     * @category Static\n     */\n    static mag(a) { return 0; }\n    /**\n     * Alias for {@link Vec4.magnitude}\n     * @category Static\n     * @deprecated Use {@link Vec4.magnitude} to avoid conflicts with builtin `length` methods/attribs\n     */\n    // @ts-ignore: Length conflicts with Function.length\n    static length(a) { return 0; }\n    /**\n     * Alias for {@link Vec4.magnitude}\n     * @category Static\n     * @deprecated Use {@link Vec4.mag}\n     */\n    static len(a) { return 0; }\n    /**\n     * Calculates the squared length of a {@link Vec4}\n     * @category Static\n     *\n     * @param a - vector to calculate squared length of\n     * @returns squared length of a\n     */\n    static squaredLength(a) {\n        const x = a[0];\n        const y = a[1];\n        const z = a[2];\n        const w = a[3];\n        return x * x + y * y + z * z + w * w;\n    }\n    /**\n     * Alias for {@link Vec4.squaredLength}\n     * @category Static\n     */\n    static sqrLen(a) { return 0; }\n    /**\n     * Negates the components of a {@link Vec4}\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - vector to negate\n     * @returns `out`\n     */\n    static negate(out, a) {\n        out[0] = -a[0];\n        out[1] = -a[1];\n        out[2] = -a[2];\n        out[3] = -a[3];\n        return out;\n    }\n    /**\n     * Returns the inverse of the components of a {@link Vec4}\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - vector to invert\n     * @returns `out`\n     */\n    static inverse(out, a) {\n        out[0] = 1.0 / a[0];\n        out[1] = 1.0 / a[1];\n        out[2] = 1.0 / a[2];\n        out[3] = 1.0 / a[3];\n        return out;\n    }\n    /**\n     * Normalize a {@link Vec4}\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - vector to normalize\n     * @returns `out`\n     */\n    static normalize(out, a) {\n        const x = a[0];\n        const y = a[1];\n        const z = a[2];\n        const w = a[3];\n        let len = x * x + y * y + z * z + w * w;\n        if (len > 0) {\n            len = 1 / Math.sqrt(len);\n        }\n        out[0] = x * len;\n        out[1] = y * len;\n        out[2] = z * len;\n        out[3] = w * len;\n        return out;\n    }\n    /**\n     * Calculates the dot product of two {@link Vec4}'s\n     * @category Static\n     *\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns dot product of a and b\n     */\n    static dot(a, b) {\n        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n    }\n    /**\n     * Returns the cross-product of three vectors in a 4-dimensional space\n     * @category Static\n     *\n     * @param out the receiving vector\n     * @param u - the first vector\n     * @param v - the second vector\n     * @param w - the third vector\n     * @returns result\n     */\n    static cross(out, u, v, w) {\n        const a = v[0] * w[1] - v[1] * w[0];\n        const b = v[0] * w[2] - v[2] * w[0];\n        const c = v[0] * w[3] - v[3] * w[0];\n        const d = v[1] * w[2] - v[2] * w[1];\n        const e = v[1] * w[3] - v[3] * w[1];\n        const f = v[2] * w[3] - v[3] * w[2];\n        const g = u[0];\n        const h = u[1];\n        const i = u[2];\n        const j = u[3];\n        out[0] = h * f - i * e + j * d;\n        out[1] = -(g * f) + i * c - j * b;\n        out[2] = g * e - h * c + j * a;\n        out[3] = -(g * d) + h * b - i * a;\n        return out;\n    }\n    /**\n     * Performs a linear interpolation between two {@link Vec4}'s\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param t - interpolation amount, in the range [0-1], between the two inputs\n     * @returns `out`\n     */\n    static lerp(out, a, b, t) {\n        const ax = a[0];\n        const ay = a[1];\n        const az = a[2];\n        const aw = a[3];\n        out[0] = ax + t * (b[0] - ax);\n        out[1] = ay + t * (b[1] - ay);\n        out[2] = az + t * (b[2] - az);\n        out[3] = aw + t * (b[3] - aw);\n        return out;\n    }\n    /**\n     * Generates a random vector with the given scale\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param [scale] - Length of the resulting vector. If ommitted, a unit vector will be returned\n     * @returns `out`\n     */\n    /*static random(out: Vec4Like, scale): Vec4Like {\n      scale = scale || 1.0;\n  \n      // Marsaglia, George. Choosing a Point from the Surface of a\n      // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n      // http://projecteuclid.org/euclid.aoms/1177692644;\n      var v1, v2, v3, v4;\n      var s1, s2;\n      do {\n        v1 = glMatrix.RANDOM() * 2 - 1;\n        v2 = glMatrix.RANDOM() * 2 - 1;\n        s1 = v1 * v1 + v2 * v2;\n      } while (s1 >= 1);\n      do {\n        v3 = glMatrix.RANDOM() * 2 - 1;\n        v4 = glMatrix.RANDOM() * 2 - 1;\n        s2 = v3 * v3 + v4 * v4;\n      } while (s2 >= 1);\n  \n      var d = Math.sqrt((1 - s1) / s2);\n      out[0] = scale * v1;\n      out[1] = scale * v2;\n      out[2] = scale * v3 * d;\n      out[3] = scale * v4 * d;\n      return out;\n    }*/\n    /**\n     * Transforms the {@link Vec4} with a {@link Mat4}.\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the vector to transform\n     * @param m - matrix to transform with\n     * @returns `out`\n     */\n    static transformMat4(out, a, m) {\n        const x = a[0];\n        const y = a[1];\n        const z = a[2];\n        const w = a[3];\n        out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n        out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n        out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n        out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n        return out;\n    }\n    /**\n     * Transforms the {@link Vec4} with a {@link Quat}\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the vector to transform\n     * @param q - quaternion to transform with\n     * @returns `out`\n     */\n    static transformQuat(out, a, q) {\n        const x = a[0];\n        const y = a[1];\n        const z = a[2];\n        const qx = q[0];\n        const qy = q[1];\n        const qz = q[2];\n        const qw = q[3];\n        // calculate quat * vec\n        const ix = qw * x + qy * z - qz * y;\n        const iy = qw * y + qz * x - qx * z;\n        const iz = qw * z + qx * y - qy * x;\n        const iw = -qx * x - qy * y - qz * z;\n        // calculate result * inverse quat\n        out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n        out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n        out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n        out[3] = a[3];\n        return out;\n    }\n    /**\n     * Set the components of a {@link Vec4} to zero\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @returns `out`\n     */\n    static zero(out) {\n        out[0] = 0.0;\n        out[1] = 0.0;\n        out[2] = 0.0;\n        out[3] = 0.0;\n        return out;\n    }\n    /**\n     * Returns a string representation of a {@link Vec4}\n     * @category Static\n     *\n     * @param a - vector to represent as a string\n     * @returns string representation of the vector\n     */\n    static str(a) {\n        return `Vec4(${a.join(', ')})`;\n    }\n    /**\n     * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n     * @category Static\n     *\n     * @param a - The first vector.\n     * @param b - The second vector.\n     * @returns True if the vectors are equal, false otherwise.\n     */\n    static exactEquals(a, b) {\n        return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n    }\n    /**\n     * Returns whether or not the vectors have approximately the same elements in the same position.\n     * @category Static\n     *\n     * @param a - The first vector.\n     * @param b - The second vector.\n     * @returns True if the vectors are equal, false otherwise.\n     */\n    static equals(a, b) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const b0 = b[0];\n        const b1 = b[1];\n        const b2 = b[2];\n        const b3 = b[3];\n        return (Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n    }\n}\n// Instance method alias assignments\nVec4.prototype.sub = Vec4.prototype.subtract;\nVec4.prototype.mul = Vec4.prototype.multiply;\nVec4.prototype.div = Vec4.prototype.divide;\nVec4.prototype.dist = Vec4.prototype.distance;\nVec4.prototype.sqrDist = Vec4.prototype.squaredDistance;\n// Static method alias assignments\nVec4.sub = Vec4.subtract;\nVec4.mul = Vec4.multiply;\nVec4.div = Vec4.divide;\nVec4.dist = Vec4.distance;\nVec4.sqrDist = Vec4.squaredDistance;\nVec4.sqrLen = Vec4.squaredLength;\nVec4.mag = Vec4.magnitude;\nVec4.length = Vec4.magnitude;\nVec4.len = Vec4.magnitude;\n\n/**\n * Quaternion\n */\nclass Quat extends Float32Array {\n    /**\n     * The number of bytes in a {@link Quat}.\n     */\n    static BYTE_LENGTH = 4 * Float32Array.BYTES_PER_ELEMENT;\n    /**\n     * Create a {@link Quat}.\n     */\n    constructor(...values) {\n        switch (values.length) {\n            case 4:\n                super(values);\n                break;\n            case 2:\n                super(values[0], values[1], 4);\n                break;\n            case 1: {\n                const v = values[0];\n                if (typeof v === 'number') {\n                    super([v, v, v, v]);\n                }\n                else {\n                    super(v, 0, 4);\n                }\n                break;\n            }\n            default:\n                super(4);\n                this[3] = 1;\n                break;\n        }\n    }\n    //============\n    // Attributes\n    //============\n    // Getters and setters to make component access read better.\n    // These are likely to be a little bit slower than direct array access.\n    /**\n     * The x component of the quaternion. Equivalent to `this[0];`\n     * @category Quaternion components\n     */\n    get x() { return this[0]; }\n    set x(value) { this[0] = value; }\n    /**\n     * The y component of the quaternion. Equivalent to `this[1];`\n     * @category Quaternion components\n     */\n    get y() { return this[1]; }\n    set y(value) { this[1] = value; }\n    /**\n     * The z component of the quaternion. Equivalent to `this[2];`\n     * @category Quaternion components\n     */\n    get z() { return this[2]; }\n    set z(value) { this[2] = value; }\n    /**\n     * The w component of the quaternion. Equivalent to `this[3];`\n     * @category Quaternion components\n     */\n    get w() { return this[3]; }\n    set w(value) { this[3] = value; }\n    /**\n     * The magnitude (length) of this.\n     * Equivalent to `Quat.magnitude(this);`\n     *\n     * Magnitude is used because the `length` attribute is already defined by\n     * `Float32Array` to mean the number of elements in the array.\n     */\n    get magnitude() {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n        const w = this[3];\n        return Math.sqrt(x * x + y * y + z * z + w * w);\n    }\n    /**\n     * Alias for {@link Quat.magnitude}\n     */\n    get mag() { return this.magnitude; }\n    /**\n     * A string representation of `this`\n     * Equivalent to `Quat.str(this);`\n     */\n    get str() {\n        return Quat.str(this);\n    }\n    //===================\n    // Instances methods\n    //===================\n    /**\n     * Copy the values from another {@link Quat} into `this`.\n     *\n     * @param a the source quaternion\n     * @returns `this`\n     */\n    copy(a) {\n        super.set(a);\n        return this;\n    }\n    /**\n     * Set `this` to the identity quaternion\n     * Equivalent to Quat.identity(this)\n     *\n     * @returns `this`\n     */\n    identity() {\n        this[0] = 0;\n        this[1] = 0;\n        this[2] = 0;\n        this[3] = 1;\n        return this;\n    }\n    /**\n     * Multiplies `this` by a {@link Quat}.\n     * Equivalent to `Quat.multiply(this, this, b);`\n     *\n     * @param b - The vector to multiply `this` by\n     * @returns `this`\n     */\n    multiply(b) {\n        return Quat.multiply(this, this, b);\n    }\n    /**\n     * Alias for {@link Quat.multiply}\n     */\n    mul(b) { return this; }\n    /**\n     * Rotates `this` by the given angle about the X axis\n     * Equivalent to `Quat.rotateX(this, this, rad);`\n     *\n     * @param rad - angle (in radians) to rotate\n     * @returns `this`\n     */\n    rotateX(rad) {\n        return Quat.rotateX(this, this, rad);\n    }\n    /**\n     * Rotates `this` by the given angle about the Y axis\n     * Equivalent to `Quat.rotateY(this, this, rad);`\n     *\n     * @param rad - angle (in radians) to rotate\n     * @returns `this`\n     */\n    rotateY(rad) {\n        return Quat.rotateY(this, this, rad);\n    }\n    /**\n     * Rotates `this` by the given angle about the Z axis\n     * Equivalent to `Quat.rotateZ(this, this, rad);`\n     *\n     * @param rad - angle (in radians) to rotate\n     * @returns `this`\n     */\n    rotateZ(rad) {\n        return Quat.rotateZ(this, this, rad);\n    }\n    /**\n     * Inverts `this`\n     * Equivalent to `Quat.invert(this, this);`\n     *\n     * @returns `this`\n     */\n    invert() {\n        return Quat.invert(this, this);\n    }\n    /**\n     * Scales `this` by a scalar number\n     * Equivalent to `Quat.scale(this, this, scale);`\n     *\n     * @param out - the receiving vector\n     * @param a - the vector to scale\n     * @param scale - amount to scale the vector by\n     * @returns `this`\n     */\n    scale(scale) {\n        this[0] *= scale;\n        this[1] *= scale;\n        this[2] *= scale;\n        this[3] *= scale;\n        return this;\n    }\n    /**\n     * Calculates the dot product of `this` and another {@link Quat}\n     * Equivalent to `Quat.dot(this, b);`\n     *\n     * @param b - the second operand\n     * @returns dot product of `this` and b\n     */\n    dot(b) {\n        return Quat.dot(this, b);\n    }\n    //===================\n    // Static methods\n    //===================\n    /**\n     * Creates a new identity quat\n     * @category Static\n     *\n     * @returns a new quaternion\n     */\n    static create() {\n        return new Quat();\n    }\n    /**\n     * Set a quat to the identity quaternion\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @returns `out`\n     */\n    static identity(out) {\n        out[0] = 0;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 1;\n        return out;\n    }\n    /**\n     * Sets a quat from the given angle and rotation axis,\n     * then returns it.\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param axis - the axis around which to rotate\n     * @param rad - the angle in radians\n     * @returns `out`\n     **/\n    static setAxisAngle(out, axis, rad) {\n        rad = rad * 0.5;\n        const s = Math.sin(rad);\n        out[0] = s * axis[0];\n        out[1] = s * axis[1];\n        out[2] = s * axis[2];\n        out[3] = Math.cos(rad);\n        return out;\n    }\n    /**\n     * Gets the rotation axis and angle for a given\n     *  quaternion. If a quaternion is created with\n     *  setAxisAngle, this method will return the same\n     *  values as providied in the original parameter list\n     *  OR functionally equivalent values.\n     * Example: The quaternion formed by axis [0, 0, 1] and\n     *  angle -90 is the same as the quaternion formed by\n     *  [0, 0, 1] and 270. This method favors the latter.\n     * @category Static\n     *\n     * @param out_axis - Vector receiving the axis of rotation\n     * @param q - Quaternion to be decomposed\n     * @return Angle, in radians, of the rotation\n     */\n    static getAxisAngle(out_axis, q) {\n        const rad = Math.acos(q[3]) * 2.0;\n        const s = Math.sin(rad / 2.0);\n        if (s > EPSILON) {\n            out_axis[0] = q[0] / s;\n            out_axis[1] = q[1] / s;\n            out_axis[2] = q[2] / s;\n        }\n        else {\n            // If s is zero, return any axis (no rotation - axis does not matter)\n            out_axis[0] = 1;\n            out_axis[1] = 0;\n            out_axis[2] = 0;\n        }\n        return rad;\n    }\n    /**\n     * Gets the angular distance between two unit quaternions\n     * @category Static\n     *\n     * @param  {ReadonlyQuat} a     Origin unit quaternion\n     * @param  {ReadonlyQuat} b     Destination unit quaternion\n     * @return {Number}     Angle, in radians, between the two quaternions\n     */\n    static getAngle(a, b) {\n        const dotproduct = Quat.dot(a, b);\n        return Math.acos(2 * dotproduct * dotproduct - 1);\n    }\n    /**\n     * Multiplies two quat's\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static multiply(out, a, b) {\n        const ax = a[0];\n        const ay = a[1];\n        const az = a[2];\n        const aw = a[3];\n        const bx = b[0];\n        const by = b[1];\n        const bz = b[2];\n        const bw = b[3];\n        out[0] = ax * bw + aw * bx + ay * bz - az * by;\n        out[1] = ay * bw + aw * by + az * bx - ax * bz;\n        out[2] = az * bw + aw * bz + ax * by - ay * bx;\n        out[3] = aw * bw - ax * bx - ay * by - az * bz;\n        return out;\n    }\n    /**\n     * Rotates a quaternion by the given angle about the X axis\n     * @category Static\n     *\n     * @param out - quat receiving operation result\n     * @param a - quat to rotate\n     * @param rad - angle (in radians) to rotate\n     * @returns `out`\n     */\n    static rotateX(out, a, rad) {\n        rad *= 0.5;\n        const ax = a[0];\n        const ay = a[1];\n        const az = a[2];\n        const aw = a[3];\n        const bx = Math.sin(rad);\n        const bw = Math.cos(rad);\n        out[0] = ax * bw + aw * bx;\n        out[1] = ay * bw + az * bx;\n        out[2] = az * bw - ay * bx;\n        out[3] = aw * bw - ax * bx;\n        return out;\n    }\n    /**\n     * Rotates a quaternion by the given angle about the Y axis\n     * @category Static\n     *\n     * @param out - quat receiving operation result\n     * @param a - quat to rotate\n     * @param rad - angle (in radians) to rotate\n     * @returns `out`\n     */\n    static rotateY(out, a, rad) {\n        rad *= 0.5;\n        const ax = a[0];\n        const ay = a[1];\n        const az = a[2];\n        const aw = a[3];\n        const by = Math.sin(rad);\n        const bw = Math.cos(rad);\n        out[0] = ax * bw - az * by;\n        out[1] = ay * bw + aw * by;\n        out[2] = az * bw + ax * by;\n        out[3] = aw * bw - ay * by;\n        return out;\n    }\n    /**\n     * Rotates a quaternion by the given angle about the Z axis\n     * @category Static\n     *\n     * @param out - quat receiving operation result\n     * @param a - quat to rotate\n     * @param rad - angle (in radians) to rotate\n     * @returns `out`\n     */\n    static rotateZ(out, a, rad) {\n        rad *= 0.5;\n        const ax = a[0];\n        const ay = a[1];\n        const az = a[2];\n        const aw = a[3];\n        const bz = Math.sin(rad);\n        const bw = Math.cos(rad);\n        out[0] = ax * bw + ay * bz;\n        out[1] = ay * bw - ax * bz;\n        out[2] = az * bw + aw * bz;\n        out[3] = aw * bw - az * bz;\n        return out;\n    }\n    /**\n     * Calculates the W component of a quat from the X, Y, and Z components.\n     * Assumes that quaternion is 1 unit in length.\n     * Any existing W component will be ignored.\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - quat to calculate W component of\n     * @returns `out`\n     */\n    static calculateW(out, a) {\n        const x = a[0], y = a[1], z = a[2];\n        out[0] = x;\n        out[1] = y;\n        out[2] = z;\n        out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n        return out;\n    }\n    /**\n     * Calculate the exponential of a unit quaternion.\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - quat to calculate the exponential of\n     * @returns `out`\n     */\n    static exp(out, a) {\n        const x = a[0], y = a[1], z = a[2], w = a[3];\n        const r = Math.sqrt(x * x + y * y + z * z);\n        const et = Math.exp(w);\n        const s = r > 0 ? (et * Math.sin(r)) / r : 0;\n        out[0] = x * s;\n        out[1] = y * s;\n        out[2] = z * s;\n        out[3] = et * Math.cos(r);\n        return out;\n    }\n    /**\n     * Calculate the natural logarithm of a unit quaternion.\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - quat to calculate the exponential of\n     * @returns `out`\n     */\n    static ln(out, a) {\n        const x = a[0], y = a[1], z = a[2], w = a[3];\n        const r = Math.sqrt(x * x + y * y + z * z);\n        const t = r > 0 ? Math.atan2(r, w) / r : 0;\n        out[0] = x * t;\n        out[1] = y * t;\n        out[2] = z * t;\n        out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n        return out;\n    }\n    /**\n     * Calculate the scalar power of a unit quaternion.\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - quat to calculate the exponential of\n     * @param b - amount to scale the quaternion by\n     * @returns `out`\n     */\n    static pow(out, a, b) {\n        Quat.ln(out, a);\n        Quat.scale(out, out, b);\n        Quat.exp(out, out);\n        return out;\n    }\n    /**\n     * Performs a spherical linear interpolation between two quat\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param t - interpolation amount, in the range [0-1], between the two inputs\n     * @returns `out`\n     */\n    static slerp(out, a, b, t) {\n        // benchmarks:\n        //    http://jsperf.com/quaternion-slerp-implementations\n        const ax = a[0], ay = a[1], az = a[2], aw = a[3];\n        let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n        let scale0;\n        let scale1;\n        // calc cosine\n        let cosom = ax * bx + ay * by + az * bz + aw * bw;\n        // adjust signs (if necessary)\n        if (cosom < 0.0) {\n            cosom = -cosom;\n            bx = -bx;\n            by = -by;\n            bz = -bz;\n            bw = -bw;\n        }\n        // calculate coefficients\n        if (1.0 - cosom > EPSILON) {\n            // standard case (slerp)\n            const omega = Math.acos(cosom);\n            const sinom = Math.sin(omega);\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\n            scale1 = Math.sin(t * omega) / sinom;\n        }\n        else {\n            // \"from\" and \"to\" quaternions are very close\n            //  ... so we can do a linear interpolation\n            scale0 = 1.0 - t;\n            scale1 = t;\n        }\n        // calculate final values\n        out[0] = scale0 * ax + scale1 * bx;\n        out[1] = scale0 * ay + scale1 * by;\n        out[2] = scale0 * az + scale1 * bz;\n        out[3] = scale0 * aw + scale1 * bw;\n        return out;\n    }\n    /**\n     * Generates a random unit quaternion\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @returns `out`\n     */\n    /*static random(out: QuatLike): QuatLike {\n      // Implementation of http://planning.cs.uiuc.edu/node198.html\n      // TODO: Calling random 3 times is probably not the fastest solution\n      let u1 = glMatrix.RANDOM();\n      let u2 = glMatrix.RANDOM();\n      let u3 = glMatrix.RANDOM();\n  \n      let sqrt1MinusU1 = Math.sqrt(1 - u1);\n      let sqrtU1 = Math.sqrt(u1);\n  \n      out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n      out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n      out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n      out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n      return out;\n    }*/\n    /**\n     * Calculates the inverse of a quat\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - quat to calculate inverse of\n     * @returns `out`\n     */\n    static invert(out, a) {\n        const a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n        const dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n        const invDot = dot ? 1.0 / dot : 0;\n        // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n        out[0] = -a0 * invDot;\n        out[1] = -a1 * invDot;\n        out[2] = -a2 * invDot;\n        out[3] = a3 * invDot;\n        return out;\n    }\n    /**\n     * Calculates the conjugate of a quat\n     * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - quat to calculate conjugate of\n     * @returns `out`\n     */\n    static conjugate(out, a) {\n        out[0] = -a[0];\n        out[1] = -a[1];\n        out[2] = -a[2];\n        out[3] = a[3];\n        return out;\n    }\n    /**\n     * Creates a quaternion from the given 3x3 rotation matrix.\n     *\n     * NOTE: The resultant quaternion is not normalized, so you should be sure\n     * to renormalize the quaternion yourself where necessary.\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param m - rotation matrix\n     * @returns `out`\n     */\n    static fromMat3(out, m) {\n        // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n        // article \"Quaternion Calculus and Fast Animation\".\n        const fTrace = m[0] + m[4] + m[8];\n        let fRoot;\n        if (fTrace > 0.0) {\n            // |w| > 1/2, may as well choose w > 1/2\n            fRoot = Math.sqrt(fTrace + 1.0); // 2w\n            out[3] = 0.5 * fRoot;\n            fRoot = 0.5 / fRoot; // 1/(4w)\n            out[0] = (m[5] - m[7]) * fRoot;\n            out[1] = (m[6] - m[2]) * fRoot;\n            out[2] = (m[1] - m[3]) * fRoot;\n        }\n        else {\n            // |w| <= 1/2\n            let i = 0;\n            if (m[4] > m[0])\n                i = 1;\n            if (m[8] > m[i * 3 + i])\n                i = 2;\n            let j = (i + 1) % 3;\n            let k = (i + 2) % 3;\n            fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n            out[i] = 0.5 * fRoot;\n            fRoot = 0.5 / fRoot;\n            out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n            out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n            out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n        }\n        return out;\n    }\n    /**\n     * Creates a quaternion from the given euler angle x, y, z.\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param x - Angle to rotate around X axis in degrees.\n     * @param y - Angle to rotate around Y axis in degrees.\n     * @param z - Angle to rotate around Z axis in degrees.\n     * @returns `out`\n     */\n    static fromEuler(out, x, y, z) {\n        let halfToRad = (0.5 * Math.PI) / 180.0;\n        x *= halfToRad;\n        y *= halfToRad;\n        z *= halfToRad;\n        let sx = Math.sin(x);\n        let cx = Math.cos(x);\n        let sy = Math.sin(y);\n        let cy = Math.cos(y);\n        let sz = Math.sin(z);\n        let cz = Math.cos(z);\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n        return out;\n    }\n    /**\n     * Returns a string representation of a quatenion\n     * @category Static\n     *\n     * @param a - vector to represent as a string\n     * @returns string representation of the vector\n     */\n    static str(a) {\n        return `Quat(${a.join(', ')})`;\n    }\n    /**\n     * Creates a new quat initialized with values from an existing quaternion\n     * @category Static\n     *\n     * @param a - quaternion to clone\n     * @returns a new quaternion\n     */\n    static clone(a) {\n        return new Quat(a);\n    }\n    /**\n     * Creates a new quat initialized with the given values\n     * @category Static\n     *\n     * @param x - X component\n     * @param y - Y component\n     * @param z - Z component\n     * @param w - W component\n     * @returns a new quaternion\n     */\n    static fromValues(x, y, z, w) {\n        return new Quat(x, y, z, w);\n    }\n    /**\n     * Copy the values from one quat to another\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - the source quaternion\n     * @returns `out`\n     */\n    static copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        return out;\n    }\n    /**\n     * Set the components of a {@link Quat} to the given values\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param x - X component\n     * @param y - Y component\n     * @param z - Z component\n     * @param w - W component\n     * @returns `out`\n     */\n    static set(out, x, y, z, w) { return out; }\n    /**\n     * Adds two {@link Quat}'s\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static add(out, a, b) { return out; }\n    /**\n     * Alias for {@link Quat.multiply}\n     * @category Static\n     */\n    static mul(out, a, b) { return out; }\n    /**\n     * Scales a quat by a scalar number\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the vector to scale\n     * @param b - amount to scale the vector by\n     * @returns `out`\n     */\n    static scale(out, a, scale) {\n        out[0] = a[0] * scale;\n        out[1] = a[1] * scale;\n        out[2] = a[2] * scale;\n        out[3] = a[3] * scale;\n        return out;\n    }\n    /**\n     * Calculates the dot product of two quat's\n     * @category Static\n     *\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns dot product of a and b\n     */\n    static dot(a, b) {\n        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n    }\n    /**\n     * Performs a linear interpolation between two quat's\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param t - interpolation amount, in the range [0-1], between the two inputs\n     * @returns `out`\n     */\n    static lerp(out, a, b, t) { return out; }\n    /**\n     * Calculates the magnitude (length) of a {@link Quat}\n     * @category Static\n     *\n     * @param a - quaternion to calculate length of\n     * @returns length of `a`\n     */\n    static magnitude(a) { return 0; }\n    /**\n     * Alias for {@link Quat.magnitude}\n     * @category Static\n     */\n    static mag(a) { return 0; }\n    /**\n     * Alias for {@link Quat.magnitude}\n     * @category Static\n     * @deprecated Use {@link Quat.magnitude} to avoid conflicts with builtin `length` methods/attribs\n     */\n    // @ts-ignore: Length conflicts with Function.length\n    static length(a) { return 0; }\n    /**\n     * Alias for {@link Quat.magnitude}\n     * @category Static\n     * @deprecated Use {@link Quat.mag}\n     */\n    static len(a) { return 0; }\n    /**\n     * Calculates the squared length of a {@link Quat}\n     * @category Static\n     *\n     * @param a - quaternion to calculate squared length of\n     * @returns squared length of a\n     */\n    static squaredLength(a) { return 0; }\n    /**\n     * Alias for {@link Quat.squaredLength}\n     * @category Static\n     */\n    static sqrLen(a) { return 0; }\n    /**\n     * Normalize a {@link Quat}\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - quaternion to normalize\n     * @returns `out`\n     */\n    static normalize(out, a) { return out; }\n    /**\n     * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n     * @category Static\n     *\n     * @param a - The first quaternion.\n     * @param b - The second quaternion.\n     * @returns True if the vectors are equal, false otherwise.\n     */\n    static exactEquals(a, b) { return false; }\n    /**\n     * Returns whether or not the quaternions have approximately the same elements in the same position.\n     * @category Static\n     *\n     * @param a - The first vector.\n     * @param b - The second vector.\n     * @returns True if the vectors are equal, false otherwise.\n     */\n    static equals(a, b) { return false; }\n    /**\n     * Sets a quaternion to represent the shortest rotation from one\n     * vector to another.\n     *\n     * Both vectors are assumed to be unit length.\n     * @category Static\n     *\n     * @param out - the receiving quaternion.\n     * @param a - the initial vector\n     * @param b - the destination vector\n     * @returns `out`\n     */\n    static rotationTo(out, a, b) {\n        let dot = Vec3.dot(a, b);\n        if (dot < -0.999999) {\n            Vec3.cross(tmpVec3, xUnitVec3, a);\n            if (Vec3.len(tmpVec3) < 0.000001)\n                Vec3.cross(tmpVec3, yUnitVec3, a);\n            Vec3.normalize(tmpVec3, tmpVec3);\n            Quat.setAxisAngle(out, tmpVec3, Math.PI);\n            return out;\n        }\n        else if (dot > 0.999999) {\n            out[0] = 0;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            return out;\n        }\n        else {\n            Vec3.cross(tmpVec3, a, b);\n            out[0] = tmpVec3[0];\n            out[1] = tmpVec3[1];\n            out[2] = tmpVec3[2];\n            out[3] = 1 + dot;\n            return Quat.normalize(out, out);\n        }\n    }\n    /**\n     * Performs a spherical linear interpolation with two control points\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param c - the third operand\n     * @param d - the fourth operand\n     * @param t - interpolation amount, in the range [0-1], between the two inputs\n     * @returns `out`\n     */\n    static sqlerp(out, a, b, c, d, t) {\n        Quat.slerp(temp1, a, d, t);\n        Quat.slerp(temp2, b, c, t);\n        Quat.slerp(out, temp1, temp2, 2 * t * (1 - t));\n        return out;\n    }\n    /**\n     * Sets the specified quaternion with values corresponding to the given\n     * axes. Each axis is a vec3 and is expected to be unit length and\n     * perpendicular to all other specified axes.\n     * @category Static\n     *\n     * @param out - The receiving quaternion\n     * @param view - the vector representing the viewing direction\n     * @param right - the vector representing the local \"right\" direction\n     * @param up - the vector representing the local \"up\" direction\n     * @returns `out`\n     */\n    static setAxes(out, view, right, up) {\n        tempMat3[0] = right[0];\n        tempMat3[3] = right[1];\n        tempMat3[6] = right[2];\n        tempMat3[1] = up[0];\n        tempMat3[4] = up[1];\n        tempMat3[7] = up[2];\n        tempMat3[2] = -view[0];\n        tempMat3[5] = -view[1];\n        tempMat3[8] = -view[2];\n        return Quat.normalize(out, Quat.fromMat3(out, tempMat3));\n    }\n}\n// Temporary variables to prevent repeated allocations in the algorithms above.\nconst temp1 = [0, 0, 0, 0];\nconst temp2 = [0, 0, 0, 0];\nconst tempMat3 = [0, 0, 0, 0, 0, 0, 0, 0, 0];\nconst tmpVec3 = [0, 0, 0];\nconst xUnitVec3 = [1, 0, 0];\nconst yUnitVec3 = [0, 1, 0];\n// Methods which re-use the Vec4 implementation\nQuat.set = Vec4.set;\nQuat.add = Vec4.add;\nQuat.lerp = Vec4.lerp;\nQuat.normalize = Vec4.normalize;\nQuat.squaredLength = Vec4.squaredLength;\nQuat.sqrLen = Vec4.squaredLength;\nQuat.exactEquals = Vec4.exactEquals;\nQuat.equals = Vec4.equals;\nQuat.magnitude = Vec4.magnitude;\n// Instance method alias assignments\nQuat.prototype.mul = Quat.prototype.multiply;\n// Static method alias assignments\nQuat.mul = Quat.multiply;\nQuat.mag = Quat.magnitude;\nQuat.length = Quat.magnitude;\nQuat.len = Quat.magnitude;\n\n/**\n * Dual Quaternion\n */\nclass Quat2 extends Float32Array {\n    /**\n     * The number of bytes in a {@link Quat}.\n     */\n    static BYTE_LENGTH = 8 * Float32Array.BYTES_PER_ELEMENT;\n    /**\n     * Create a {@link Quat2}.\n     */\n    constructor(...values) {\n        switch (values.length) {\n            case 8:\n                super(values);\n                break;\n            case 2:\n                super(values[0], values[1], 8);\n                break;\n            case 1: {\n                const v = values[0];\n                if (typeof v === 'number') {\n                    super([v, v, v, v, v, v, v, v]);\n                }\n                else {\n                    super(v, 0, 8);\n                }\n                break;\n            }\n            default:\n                super(8);\n                this[3] = 1;\n                break;\n        }\n    }\n    //============\n    // Attributes\n    //============\n    /**\n     * A string representation of `this`\n     * Equivalent to `Quat2.str(this);`\n     */\n    get str() {\n        return Quat2.str(this);\n    }\n    //===================\n    // Instances methods\n    //===================\n    /**\n     * Copy the values from another {@link Quat2} into `this`.\n     *\n     * @param a the source dual quaternion\n     * @returns `this`\n     */\n    copy(a) {\n        super.set(a);\n        return this;\n    }\n    //===================\n    // Static methods\n    //===================\n    /**\n     * Creates a new identity {@link Quat2}\n     * @category Static\n     *\n     * @returns a new dual quaternion [real -> rotation, dual -> translation]\n     */\n    static create() {\n        return new Quat2();\n    }\n    /**\n     * Creates a {@link Quat2} quat initialized with values from an existing quaternion\n     * @category Static\n     *\n     * @param a - dual quaternion to clone\n     * @returns a new dual quaternion\n     */\n    static clone(a) {\n        return new Quat2(a);\n    }\n    /**\n     * Creates a new {@link Quat2}  initialized with the given values\n     * @category Static\n     *\n     * @param x1 - 1st X component\n     * @param y1 - 1st Y component\n     * @param z1 - 1st Z component\n     * @param w1 - 1st W component\n     * @param x2 - 2nd X component\n     * @param y2 - 2nd Y component\n     * @param z2 - 2nd Z component\n     * @param w2 - 2nd W component\n     * @returns a new dual quaternion\n     */\n    static fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n        return new Quat2(x1, y1, z1, w1, x2, y2, z2, w2);\n    }\n    /**\n     * Creates a new {@link Quat2} from the given values (quat and translation)\n     * @category Static\n     *\n     * @param x1 - X component (rotation)\n     * @param y1 - Y component (rotation)\n     * @param z1 - Z component (rotation)\n     * @param w1 - W component (rotation)\n     * @param x2 - X component (translation)\n     * @param y2 - Y component (translation)\n     * @param z2 - Z component (translation)\n     * @returns a new dual quaternion\n     */\n    static fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n        const ax = x2 * 0.5;\n        const ay = y2 * 0.5;\n        const az = z2 * 0.5;\n        return new Quat2(x1, y1, z1, w1, ax * w1 + ay * z1 - az * y1, ay * w1 + az * x1 - ax * z1, az * w1 + ax * y1 - ay * x1, -ax * x1 - ay * y1 - az * z1);\n    }\n    /**\n     * Sets a {@link Quat2} from a quaternion and a translation\n     * @category Static\n     *\n     * @param out - dual quaternion receiving operation result\n     * @param q - a normalized quaternion\n     * @param t - translation vector\n     * @returns `out`\n     */\n    static fromRotationTranslation(out, q, t) {\n        const ax = t[0] * 0.5;\n        const ay = t[1] * 0.5;\n        const az = t[2] * 0.5;\n        const bx = q[0];\n        const by = q[1];\n        const bz = q[2];\n        const bw = q[3];\n        out[0] = bx;\n        out[1] = by;\n        out[2] = bz;\n        out[3] = bw;\n        out[4] = ax * bw + ay * bz - az * by;\n        out[5] = ay * bw + az * bx - ax * bz;\n        out[6] = az * bw + ax * by - ay * bx;\n        out[7] = -ax * bx - ay * by - az * bz;\n        return out;\n    }\n    /**\n     * Sets a {@link Quat2} from a translation\n     * @category Static\n     *\n     * @param out - dual quaternion receiving operation result\n     * @param t - translation vector\n     * @returns `out`\n     */\n    static fromTranslation(out, t) {\n        out[0] = 0;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 1;\n        out[4] = t[0] * 0.5;\n        out[5] = t[1] * 0.5;\n        out[6] = t[2] * 0.5;\n        out[7] = 0;\n        return out;\n    }\n    /**\n     * Sets a {@link Quat2} from a quaternion\n     * @category Static\n     *\n     * @param out - dual quaternion receiving operation result\n     * @param q - a normalized quaternion\n     * @returns `out`\n     */\n    static fromRotation(out, q) {\n        out[0] = q[0];\n        out[1] = q[1];\n        out[2] = q[2];\n        out[3] = q[3];\n        out[4] = 0;\n        out[5] = 0;\n        out[6] = 0;\n        out[7] = 0;\n        return out;\n    }\n    /**\n     * Sets a {@link Quat2} from a quaternion\n     * @category Static\n     *\n     * @param out - dual quaternion receiving operation result\n     * @param a - the matrix\n     * @returns `out`\n     */\n    static fromMat4(out, a) {\n        Mat4.getRotation(tempQuat, a);\n        Mat4.getTranslation(tempVec3, a);\n        return Quat2.fromRotationTranslation(out, tempQuat, tempVec3);\n    }\n    /**\n     * Copy the values from one {@link Quat2} to another\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - the source dual quaternion\n     * @returns `out`\n     */\n    static copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        out[4] = a[4];\n        out[5] = a[5];\n        out[6] = a[6];\n        out[7] = a[7];\n        return out;\n    }\n    /**\n     * Set a {@link Quat2} to the identity dual quaternion\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @returns `out`\n     */\n    static identity(out) {\n        out[0] = 0;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 1;\n        out[4] = 0;\n        out[5] = 0;\n        out[6] = 0;\n        out[7] = 0;\n        return out;\n    }\n    /**\n     * Set the components of a {@link Quat2} to the given values\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param x1 - 1st X component\n     * @param y1 - 1st Y component\n     * @param z1 - 1st Z component\n     * @param w1 - 1st W component\n     * @param x2 - 2nd X component\n     * @param y2 - 2nd Y component\n     * @param z2 - 2nd Z component\n     * @param w2 - 2nd W component\n     * @returns `out`\n     */\n    static set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n        out[0] = x1;\n        out[1] = y1;\n        out[2] = z1;\n        out[3] = w1;\n        out[4] = x2;\n        out[5] = y2;\n        out[6] = z2;\n        out[7] = w2;\n        return out;\n    }\n    /**\n     * Gets the real part of a dual quat\n     * @category Static\n     *\n     * @param out - real part\n     * @param a - Dual Quaternion\n     * @return `out`\n     */\n    static getReal(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        return out;\n    }\n    ;\n    /**\n     * Gets the dual part of a dual quat\n     * @category Static\n     *\n     * @param out - dual part\n     * @param a - Dual Quaternion\n     * @return `out`\n     */\n    static getDual(out, a) {\n        out[0] = a[4];\n        out[1] = a[5];\n        out[2] = a[6];\n        out[3] = a[7];\n        return out;\n    }\n    /**\n     * Set the real component of a {@link Quat2} to the given quaternion\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - a quaternion representing the real part\n     * @return `out`\n     */\n    static setReal(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        return out;\n    }\n    ;\n    /**\n     * Set the dual component of a {@link Quat2} to the given quaternion\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - a quaternion representing the dual part\n     * @return `out`\n     */\n    static setDual(out, a) {\n        out[4] = a[0];\n        out[5] = a[1];\n        out[6] = a[2];\n        out[7] = a[3];\n        return out;\n    }\n    /**\n     * Gets the translation of a normalized {@link Quat2}\n     * @category Static\n     *\n     * @param out - the receiving translation vector\n     * @param a - Dual Quaternion to be decomposed\n     * @return `out`\n     */\n    static getTranslation(out, a) {\n        const ax = a[4];\n        const ay = a[5];\n        const az = a[6];\n        const aw = a[7];\n        const bx = -a[0];\n        const by = -a[1];\n        const bz = -a[2];\n        const bw = a[3];\n        out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n        out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n        out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n        return out;\n    }\n    /**\n     * Translates a {@link Quat2} by the given vector\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - the dual quaternion to translate\n     * @param v - vector to translate by\n     * @returns `out`\n     */\n    static translate(out, a, v) {\n        const ax1 = a[0];\n        const ay1 = a[1];\n        const az1 = a[2];\n        const aw1 = a[3];\n        const bx1 = v[0] * 0.5;\n        const by1 = v[1] * 0.5;\n        const bz1 = v[2] * 0.5;\n        const ax2 = a[4];\n        const ay2 = a[5];\n        const az2 = a[6];\n        const aw2 = a[7];\n        out[0] = ax1;\n        out[1] = ay1;\n        out[2] = az1;\n        out[3] = aw1;\n        out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n        out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n        out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n        out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n        return out;\n    }\n    /**\n     * Rotates a {@link Quat2} around the X axis\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - the dual quaternion to rotate\n     * @param rad - angle (in radians) to rotate\n     * @returns `out`\n     */\n    static rotateX(out, a, rad) {\n        let bx = -a[0];\n        let by = -a[1];\n        let bz = -a[2];\n        let bw = a[3];\n        const ax = a[4];\n        const ay = a[5];\n        const az = a[6];\n        const aw = a[7];\n        const ax1 = ax * bw + aw * bx + ay * bz - az * by;\n        const ay1 = ay * bw + aw * by + az * bx - ax * bz;\n        const az1 = az * bw + aw * bz + ax * by - ay * bx;\n        const aw1 = aw * bw - ax * bx - ay * by - az * bz;\n        Quat.rotateX(out, a, rad);\n        bx = out[0];\n        by = out[1];\n        bz = out[2];\n        bw = out[3];\n        out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n        out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n        out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n        out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n        return out;\n    }\n    /**\n     * Rotates a {@link Quat2} around the Y axis\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - the dual quaternion to rotate\n     * @param rad - angle (in radians) to rotate\n     * @returns `out`\n     */\n    static rotateY(out, a, rad) {\n        let bx = -a[0];\n        let by = -a[1];\n        let bz = -a[2];\n        let bw = a[3];\n        const ax = a[4];\n        const ay = a[5];\n        const az = a[6];\n        const aw = a[7];\n        const ax1 = ax * bw + aw * bx + ay * bz - az * by;\n        const ay1 = ay * bw + aw * by + az * bx - ax * bz;\n        const az1 = az * bw + aw * bz + ax * by - ay * bx;\n        const aw1 = aw * bw - ax * bx - ay * by - az * bz;\n        Quat.rotateY(out, a, rad);\n        bx = out[0];\n        by = out[1];\n        bz = out[2];\n        bw = out[3];\n        out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n        out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n        out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n        out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n        return out;\n    }\n    /**\n     * Rotates a {@link Quat2} around the Z axis\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - the dual quaternion to rotate\n     * @param rad - angle (in radians) to rotate\n     * @returns `out`\n     */\n    static rotateZ(out, a, rad) {\n        let bx = -a[0];\n        let by = -a[1];\n        let bz = -a[2];\n        let bw = a[3];\n        const ax = a[4];\n        const ay = a[5];\n        const az = a[6];\n        const aw = a[7];\n        const ax1 = ax * bw + aw * bx + ay * bz - az * by;\n        const ay1 = ay * bw + aw * by + az * bx - ax * bz;\n        const az1 = az * bw + aw * bz + ax * by - ay * bx;\n        const aw1 = aw * bw - ax * bx - ay * by - az * bz;\n        Quat.rotateZ(out, a, rad);\n        bx = out[0];\n        by = out[1];\n        bz = out[2];\n        bw = out[3];\n        out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n        out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n        out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n        out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n        return out;\n    }\n    /**\n     * Rotates a {@link Quat2} by a given quaternion (a * q)\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - the dual quaternion to rotate\n     * @param q - quaternion to rotate by\n     * @returns `out`\n     */\n    static rotateByQuatAppend(out, a, q) {\n        const qx = q[0];\n        const qy = q[1];\n        const qz = q[2];\n        const qw = q[3];\n        let ax = a[0];\n        let ay = a[1];\n        let az = a[2];\n        let aw = a[3];\n        out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n        out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n        out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n        out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n        ax = a[4];\n        ay = a[5];\n        az = a[6];\n        aw = a[7];\n        out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n        out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n        out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n        out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n        return out;\n    }\n    /**\n     * Rotates a {@link Quat2} by a given quaternion (q * a)\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param q - quaternion to rotate by\n     * @param a - the dual quaternion to rotate\n     * @returns `out`\n     */\n    static rotateByQuatPrepend(out, q, a) {\n        const qx = q[0];\n        const qy = q[1];\n        const qz = q[2];\n        const qw = q[3];\n        let bx = a[0];\n        let by = a[1];\n        let bz = a[2];\n        let bw = a[3];\n        out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n        out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n        out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n        out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n        bx = a[4];\n        by = a[5];\n        bz = a[6];\n        bw = a[7];\n        out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n        out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n        out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n        out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n        return out;\n    }\n    /**\n     * Rotates a {@link Quat2} around a given axis. Does the normalization automatically\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - the dual quaternion to rotate\n     * @param axis - the axis to rotate around\n     * @param rad - how far the rotation should be\n     * @returns `out`\n     */\n    static rotateAroundAxis(out, a, axis, rad) {\n        //Special case for rad = 0\n        if (Math.abs(rad) < EPSILON) {\n            return Quat2.copy(out, a);\n        }\n        const axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\n        rad = rad * 0.5;\n        const s = Math.sin(rad);\n        const bx = (s * axis[0]) / axisLength;\n        const by = (s * axis[1]) / axisLength;\n        const bz = (s * axis[2]) / axisLength;\n        const bw = Math.cos(rad);\n        const ax1 = a[0];\n        const ay1 = a[1];\n        const az1 = a[2];\n        const aw1 = a[3];\n        out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n        out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n        out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n        out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n        const ax = a[4];\n        const ay = a[5];\n        const az = a[6];\n        const aw = a[7];\n        out[4] = ax * bw + aw * bx + ay * bz - az * by;\n        out[5] = ay * bw + aw * by + az * bx - ax * bz;\n        out[6] = az * bw + aw * bz + ax * by - ay * bx;\n        out[7] = aw * bw - ax * bx - ay * by - az * bz;\n        return out;\n    }\n    /**\n     * Adds two {@link Quat2}s\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static add(out, a, b) {\n        out[0] = a[0] + b[0];\n        out[1] = a[1] + b[1];\n        out[2] = a[2] + b[2];\n        out[3] = a[3] + b[3];\n        out[4] = a[4] + b[4];\n        out[5] = a[5] + b[5];\n        out[6] = a[6] + b[6];\n        out[7] = a[7] + b[7];\n        return out;\n    }\n    /**\n     * Multiplies two {@link Quat2}s\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns {quat2} out\n     */\n    static multiply(out, a, b) {\n        const ax0 = a[0];\n        const ay0 = a[1];\n        const az0 = a[2];\n        const aw0 = a[3];\n        const bx1 = b[4];\n        const by1 = b[5];\n        const bz1 = b[6];\n        const bw1 = b[7];\n        const ax1 = a[4];\n        const ay1 = a[5];\n        const az1 = a[6];\n        const aw1 = a[7];\n        const bx0 = b[0];\n        const by0 = b[1];\n        const bz0 = b[2];\n        const bw0 = b[3];\n        out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n        out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n        out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n        out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n        out[4] =\n            ax0 * bw1 +\n                aw0 * bx1 +\n                ay0 * bz1 -\n                az0 * by1 +\n                ax1 * bw0 +\n                aw1 * bx0 +\n                ay1 * bz0 -\n                az1 * by0;\n        out[5] =\n            ay0 * bw1 +\n                aw0 * by1 +\n                az0 * bx1 -\n                ax0 * bz1 +\n                ay1 * bw0 +\n                aw1 * by0 +\n                az1 * bx0 -\n                ax1 * bz0;\n        out[6] =\n            az0 * bw1 +\n                aw0 * bz1 +\n                ax0 * by1 -\n                ay0 * bx1 +\n                az1 * bw0 +\n                aw1 * bz0 +\n                ax1 * by0 -\n                ay1 * bx0;\n        out[7] =\n            aw0 * bw1 -\n                ax0 * bx1 -\n                ay0 * by1 -\n                az0 * bz1 +\n                aw1 * bw0 -\n                ax1 * bx0 -\n                ay1 * by0 -\n                az1 * bz0;\n        return out;\n    }\n    /**\n     * Alias for {@link Quat2.multiply}\n     * @category Static\n     */\n    static mul(out, a, b) { return out; }\n    /**\n     * Scales a {@link Quat2} by a scalar value\n     * @category Static\n     *\n     * @param out - the receiving dual quaterion\n     * @param a - the dual quaternion to scale\n     * @param b - scalar value to scale the dual quaterion by\n     * @returns `out`\n     */\n    static scale(out, a, b) {\n        out[0] = a[0] * b;\n        out[1] = a[1] * b;\n        out[2] = a[2] * b;\n        out[3] = a[3] * b;\n        out[4] = a[4] * b;\n        out[5] = a[5] * b;\n        out[6] = a[6] * b;\n        out[7] = a[7] * b;\n        return out;\n    }\n    /**\n     * Calculates the dot product of two {@link Quat2}s (The dot product of the real parts)\n     * @category Static\n     *\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns dot product of a and b\n     */\n    static dot(a, b) { return 0; }\n    /**\n     * Performs a linear interpolation between two {@link Quat2}s\n     * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when `t = 0.5`)\n     * @category Static\n     *\n     * @param out - the receiving dual quat\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param t - interpolation amount, in the range [0-1], between the two inputs\n     * @returns `out`\n     */\n    static lerp(out, a, b, t) {\n        const mt = 1 - t;\n        if (Quat2.dot(a, b) < 0)\n            t = -t;\n        out[0] = a[0] * mt + b[0] * t;\n        out[1] = a[1] * mt + b[1] * t;\n        out[2] = a[2] * mt + b[2] * t;\n        out[3] = a[3] * mt + b[3] * t;\n        out[4] = a[4] * mt + b[4] * t;\n        out[5] = a[5] * mt + b[5] * t;\n        out[6] = a[6] * mt + b[6] * t;\n        out[7] = a[7] * mt + b[7] * t;\n        return out;\n    }\n    /**\n     * Calculates the inverse of a {@link Quat2}. If they are normalized, conjugate is cheaper\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - dual quat to calculate inverse of\n     * @returns `out`\n     */\n    static invert(out, a) {\n        const sqlen = Quat2.squaredLength(a);\n        out[0] = -a[0] / sqlen;\n        out[1] = -a[1] / sqlen;\n        out[2] = -a[2] / sqlen;\n        out[3] = a[3] / sqlen;\n        out[4] = -a[4] / sqlen;\n        out[5] = -a[5] / sqlen;\n        out[6] = -a[6] / sqlen;\n        out[7] = a[7] / sqlen;\n        return out;\n    }\n    /**\n     * Calculates the conjugate of a {@link Quat2}\n     * If the dual quaternion is normalized, this function is faster than {@link Quat2.invert} and produces the same result.\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - dual quaternion to calculate conjugate of\n     * @returns `out`\n     */\n    static conjugate(out, a) {\n        out[0] = -a[0];\n        out[1] = -a[1];\n        out[2] = -a[2];\n        out[3] = a[3];\n        out[4] = -a[4];\n        out[5] = -a[5];\n        out[6] = -a[6];\n        out[7] = a[7];\n        return out;\n    }\n    /**\n     * Calculates the magnitude (length) of a {@link Quat2}\n     * @category Static\n     *\n     * @param a - dual quaternion to calculate length of\n     * @returns length of `a`\n     */\n    static magnitude(a) { return 0; }\n    /**\n     * Alias for {@link Quat2.magnitude}\n     * @category Static\n     */\n    static mag(a) { return 0; }\n    /**\n     * Alias for {@link Quat2.magnitude}\n     * @category Static\n     * @deprecated Use {@link Quat2.magnitude} to avoid conflicts with builtin `length` methods/attribs\n     */\n    // @ts-ignore: Length conflicts with Function.length\n    static length(a) { return 0; }\n    /**\n     * Alias for {@link Quat2.magnitude}\n     * @category Static\n     * @deprecated Use {@link Quat2.mag}\n     */\n    static len(a) { return 0; }\n    /**\n     * Calculates the squared length of a {@link Quat2}\n     * @category Static\n     *\n     * @param a - dual quaternion to calculate squared length of\n     * @returns squared length of a\n     */\n    static squaredLength(a) { return 0; }\n    /**\n     * Alias for {@link Quat2.squaredLength}\n     * @category Static\n     */\n    static sqrLen(a) { return 0; }\n    /**\n     * Normalize a {@link Quat2}\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - dual quaternion to normalize\n     * @returns `out`\n     */\n    static normalize(out, a) {\n        let magnitude = Quat2.squaredLength(a);\n        if (magnitude > 0) {\n            magnitude = Math.sqrt(magnitude);\n            const a0 = a[0] / magnitude;\n            const a1 = a[1] / magnitude;\n            const a2 = a[2] / magnitude;\n            const a3 = a[3] / magnitude;\n            const b0 = a[4];\n            const b1 = a[5];\n            const b2 = a[6];\n            const b3 = a[7];\n            const a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n            out[0] = a0;\n            out[1] = a1;\n            out[2] = a2;\n            out[3] = a3;\n            out[4] = (b0 - a0 * a_dot_b) / magnitude;\n            out[5] = (b1 - a1 * a_dot_b) / magnitude;\n            out[6] = (b2 - a2 * a_dot_b) / magnitude;\n            out[7] = (b3 - a3 * a_dot_b) / magnitude;\n        }\n        return out;\n    }\n    /**\n     * Returns a string representation of a {@link Quat2}\n     * @category Static\n     *\n     * @param a - dual quaternion to represent as a string\n     * @returns string representation of the vector\n     */\n    static str(a) {\n        return `Quat2(${a.join(', ')})`;\n    }\n    /**\n     * Returns whether or not the {@link Quat2}s have exactly the same elements in the same position (when compared with ===)\n     * @category Static\n     *\n     * @param a - The first dual quaternion.\n     * @param b - The second dual quaternion.\n     * @returns True if the dual quaternions are equal, false otherwise.\n     */\n    static exactEquals(a, b) {\n        return (a[0] === b[0] &&\n            a[1] === b[1] &&\n            a[2] === b[2] &&\n            a[3] === b[3] &&\n            a[4] === b[4] &&\n            a[5] === b[5] &&\n            a[6] === b[6] &&\n            a[7] === b[7]);\n    }\n    /**\n     * Returns whether or not the {@link Quat2}s have approximately the same elements in the same position.\n     * @category Static\n     *\n     * @param a - The first dual quaternion.\n     * @param b - The second dual quaternion.\n     * @returns True if the dual quaternions are equal, false otherwise.\n     */\n    static equals(a, b) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const a4 = a[4];\n        const a5 = a[5];\n        const a6 = a[6];\n        const a7 = a[7];\n        const b0 = b[0];\n        const b1 = b[1];\n        const b2 = b[2];\n        const b3 = b[3];\n        const b4 = b[4];\n        const b5 = b[5];\n        const b6 = b[6];\n        const b7 = b[7];\n        return (Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n            Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n            Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n            Math.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n            Math.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)));\n    }\n}\n// Temporary variables to prevent repeated allocations in the algorithms above.\nconst tempQuat = [0, 0, 0, 0];\nconst tempVec3 = [0, 0, 0];\n// Methods which re-use the Quat implementation\n// @ts-ignore\nQuat2.dot = Quat.dot;\n// @ts-ignore\nQuat2.squaredLength = Quat.squaredLength;\n// @ts-ignore\nQuat2.sqrLen = Quat.squaredLength;\n// @ts-ignore\nQuat2.mag = Quat.magnitude;\n// @ts-ignore\nQuat2.length = Quat.magnitude;\n// @ts-ignore\nQuat2.len = Quat.magnitude;\n// Static method alias assignments\nQuat2.mul = Quat2.multiply;\n\n/**\n * 2 Dimensional Vector\n */\nclass Vec2 extends Float32Array {\n    /**\n     * The number of bytes in a {@link Vec2}.\n     */\n    static BYTE_LENGTH = 2 * Float32Array.BYTES_PER_ELEMENT;\n    /**\n     * Create a {@link Vec2}.\n     */\n    constructor(...values) {\n        switch (values.length) {\n            case 2: {\n                const v = values[0];\n                if (typeof v === 'number') {\n                    super([v, values[1]]);\n                }\n                else {\n                    super(v, values[1], 2);\n                }\n                break;\n            }\n            case 1: {\n                const v = values[0];\n                if (typeof v === 'number') {\n                    super([v, v]);\n                }\n                else {\n                    super(v, 0, 2);\n                }\n                break;\n            }\n            default:\n                super(2);\n                break;\n        }\n    }\n    //============\n    // Attributes\n    //============\n    // Getters and setters to make component access read better.\n    // These are likely to be a little bit slower than direct array access.\n    /**\n     * The x component of the vector. Equivalent to `this[0];`\n     * @category Vector components\n     */\n    get x() { return this[0]; }\n    set x(value) { this[0] = value; }\n    /**\n     * The y component of the vector. Equivalent to `this[1];`\n     * @category Vector components\n     */\n    get y() { return this[1]; }\n    set y(value) { this[1] = value; }\n    // Alternate set of getters and setters in case this is being used to define\n    // a color.\n    /**\n     * The r component of the vector. Equivalent to `this[0];`\n     * @category Color components\n     */\n    get r() { return this[0]; }\n    set r(value) { this[0] = value; }\n    /**\n     * The g component of the vector. Equivalent to `this[1];`\n     * @category Color components\n     */\n    get g() { return this[1]; }\n    set g(value) { this[1] = value; }\n    /**\n     * The magnitude (length) of this.\n     * Equivalent to `Vec2.magnitude(this);`\n     *\n     * Magnitude is used because the `length` attribute is already defined by\n     * `Float32Array` to mean the number of elements in the array.\n     */\n    get magnitude() {\n        return Math.hypot(this[0], this[1]);\n    }\n    /**\n     * Alias for {@link Vec2.magnitude}\n     */\n    get mag() { return this.magnitude; }\n    /**\n     * The squared magnitude (length) of `this`.\n     * Equivalent to `Vec2.squaredMagnitude(this);`\n     */\n    get squaredMagnitude() {\n        const x = this[0];\n        const y = this[1];\n        return x * x + y * y;\n    }\n    /**\n     * Alias for {@link Vec2.squaredMagnitude}\n     */\n    get sqrMag() { return this.squaredMagnitude; }\n    /**\n     * A string representation of `this`\n     * Equivalent to `Vec2.str(this);`\n     */\n    get str() {\n        return Vec2.str(this);\n    }\n    //===================\n    // Instances methods\n    //===================\n    /**\n     * Copy the values from another {@link Vec2} into `this`.\n     *\n     * @param a the source vector\n     * @returns `this`\n     */\n    copy(a) {\n        this.set(a);\n        return this;\n    }\n    // Instead of zero(), use a.fill(0) for instances;\n    /**\n     * Adds a {@link Vec2} to `this`.\n     * Equivalent to `Vec2.add(this, this, b);`\n     *\n     * @param b - The vector to add to `this`\n     * @returns `this`\n     */\n    add(b) {\n        this[0] += b[0];\n        this[1] += b[1];\n        return this;\n    }\n    /**\n     * Subtracts a {@link Vec2} from `this`.\n     * Equivalent to `Vec2.subtract(this, this, b);`\n     *\n     * @param b - The vector to subtract from `this`\n     * @returns `this`\n     */\n    subtract(b) {\n        this[0] -= b[0];\n        this[1] -= b[1];\n        return this;\n    }\n    /**\n     * Alias for {@link Vec2.subtract}\n     */\n    sub(b) { return this; }\n    /**\n     * Multiplies `this` by a {@link Vec2}.\n     * Equivalent to `Vec2.multiply(this, this, b);`\n     *\n     * @param b - The vector to multiply `this` by\n     * @returns `this`\n     */\n    multiply(b) {\n        this[0] *= b[0];\n        this[1] *= b[1];\n        return this;\n    }\n    /**\n     * Alias for {@link Vec2.multiply}\n     */\n    mul(b) { return this; }\n    /**\n     * Divides `this` by a {@link Vec2}.\n     * Equivalent to `Vec2.divide(this, this, b);`\n     *\n     * @param b - The vector to divide `this` by\n     * @returns {Vec2} `this`\n     */\n    divide(b) {\n        this[0] /= b[0];\n        this[1] /= b[1];\n        return this;\n    }\n    /**\n     * Alias for {@link Vec2.divide}\n     */\n    div(b) { return this; }\n    /**\n     * Scales `this` by a scalar number.\n     * Equivalent to `Vec2.scale(this, this, b);`\n     *\n     * @param b - Amount to scale `this` by\n     * @returns `this`\n     */\n    scale(b) {\n        this[0] *= b;\n        this[1] *= b;\n        return this;\n    }\n    /**\n     * Calculates `this` scaled by a scalar value then adds the result to `this`.\n     * Equivalent to `Vec2.scaleAndAdd(this, this, b, scale);`\n     *\n     * @param b - The vector to add to `this`\n     * @param scale - The amount to scale `b` by before adding\n     * @returns `this`\n     */\n    scaleAndAdd(b, scale) {\n        this[0] += b[0] * scale;\n        this[1] += b[1] * scale;\n        return this;\n    }\n    /**\n     * Calculates the euclidian distance between another {@link Vec2} and `this`.\n     * Equivalent to `Vec2.distance(this, b);`\n     *\n     * @param b - The vector to calculate the distance to\n     * @returns Distance between `this` and `b`\n     */\n    distance(b) {\n        return Vec2.distance(this, b);\n    }\n    /**\n     * Alias for {@link Vec2.distance}\n     */\n    dist(b) { return 0; }\n    /**\n     * Calculates the squared euclidian distance between another {@link Vec2} and `this`.\n     * Equivalent to `Vec2.squaredDistance(this, b);`\n     *\n     * @param b The vector to calculate the squared distance to\n     * @returns Squared distance between `this` and `b`\n     */\n    squaredDistance(b) {\n        return Vec2.squaredDistance(this, b);\n    }\n    /**\n     * Alias for {@link Vec2.squaredDistance}\n     */\n    sqrDist(b) { return 0; }\n    /**\n     * Negates the components of `this`.\n     * Equivalent to `Vec2.negate(this, this);`\n     *\n     * @returns `this`\n     */\n    negate() {\n        this[0] *= -1;\n        this[1] *= -1;\n        return this;\n    }\n    /**\n     * Inverts the components of `this`.\n     * Equivalent to `Vec2.inverse(this, this);`\n     *\n     * @returns `this`\n     */\n    invert() {\n        this[0] = 1.0 / this[0];\n        this[1] = 1.0 / this[1];\n        return this;\n    }\n    /**\n     * Calculates the dot product of this and another {@link Vec2}.\n     * Equivalent to `Vec2.dot(this, b);`\n     *\n     * @param b - The second operand\n     * @returns Dot product of `this` and `b`\n     */\n    dot(b) {\n        return this[0] * b[0] + this[1] * b[1];\n    }\n    /**\n     * Normalize `this`.\n     * Equivalent to `Vec2.normalize(this, this);`\n     *\n     * @returns `this`\n     */\n    normalize() {\n        return Vec2.normalize(this, this);\n    }\n    //================\n    // Static methods\n    //================\n    /**\n     * Creates a new, empty {@link Vec2}\n     * @category Static\n     *\n     * @returns A new 2D vector\n     */\n    static create() {\n        return new Vec2();\n    }\n    /**\n     * Creates a new {@link Vec2} initialized with values from an existing vector\n     * @category Static\n     *\n     * @param a - Vector to clone\n     * @returns A new 2D vector\n     */\n    static clone(a) {\n        return new Vec2(a);\n    }\n    /**\n     * Creates a new {@link Vec2} initialized with the given values\n     * @category Static\n     *\n     * @param x - X component\n     * @param y - Y component\n     * @returns A new 2D vector\n     */\n    static fromValues(x, y) {\n        return new Vec2(x, y);\n    }\n    /**\n     * Copy the values from one {@link Vec2} to another\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - The source vector\n     * @returns `out`\n     */\n    static copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        return out;\n    }\n    /**\n     * Set the components of a {@link Vec2} to the given values\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param x - X component\n     * @param y - Y component\n     * @returns `out`\n     */\n    static set(out, x, y) {\n        out[0] = x;\n        out[1] = y;\n        return out;\n    }\n    /**\n     * Adds two {@link Vec2}s\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static add(out, a, b) {\n        out[0] = a[0] + b[0];\n        out[1] = a[1] + b[1];\n        return out;\n    }\n    /**\n     * Subtracts vector b from vector a\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static subtract(out, a, b) {\n        out[0] = a[0] - b[0];\n        out[1] = a[1] - b[1];\n        return out;\n    }\n    /**\n     * Alias for {@link Vec2.subtract}\n     * @category Static\n     */\n    static sub(out, a, b) { return [0, 0]; }\n    /**\n     * Multiplies two {@link Vec2}s\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static multiply(out, a, b) {\n        out[0] = a[0] * b[0];\n        out[1] = a[1] * b[1];\n        return out;\n    }\n    /**\n     * Alias for {@link Vec2.multiply}\n     * @category Static\n     */\n    static mul(out, a, b) { return [0, 0]; }\n    /**\n     * Divides two {@link Vec2}s\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static divide(out, a, b) {\n        out[0] = a[0] / b[0];\n        out[1] = a[1] / b[1];\n        return out;\n    }\n    /**\n     * Alias for {@link Vec2.divide}\n     * @category Static\n     */\n    static div(out, a, b) { return [0, 0]; }\n    /**\n     * Math.ceil the components of a {@link Vec2}\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - Vector to ceil\n     * @returns `out`\n     */\n    static ceil(out, a) {\n        out[0] = Math.ceil(a[0]);\n        out[1] = Math.ceil(a[1]);\n        return out;\n    }\n    /**\n     * Math.floor the components of a {@link Vec2}\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - Vector to floor\n     * @returns `out`\n     */\n    static floor(out, a) {\n        out[0] = Math.floor(a[0]);\n        out[1] = Math.floor(a[1]);\n        return out;\n    }\n    /**\n     * Returns the minimum of two {@link Vec2}s\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static min(out, a, b) {\n        out[0] = Math.min(a[0], b[0]);\n        out[1] = Math.min(a[1], b[1]);\n        return out;\n    }\n    /**\n     * Returns the maximum of two {@link Vec2}s\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static max(out, a, b) {\n        out[0] = Math.max(a[0], b[0]);\n        out[1] = Math.max(a[1], b[1]);\n        return out;\n    }\n    /**\n     * Math.round the components of a {@link Vec2}\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - Vector to round\n     * @returns `out`\n     */\n    static round(out, a) {\n        out[0] = Math.round(a[0]);\n        out[1] = Math.round(a[1]);\n        return out;\n    }\n    /**\n     * Scales a {@link Vec2} by a scalar number\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - The vector to scale\n     * @param b - Amount to scale the vector by\n     * @returns `out`\n     */\n    static scale(out, a, b) {\n        out[0] = a[0] * b;\n        out[1] = a[1] * b;\n        return out;\n    }\n    /**\n     * Adds two Vec2's after scaling the second operand by a scalar value\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - The first operand\n     * @param b - The second operand\n     * @param scale - The amount to scale b by before adding\n     * @returns `out`\n     */\n    static scaleAndAdd(out, a, b, scale) {\n        out[0] = a[0] + b[0] * scale;\n        out[1] = a[1] + b[1] * scale;\n        return out;\n    }\n    /**\n     * Calculates the euclidian distance between two {@link Vec2}s\n     * @category Static\n     *\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns distance between `a` and `b`\n     */\n    static distance(a, b) {\n        return Math.hypot(b[0] - a[0], b[1] - a[1]);\n    }\n    /**\n     * Alias for {@link Vec2.distance}\n     * @category Static\n     */\n    static dist(a, b) { return 0; }\n    /**\n     * Calculates the squared euclidian distance between two {@link Vec2}s\n     * @category Static\n     *\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns Squared distance between `a` and `b`\n     */\n    static squaredDistance(a, b) {\n        const x = b[0] - a[0];\n        const y = b[1] - a[1];\n        return x * x + y * y;\n    }\n    /**\n     * Alias for {@link Vec2.distance}\n     * @category Static\n     */\n    static sqrDist(a, b) { return 0; }\n    /**\n     * Calculates the magnitude (length) of a {@link Vec2}\n     * @category Static\n     *\n     * @param a - Vector to calculate magnitude of\n     * @returns Magnitude of a\n     */\n    static magnitude(a) {\n        let x = a[0];\n        let y = a[1];\n        return Math.sqrt(x * x + y * y);\n    }\n    /**\n     * Alias for {@link Vec2.magnitude}\n     * @category Static\n     */\n    static mag(a) { return 0; }\n    /**\n     * Alias for {@link Vec2.magnitude}\n     * @category Static\n     * @deprecated Use {@link Vec2.magnitude} to avoid conflicts with builtin `length` methods/attribs\n     *\n     * @param a - vector to calculate length of\n     * @returns length of a\n     */\n    // @ts-ignore: Length conflicts with Function.length\n    static length(a) { return 0; }\n    /**\n     * Alias for {@link Vec2.magnitude}\n     * @category Static\n     * @deprecated Use {@link Vec2.mag}\n     */\n    static len(a) { return 0; }\n    /**\n     * Calculates the squared length of a {@link Vec2}\n     * @category Static\n     *\n     * @param a - Vector to calculate squared length of\n     * @returns Squared length of a\n     */\n    static squaredLength(a) {\n        const x = a[0];\n        const y = a[1];\n        return x * x + y * y;\n    }\n    /**\n     * Alias for {@link Vec2.squaredLength}\n     */\n    static sqrLen(a, b) { return 0; }\n    /**\n     * Negates the components of a {@link Vec2}\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - Vector to negate\n     * @returns `out`\n     */\n    static negate(out, a) {\n        out[0] = -a[0];\n        out[1] = -a[1];\n        return out;\n    }\n    /**\n     * Returns the inverse of the components of a {@link Vec2}\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - Vector to invert\n     * @returns `out`\n     */\n    static inverse(out, a) {\n        out[0] = 1.0 / a[0];\n        out[1] = 1.0 / a[1];\n        return out;\n    }\n    /**\n     * Normalize a {@link Vec2}\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - Vector to normalize\n     * @returns `out`\n     */\n    static normalize(out, a) {\n        const x = a[0];\n        const y = a[1];\n        let len = x * x + y * y;\n        if (len > 0) {\n            //TODO: evaluate use of glm_invsqrt here?\n            len = 1 / Math.sqrt(len);\n        }\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n        return out;\n    }\n    /**\n     * Calculates the dot product of two {@link Vec2}s\n     * @category Static\n     *\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns Dot product of `a` and `b`\n     */\n    static dot(a, b) {\n        return a[0] * b[0] + a[1] * b[1];\n    }\n    /**\n     * Computes the cross product of two {@link Vec2}s\n     * Note that the cross product must by definition produce a 3D vector.\n     * For this reason there is also not instance equivalent for this function.\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static cross(out, a, b) {\n        const z = a[0] * b[1] - a[1] * b[0];\n        out[0] = out[1] = 0;\n        out[2] = z;\n        return out;\n    }\n    /**\n     * Performs a linear interpolation between two {@link Vec2}s\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - The first operand\n     * @param b - The second operand\n     * @param t - Interpolation amount, in the range [0-1], between the two inputs\n     * @returns `out`\n     */\n    static lerp(out, a, b, t) {\n        const ax = a[0];\n        const ay = a[1];\n        out[0] = ax + t * (b[0] - ax);\n        out[1] = ay + t * (b[1] - ay);\n        return out;\n    }\n    /**\n     * Transforms the {@link Vec2} with a {@link Mat2}\n     *\n     * @param out - The receiving vector\n     * @param a - The vector to transform\n     * @param m - Matrix to transform with\n     * @returns `out`\n     */\n    static transformMat2(out, a, m) {\n        const x = a[0];\n        const y = a[1];\n        out[0] = m[0] * x + m[2] * y;\n        out[1] = m[1] * x + m[3] * y;\n        return out;\n    }\n    /**\n     * Transforms the {@link Vec2} with a {@link Mat2d}\n     *\n     * @param out - The receiving vector\n     * @param a - The vector to transform\n     * @param m - Matrix to transform with\n     * @returns `out`\n     */\n    static transformMat2d(out, a, m) {\n        const x = a[0];\n        const y = a[1];\n        out[0] = m[0] * x + m[2] * y + m[4];\n        out[1] = m[1] * x + m[3] * y + m[5];\n        return out;\n    }\n    /**\n     * Transforms the {@link Vec2} with a {@link Mat3}\n     * 3rd vector component is implicitly '1'\n     *\n     * @param out - The receiving vector\n     * @param a - The vector to transform\n     * @param m - Matrix to transform with\n     * @returns `out`\n     */\n    static transformMat3(out, a, m) {\n        const x = a[0];\n        const y = a[1];\n        out[0] = m[0] * x + m[3] * y + m[6];\n        out[1] = m[1] * x + m[4] * y + m[7];\n        return out;\n    }\n    /**\n     * Transforms the {@link Vec2} with a {@link Mat4}\n     * 3rd vector component is implicitly '0'\n     * 4th vector component is implicitly '1'\n     *\n     * @param out - The receiving vector\n     * @param a - The vector to transform\n     * @param m - Matrix to transform with\n     * @returns `out`\n     */\n    static transformMat4(out, a, m) {\n        const x = a[0];\n        const y = a[1];\n        out[0] = m[0] * x + m[4] * y + m[12];\n        out[1] = m[1] * x + m[5] * y + m[13];\n        return out;\n    }\n    /**\n     * Rotate a 2D vector\n     * @category Static\n     *\n     * @param out - The receiving {@link Vec2}\n     * @param a - The {@link Vec2} point to rotate\n     * @param b - The origin of the rotation\n     * @param rad - The angle of rotation in radians\n     * @returns `out`\n     */\n    static rotate(out, a, b, rad) {\n        //Translate point to the origin\n        const p0 = a[0] - b[0];\n        const p1 = a[1] - b[1];\n        const sinC = Math.sin(rad);\n        const cosC = Math.cos(rad);\n        //perform rotation and translate to correct position\n        out[0] = p0 * cosC - p1 * sinC + b[0];\n        out[1] = p0 * sinC + p1 * cosC + b[1];\n        return out;\n    }\n    /**\n     * Get the angle between two 2D vectors\n     * @category Static\n     *\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns The angle in radians\n     */\n    static angle(a, b) {\n        const x1 = a[0];\n        const y1 = a[1];\n        const x2 = b[0];\n        const y2 = b[1];\n        // mag is the product of the magnitudes of a and b\n        const mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2);\n        // mag &&.. short circuits if mag == 0\n        const cosine = mag && (x1 * x2 + y1 * y2) / mag;\n        // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n        return Math.acos(Math.min(Math.max(cosine, -1), 1));\n    }\n    /**\n     * Set the components of a {@link Vec2} to zero\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @returns `out`\n     */\n    static zero(out) {\n        out[0] = 0.0;\n        out[1] = 0.0;\n        return out;\n    }\n    /**\n     * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n     * @category Static\n     *\n     * @param a - The first vector.\n     * @param b - The second vector.\n     * @returns `true` if the vectors components are ===, `false` otherwise.\n     */\n    static exactEquals(a, b) {\n        return a[0] === b[0] && a[1] === b[1];\n    }\n    /**\n     * Returns whether or not the vectors have approximately the same elements in the same position.\n     * @category Static\n     *\n     * @param a - The first vector.\n     * @param b - The second vector.\n     * @returns `true` if the vectors are approximately equal, `false` otherwise.\n     */\n    static equals(a, b) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const b0 = b[0];\n        const b1 = b[1];\n        return (Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)));\n    }\n    /**\n     * Returns a string representation of a vector\n     * @category Static\n     *\n     * @param a - Vector to represent as a string\n     * @returns String representation of the vector\n     */\n    static str(a) {\n        return `Vec2(${a.join(', ')})`;\n    }\n}\n// Instance method alias assignments\nVec2.prototype.sub = Vec2.prototype.subtract;\nVec2.prototype.mul = Vec2.prototype.multiply;\nVec2.prototype.div = Vec2.prototype.divide;\nVec2.prototype.dist = Vec2.prototype.distance;\nVec2.prototype.sqrDist = Vec2.prototype.squaredDistance;\n// Static method alias assignments\nVec2.sub = Vec2.subtract;\nVec2.mul = Vec2.multiply;\nVec2.div = Vec2.divide;\nVec2.dist = Vec2.distance;\nVec2.sqrDist = Vec2.squaredDistance;\nVec2.sqrLen = Vec2.squaredLength;\nVec2.mag = Vec2.magnitude;\nVec2.length = Vec2.magnitude;\nVec2.len = Vec2.magnitude;\n\n// The contents of the following section are autogenerated by scripts/gen-swizzle.js and should\n// not be modified by hand.\n// [Swizzle Autogen]\nconst VEC2_SWIZZLES = ['xx', 'xy', 'yx', 'yy', 'xxx', 'xxy', 'xyx', 'xyy', 'yxx', 'yxy', 'yyx', 'yyy', 'xxxx', 'xxxy', 'xxyx', 'xxyy', 'xyxx', 'xyxy', 'xyyx', 'xyyy', 'yxxx', 'yxxy', 'yxyx', 'yxyy', 'yyxx', 'yyxy', 'yyyx', 'yyyy', 'rr', 'rg', 'gr', 'gg', 'rrr', 'rrg', 'rgr', 'rgg', 'grr', 'grg', 'ggr', 'ggg', 'rrrr', 'rrrg', 'rrgr', 'rrgg', 'rgrr', 'rgrg', 'rggr', 'rggg', 'grrr', 'grrg', 'grgr', 'grgg', 'ggrr', 'ggrg', 'gggr', 'gggg'];\nconst VEC3_SWIZZLES = ['xz', 'yz', 'zx', 'zy', 'zz', 'xxz', 'xyz', 'xzx', 'xzy', 'xzz', 'yxz', 'yyz', 'yzx', 'yzy', 'yzz', 'zxx', 'zxy', 'zxz', 'zyx', 'zyy', 'zyz', 'zzx', 'zzy', 'zzz', 'xxxz', 'xxyz', 'xxzx', 'xxzy', 'xxzz', 'xyxz', 'xyyz', 'xyzx', 'xyzy', 'xyzz', 'xzxx', 'xzxy', 'xzxz', 'xzyx', 'xzyy', 'xzyz', 'xzzx', 'xzzy', 'xzzz', 'yxxz', 'yxyz', 'yxzx', 'yxzy', 'yxzz', 'yyxz', 'yyyz', 'yyzx', 'yyzy', 'yyzz', 'yzxx', 'yzxy', 'yzxz', 'yzyx', 'yzyy', 'yzyz', 'yzzx', 'yzzy', 'yzzz', 'zxxx', 'zxxy', 'zxxz', 'zxyx', 'zxyy', 'zxyz', 'zxzx', 'zxzy', 'zxzz', 'zyxx', 'zyxy', 'zyxz', 'zyyx', 'zyyy', 'zyyz', 'zyzx', 'zyzy', 'zyzz', 'zzxx', 'zzxy', 'zzxz', 'zzyx', 'zzyy', 'zzyz', 'zzzx', 'zzzy', 'zzzz', 'rb', 'gb', 'br', 'bg', 'bb', 'rrb', 'rgb', 'rbr', 'rbg', 'rbb', 'grb', 'ggb', 'gbr', 'gbg', 'gbb', 'brr', 'brg', 'brb', 'bgr', 'bgg', 'bgb', 'bbr', 'bbg', 'bbb', 'rrrb', 'rrgb', 'rrbr', 'rrbg', 'rrbb', 'rgrb', 'rggb', 'rgbr', 'rgbg', 'rgbb', 'rbrr', 'rbrg', 'rbrb', 'rbgr', 'rbgg', 'rbgb', 'rbbr', 'rbbg', 'rbbb', 'grrb', 'grgb', 'grbr', 'grbg', 'grbb', 'ggrb', 'gggb', 'ggbr', 'ggbg', 'ggbb', 'gbrr', 'gbrg', 'gbrb', 'gbgr', 'gbgg', 'gbgb', 'gbbr', 'gbbg', 'gbbb', 'brrr', 'brrg', 'brrb', 'brgr', 'brgg', 'brgb', 'brbr', 'brbg', 'brbb', 'bgrr', 'bgrg', 'bgrb', 'bggr', 'bggg', 'bggb', 'bgbr', 'bgbg', 'bgbb', 'bbrr', 'bbrg', 'bbrb', 'bbgr', 'bbgg', 'bbgb', 'bbbr', 'bbbg', 'bbbb'];\nconst VEC4_SWIZZLES = ['xw', 'yw', 'zw', 'wx', 'wy', 'wz', 'ww', 'xxw', 'xyw', 'xzw', 'xwx', 'xwy', 'xwz', 'xww', 'yxw', 'yyw', 'yzw', 'ywx', 'ywy', 'ywz', 'yww', 'zxw', 'zyw', 'zzw', 'zwx', 'zwy', 'zwz', 'zww', 'wxx', 'wxy', 'wxz', 'wxw', 'wyx', 'wyy', 'wyz', 'wyw', 'wzx', 'wzy', 'wzz', 'wzw', 'wwx', 'wwy', 'wwz', 'www', 'xxxw', 'xxyw', 'xxzw', 'xxwx', 'xxwy', 'xxwz', 'xxww', 'xyxw', 'xyyw', 'xyzw', 'xywx', 'xywy', 'xywz', 'xyww', 'xzxw', 'xzyw', 'xzzw', 'xzwx', 'xzwy', 'xzwz', 'xzww', 'xwxx', 'xwxy', 'xwxz', 'xwxw', 'xwyx', 'xwyy', 'xwyz', 'xwyw', 'xwzx', 'xwzy', 'xwzz', 'xwzw', 'xwwx', 'xwwy', 'xwwz', 'xwww', 'yxxw', 'yxyw', 'yxzw', 'yxwx', 'yxwy', 'yxwz', 'yxww', 'yyxw', 'yyyw', 'yyzw', 'yywx', 'yywy', 'yywz', 'yyww', 'yzxw', 'yzyw', 'yzzw', 'yzwx', 'yzwy', 'yzwz', 'yzww', 'ywxx', 'ywxy', 'ywxz', 'ywxw', 'ywyx', 'ywyy', 'ywyz', 'ywyw', 'ywzx', 'ywzy', 'ywzz', 'ywzw', 'ywwx', 'ywwy', 'ywwz', 'ywww', 'zxxw', 'zxyw', 'zxzw', 'zxwx', 'zxwy', 'zxwz', 'zxww', 'zyxw', 'zyyw', 'zyzw', 'zywx', 'zywy', 'zywz', 'zyww', 'zzxw', 'zzyw', 'zzzw', 'zzwx', 'zzwy', 'zzwz', 'zzww', 'zwxx', 'zwxy', 'zwxz', 'zwxw', 'zwyx', 'zwyy', 'zwyz', 'zwyw', 'zwzx', 'zwzy', 'zwzz', 'zwzw', 'zwwx', 'zwwy', 'zwwz', 'zwww', 'wxxx', 'wxxy', 'wxxz', 'wxxw', 'wxyx', 'wxyy', 'wxyz', 'wxyw', 'wxzx', 'wxzy', 'wxzz', 'wxzw', 'wxwx', 'wxwy', 'wxwz', 'wxww', 'wyxx', 'wyxy', 'wyxz', 'wyxw', 'wyyx', 'wyyy', 'wyyz', 'wyyw', 'wyzx', 'wyzy', 'wyzz', 'wyzw', 'wywx', 'wywy', 'wywz', 'wyww', 'wzxx', 'wzxy', 'wzxz', 'wzxw', 'wzyx', 'wzyy', 'wzyz', 'wzyw', 'wzzx', 'wzzy', 'wzzz', 'wzzw', 'wzwx', 'wzwy', 'wzwz', 'wzww', 'wwxx', 'wwxy', 'wwxz', 'wwxw', 'wwyx', 'wwyy', 'wwyz', 'wwyw', 'wwzx', 'wwzy', 'wwzz', 'wwzw', 'wwwx', 'wwwy', 'wwwz', 'wwww', 'ra', 'ga', 'ba', 'ar', 'ag', 'ab', 'aa', 'rra', 'rga', 'rba', 'rar', 'rag', 'rab', 'raa', 'gra', 'gga', 'gba', 'gar', 'gag', 'gab', 'gaa', 'bra', 'bga', 'bba', 'bar', 'bag', 'bab', 'baa', 'arr', 'arg', 'arb', 'ara', 'agr', 'agg', 'agb', 'aga', 'abr', 'abg', 'abb', 'aba', 'aar', 'aag', 'aab', 'aaa', 'rrra', 'rrga', 'rrba', 'rrar', 'rrag', 'rrab', 'rraa', 'rgra', 'rgga', 'rgba', 'rgar', 'rgag', 'rgab', 'rgaa', 'rbra', 'rbga', 'rbba', 'rbar', 'rbag', 'rbab', 'rbaa', 'rarr', 'rarg', 'rarb', 'rara', 'ragr', 'ragg', 'ragb', 'raga', 'rabr', 'rabg', 'rabb', 'raba', 'raar', 'raag', 'raab', 'raaa', 'grra', 'grga', 'grba', 'grar', 'grag', 'grab', 'graa', 'ggra', 'ggga', 'ggba', 'ggar', 'ggag', 'ggab', 'ggaa', 'gbra', 'gbga', 'gbba', 'gbar', 'gbag', 'gbab', 'gbaa', 'garr', 'garg', 'garb', 'gara', 'gagr', 'gagg', 'gagb', 'gaga', 'gabr', 'gabg', 'gabb', 'gaba', 'gaar', 'gaag', 'gaab', 'gaaa', 'brra', 'brga', 'brba', 'brar', 'brag', 'brab', 'braa', 'bgra', 'bgga', 'bgba', 'bgar', 'bgag', 'bgab', 'bgaa', 'bbra', 'bbga', 'bbba', 'bbar', 'bbag', 'bbab', 'bbaa', 'barr', 'barg', 'barb', 'bara', 'bagr', 'bagg', 'bagb', 'baga', 'babr', 'babg', 'babb', 'baba', 'baar', 'baag', 'baab', 'baaa', 'arrr', 'arrg', 'arrb', 'arra', 'argr', 'argg', 'argb', 'arga', 'arbr', 'arbg', 'arbb', 'arba', 'arar', 'arag', 'arab', 'araa', 'agrr', 'agrg', 'agrb', 'agra', 'aggr', 'aggg', 'aggb', 'agga', 'agbr', 'agbg', 'agbb', 'agba', 'agar', 'agag', 'agab', 'agaa', 'abrr', 'abrg', 'abrb', 'abra', 'abgr', 'abgg', 'abgb', 'abga', 'abbr', 'abbg', 'abbb', 'abba', 'abar', 'abag', 'abab', 'abaa', 'aarr', 'aarg', 'aarb', 'aara', 'aagr', 'aagg', 'aagb', 'aaga', 'aabr', 'aabg', 'aabb', 'aaba', 'aaar', 'aaag', 'aaab', 'aaaa'];\n// [/Swizzle Autogen]\nconst SWIZZLE_INDEX = {\n    x: 0, r: 0,\n    y: 1, g: 1,\n    z: 2, b: 2,\n    w: 3, a: 3,\n};\nfunction getSwizzleImpl(swizzle) {\n    switch (swizzle.length) {\n        case 2:\n            return function () { return new Vec2(this[SWIZZLE_INDEX[swizzle[0]]], this[SWIZZLE_INDEX[swizzle[1]]]); };\n        case 3:\n            return function () { return new Vec3(this[SWIZZLE_INDEX[swizzle[0]]], this[SWIZZLE_INDEX[swizzle[1]]], this[SWIZZLE_INDEX[swizzle[2]]]); };\n        case 4:\n            return function () { return new Vec4(this[SWIZZLE_INDEX[swizzle[0]]], this[SWIZZLE_INDEX[swizzle[1]]], this[SWIZZLE_INDEX[swizzle[2]]], this[SWIZZLE_INDEX[swizzle[3]]]); };\n    }\n}\nlet swizzlesEnabled = false;\n/**\n * Enables Swizzle operations on {@link Vec2}, {@link Vec3}, and {@link Vec4} types.\n *\n * Swizzle operations are performed by using the `.` operator in conjunction with any combination\n * of between two to four component names, either from the set `xyzw` or `rgbw` (though not intermixed).\n * They return a new vector with the same number of components as specified in the swizzle attribute.\n *\n * @example\n * ```js\n * import { Vec3, EnableSwizzles } from 'gl-matrix';\n *\n * EnableSwizzles();\n *\n * let v = new Vec3(0, 1, 2);\n *\n * v.yx // returns new Vec2(1, 0);\n * v.xzy // returns new Vec3(0, 2, 1);\n * v.zyxz // returns new Vec4(2, 1, 0, 2);\n *\n * v.rgb // returns new Vec3(0, 1, 2);\n * v.rbg // returns new Vec3(0, 2, 1);\n * v.gg // returns new Vec2(1, 1);\n * ```\n */\nfunction EnableSwizzles() {\n    if (swizzlesEnabled) {\n        return;\n    }\n    for (const swizzle of VEC2_SWIZZLES) {\n        const impl = getSwizzleImpl(swizzle);\n        Object.defineProperty(Vec2.prototype, swizzle, {\n            get: impl\n        });\n        Object.defineProperty(Vec3.prototype, swizzle, {\n            get: impl\n        });\n        Object.defineProperty(Vec4.prototype, swizzle, {\n            get: impl\n        });\n    }\n    for (const swizzle of VEC3_SWIZZLES) {\n        const impl = getSwizzleImpl(swizzle);\n        Object.defineProperty(Vec3.prototype, swizzle, {\n            get: impl\n        });\n        Object.defineProperty(Vec4.prototype, swizzle, {\n            get: impl\n        });\n    }\n    for (const swizzle of VEC4_SWIZZLES) {\n        const impl = getSwizzleImpl(swizzle);\n        Object.defineProperty(Vec4.prototype, swizzle, {\n            get: impl\n        });\n    }\n    swizzlesEnabled = true;\n}\n\nexport { EnableSwizzles, Mat2, Mat2d, Mat3, Mat4, Quat, Quat2, Vec2, Vec3, Vec4 };\n//# sourceMappingURL=index.js.map\n","/**\n * Awaits `requestAnimationFrame` calls by the counter specified. This allows asynchronous applications for direct /\n * inline style modification amongst other direct animation techniques.\n *\n * @param {number}   [cntr=1] - A positive integer greater than 0 for amount of requestAnimationFrames to wait.\n *\n * @returns {Promise<number>} Returns current time equivalent to `performance.now()`.\n */\nasync function nextAnimationFrame(cntr = 1)\n{\n   if (!Number.isInteger(cntr) || cntr < 1)\n   {\n      throw new TypeError(`nextAnimationFrame error: 'cntr' must be a positive integer greater than 0.`);\n   }\n\n   let currentTime = performance.now();\n   for (;--cntr >= 0;)\n   {\n      currentTime = await new Promise((resolve) => requestAnimationFrame(resolve));\n   }\n\n   return currentTime;\n}\n\nexport { nextAnimationFrame };\n//# sourceMappingURL=index.js.map\n","/**\n * Clamps a value between min / max values.\n *\n * @param {number}   value - Value to clamp.\n *\n * @param {number}   min - Minimum value.\n *\n * @param {number}   max - Maximum value.\n *\n * @returns {number} Clamped value.\n */\nfunction clamp(value = 0, min = 0, max = 0)\n{\n   return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Converts the given number from degrees to radians.\n *\n * @param {number}   deg - Degree number to convert\n *\n * @returns {number} Degree as radians.\n */\nfunction degToRad(deg)\n{\n   return deg * (Math.PI / 180.0);\n}\n\n/**\n * Converts the given number from radians to degrees.\n *\n * @param {number}   rad - Radian number to convert.\n *\n * @returns {number} Degree as radians.\n */\nfunction radToDeg(rad)\n{\n   return rad * (180.0 / Math.PI);\n}\n\nexport { clamp, degToRad, radToDeg };\n//# sourceMappingURL=index.js.map\n","import { propertyStore } from '@typhonjs-fvtt/runtime/svelte/store/writable-derived';\nimport { isObject, isPlainObject, isIterable, hasSetter } from '@typhonjs-fvtt/runtime/util/object';\nimport { subscribeIgnoreFirst } from '@typhonjs-fvtt/runtime/util/store';\nimport { cubicOut, linear } from 'svelte/easing';\nimport { lerp } from '@typhonjs-fvtt/runtime/math/interpolate';\nimport { writable } from 'svelte/store';\nimport { StyleParse } from '@typhonjs-fvtt/runtime/util/browser';\nimport { Mat4, Vec3 } from '@typhonjs-fvtt/runtime/math/gl-matrix';\nimport { nextAnimationFrame } from '@typhonjs-fvtt/runtime/util/animate';\nimport { degToRad, clamp } from '@typhonjs-fvtt/runtime/math/util';\n\n/**\n * Provides a TJSBasicAnimation implementation for TJSPosition animation.\n */\nclass AnimationControl\n{\n   /** @type {object} */\n   #animationData;\n\n   /** @type {Promise<void>} */\n   #finishedPromise;\n\n   #willFinish;\n\n   /**\n    * Defines a static empty / void animation control.\n    *\n    * @type {AnimationControl}\n    */\n   static #voidControl = new AnimationControl(null);\n\n   /**\n    * Provides a static void / undefined AnimationControl that is automatically resolved.\n    *\n    * @returns {AnimationControl} Void AnimationControl\n    */\n   static get voidControl() { return this.#voidControl; }\n\n   /**\n    * @param {object|null} [animationData] - Animation data from {@link AnimationAPI}.\n    *\n    * @param {boolean}     [willFinish] - Promise that tracks animation finished state.\n    */\n   constructor(animationData, willFinish = false)\n   {\n      this.#animationData = animationData;\n      this.#willFinish = willFinish;\n\n      // Set this control to animation data.\n      if (isObject(animationData)) { animationData.control = this; }\n   }\n\n   /**\n    * Get a promise that resolves when animation is finished.\n    *\n    * @returns {Promise<void>}\n    */\n   get finished()\n   {\n      if (!(this.#finishedPromise instanceof Promise))\n      {\n         this.#finishedPromise = this.#willFinish ? new Promise((resolve) => this.#animationData.resolve = resolve) :\n          Promise.resolve();\n      }\n\n      return this.#finishedPromise;\n   }\n\n   /**\n    * Returns whether this animation is currently active / animating.\n    *\n    * Note: a delayed animation may not be started / active yet. Use {@link AnimationControl.isFinished} to determine\n    * if an animation is actually finished.\n    *\n    * @returns {boolean} Animation active state.\n    */\n   get isActive() { return this.#animationData.active; }\n\n   /**\n    * Returns whether this animation is completely finished.\n    *\n    * @returns {boolean} Animation finished state.\n    */\n   get isFinished() { return this.#animationData.finished; }\n\n   /**\n    * Cancels the animation.\n    */\n   cancel()\n   {\n      const animationData = this.#animationData;\n\n      if (animationData === null || animationData === void 0) { return; }\n\n      // Set cancelled state to true and this animation data instance will be removed from AnimationManager on next\n      // update.\n      animationData.cancelled = true;\n   }\n}\n\n/**\n * Provides animation management and scheduling allowing all TJSPosition instances to utilize one micro-task.\n */\nclass AnimationManager\n{\n   /**\n    * @type {object[]}\n    */\n   static activeList = [];\n\n   /**\n    * @type {object[]}\n    */\n   static newList = [];\n\n   /**\n    * @type {number}\n    */\n   static current;\n\n   /**\n    * Add animation data.\n    *\n    * @param {object}   data -\n    */\n   static add(data)\n   {\n      const now = performance.now();\n\n      // Offset start time by delta between last rAF time. This allows continuous tween cycles to appear naturally as\n      // starting from the instant they are added to the AnimationManager. This is what makes `draggable` smooth when\n      // easing is enabled.\n      data.start = now + (AnimationManager.current - now);\n\n      AnimationManager.newList.push(data);\n   }\n\n   /**\n    * Manage all animation\n    */\n   static animate()\n   {\n      const current = AnimationManager.current = performance.now();\n\n      // Early out of the rAF callback when there are no current animations.\n      if (AnimationManager.activeList.length === 0 && AnimationManager.newList.length === 0)\n      {\n         globalThis.requestAnimationFrame(AnimationManager.animate);\n         return;\n      }\n\n      if (AnimationManager.newList.length)\n      {\n         // Process new data\n         for (let cntr = AnimationManager.newList.length; --cntr >= 0;)\n         {\n            const data = AnimationManager.newList[cntr];\n\n            // If animation instance has been cancelled before start then remove it from new list and cleanup.\n            if (data.cancelled)\n            {\n               AnimationManager.newList.splice(cntr, 1);\n               data.cleanup(data);\n            }\n\n            // If data is active then process it now. Delayed animations start with `active` false.\n            if (data.active)\n            {\n               // Remove from new list and add to active list.\n               AnimationManager.newList.splice(cntr, 1);\n               AnimationManager.activeList.push(data);\n            }\n         }\n      }\n\n      // Process active animations.\n      for (let cntr = AnimationManager.activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.activeList[cntr];\n\n         // Remove any animations that have been canceled.\n         // Ensure that the element is still connected otherwise remove it from active list and continue.\n         if (data.cancelled || (data.el !== void 0 && !data.el.isConnected))\n         {\n            AnimationManager.activeList.splice(cntr, 1);\n            data.cleanup(data);\n            continue;\n         }\n\n         data.current = current - data.start;\n\n         // Remove this animation instance if current animating time exceeds duration.\n         if (data.current >= data.duration)\n         {\n            // Prepare final update with end position data.\n            for (let dataCntr = data.keys.length; --dataCntr >= 0;)\n            {\n               const key = data.keys[dataCntr];\n               data.newData[key] = data.destination[key];\n            }\n\n            data.position.set(data.newData);\n\n            AnimationManager.activeList.splice(cntr, 1);\n            data.cleanup(data);\n\n            continue;\n         }\n\n         // Apply easing to create an eased time.\n         const easedTime = data.ease(data.current / data.duration);\n\n         for (let dataCntr = data.keys.length; --dataCntr >= 0;)\n         {\n            const key = data.keys[dataCntr];\n            data.newData[key] = data.interpolate(data.initial[key], data.destination[key], easedTime);\n         }\n\n         data.position.set(data.newData);\n      }\n\n      globalThis.requestAnimationFrame(AnimationManager.animate);\n   }\n\n   /**\n    * Cancels all animations for given TJSPosition instance.\n    *\n    * @param {import('../').TJSPosition} position - TJSPosition instance.\n    */\n   static cancel(position)\n   {\n      for (let cntr = AnimationManager.activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.activeList[cntr];\n         if (data.position === position)\n         {\n            AnimationManager.activeList.splice(cntr, 1);\n            data.cancelled = true;\n            data.cleanup(data);\n         }\n      }\n\n      for (let cntr = AnimationManager.newList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.newList[cntr];\n         if (data.position === position)\n         {\n            AnimationManager.newList.splice(cntr, 1);\n            data.cancelled = true;\n            data.cleanup(data);\n         }\n      }\n   }\n\n   /**\n    * Cancels all active and delayed animations.\n    */\n   static cancelAll()\n   {\n      for (let cntr = AnimationManager.activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.activeList[cntr];\n         data.cancelled = true;\n         data.cleanup(data);\n      }\n\n      for (let cntr = AnimationManager.newList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.newList[cntr];\n         data.cancelled = true;\n         data.cleanup(data);\n      }\n\n      AnimationManager.activeList.length = 0;\n      AnimationManager.newList.length = 0;\n   }\n\n   /**\n    * Gets all {@link AnimationControl} instances for a given TJSPosition instance.\n    *\n    * @param {import('../index.js').TJSPosition} position - TJSPosition instance.\n    *\n    * @returns {import('#runtime/util/animate').TJSBasicAnimation[]} All scheduled AnimationControl instances for the\n    *          given TJSPosition instance.\n    */\n   static getScheduled(position)\n   {\n      const results = [];\n\n      for (let cntr = AnimationManager.activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.activeList[cntr];\n         if (data.position === position)\n         {\n            results.push(data.control);\n         }\n      }\n\n      for (let cntr = AnimationManager.newList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.newList[cntr];\n         if (data.position === position)\n         {\n            results.push(data.control);\n         }\n      }\n\n      return results;\n   }\n}\n\n// Start animation manager immediately. It constantly is running in background.\nAnimationManager.animate();\n\n/**\n * Stores the TJSPositionData properties that can be animated.\n *\n * @type {Set<string>}\n */\nconst animateKeys = new Set([\n   // Main keys\n   'left', 'top', 'maxWidth', 'maxHeight', 'minWidth', 'minHeight', 'width', 'height',\n   'rotateX', 'rotateY', 'rotateZ', 'scale', 'translateX', 'translateY', 'translateZ', 'zIndex',\n\n   // Aliases\n   'rotation'\n]);\n\n/**\n * Defines the keys of TJSPositionData that are transform keys.\n *\n * @type {string[]}\n */\nconst transformKeys = ['rotateX', 'rotateY', 'rotateZ', 'scale', 'translateX', 'translateY', 'translateZ'];\n\nObject.freeze(transformKeys);\n\n/**\n * Parses a relative value string in the form of '+=', '-=', or '*=' and float / numeric value. IE '+=0.2'.\n *\n * @type {RegExp}\n */\nconst relativeRegex = /^([-+*])=(-?[\\d]*\\.?[\\d]+)$/;\n\n/**\n * Provides numeric defaults for all parameters. This is used by {@link TJSPosition.get} to optionally\n * provide numeric defaults.\n *\n * @type {{rotation: number, scale: number, minWidth: null, minHeight: null, translateZ: number, top: number, left: number, maxHeight: null, translateY: number, translateX: number, width: number, transformOrigin: null, rotateX: number, rotateY: number, height: number, maxWidth: null, zIndex: null, rotateZ: number}}\n */\nconst numericDefaults = {\n   // Other keys\n   height: 0,\n   left: 0,\n   maxHeight: null,\n   maxWidth: null,\n   minHeight: null,\n   minWidth: null,\n   top: 0,\n   transformOrigin: null,\n   width: 0,\n   zIndex: null,\n\n   rotateX: 0,\n   rotateY: 0,\n   rotateZ: 0,\n   scale: 1,\n   translateX: 0,\n   translateY: 0,\n   translateZ: 0,\n\n   rotation: 0\n};\n\nObject.freeze(numericDefaults);\n\n/**\n * Sets numeric defaults for a {@link TJSPositionData} like object.\n *\n * @param {object}   data - A TJSPositionData like object.\n */\nfunction setNumericDefaults(data)\n{\n   // Transform keys\n   if (data.rotateX === null) { data.rotateX = 0; }\n   if (data.rotateY === null) { data.rotateY = 0; }\n   if (data.rotateZ === null) { data.rotateZ = 0; }\n   if (data.translateX === null) { data.translateX = 0; }\n   if (data.translateY === null) { data.translateY = 0; }\n   if (data.translateZ === null) { data.translateZ = 0; }\n   if (data.scale === null) { data.scale = 1; }\n\n   // Aliases\n   if (data.rotation === null) { data.rotation = 0; }\n}\n\n/**\n * Defines bitwise keys for transforms used in {@link TJSTransforms.getMat4}.\n *\n * @type {object}\n */\nconst transformKeysBitwise = {\n   rotateX: 1,\n   rotateY: 2,\n   rotateZ: 4,\n   scale: 8,\n   translateX: 16,\n   translateY: 32,\n   translateZ: 64\n};\n\nObject.freeze(transformKeysBitwise);\n\n/**\n * Defines the default transform origin.\n *\n * @type {string}\n */\nconst transformOriginDefault = 'top left';\n\n/**\n * Defines the valid transform origins.\n *\n * @type {string[]}\n */\nconst transformOrigins = ['top left', 'top center', 'top right', 'center left', 'center', 'center right', 'bottom left',\n 'bottom center', 'bottom right'];\n\nObject.freeze(transformOrigins);\n\n/**\n * Converts any relative string values for animatable keys to actual updates performed against current data.\n *\n * @param {import('./').TJSPositionDataExtended}    positionData - position data.\n *\n * @param {import('./').TJSPosition | import('./').TJSPositionData}   position - The source position instance.\n */\nfunction convertRelative(positionData, position)\n{\n   for (const key in positionData)\n   {\n      // Key is animatable / numeric.\n      if (animateKeys.has(key))\n      {\n         const value = positionData[key];\n\n         if (typeof value !== 'string') { continue; }\n\n         // Ignore 'auto' and 'inherit' string values.\n         if (value === 'auto' || value === 'inherit') { continue; }\n\n         const regexResults = relativeRegex.exec(value);\n\n         if (!regexResults)\n         {\n            throw new Error(\n             `convertRelative error: malformed relative key (${key}) with value (${value})`);\n         }\n\n         const current = position[key];\n\n         switch (regexResults[1])\n         {\n            case '-':\n               positionData[key] = current - parseFloat(regexResults[2]);\n               break;\n\n            case '+':\n               positionData[key] = current + parseFloat(regexResults[2]);\n               break;\n\n            case '*':\n               positionData[key] = current * parseFloat(regexResults[2]);\n               break;\n         }\n      }\n   }\n}\n\nclass AnimationAPI\n{\n   /** @type {import('../').TJSPositionData} */\n   #data;\n\n   /** @type {import('../').TJSPosition} */\n   #position;\n\n   /**\n    * Tracks the number of animation control instances that are active.\n    *\n    * @type {number}\n    */\n   #instanceCount = 0;\n\n   /**\n    * Provides a bound function to pass as data to AnimationManager to invoke `AnimationAPI.#cleanupInstance`.\n    *\n    * @type {Function}\n    */\n   #cleanup;\n\n   /**\n    * @param {import('../index.js').TJSPosition}       position -\n    *\n    * @param {import('../index.js').TJSPositionData}   data -\n    */\n   constructor(position, data)\n   {\n      this.#position = position;\n      this.#data = data;\n\n      this.#cleanup = this.#cleanupInstance.bind(this);\n   }\n\n   /**\n    * Returns whether there are scheduled animations whether active or delayed for this TJSPosition.\n    *\n    * @returns {boolean} Are there active animation instances.\n    */\n   get isScheduled()\n   {\n      return this.#instanceCount > 0;\n   }\n\n   /**\n    * Adds / schedules an animation w/ the AnimationManager. This contains the final steps common to all tweens.\n    *\n    * @param {object}      initial -\n    *\n    * @param {object}      destination -\n    *\n    * @param {number}      duration -\n    *\n    * @param {HTMLElement} el -\n    *\n    * @param {number}      delay -\n    *\n    * @param {Function}    ease -\n    *\n    * @param {Function}    interpolate -\n    *\n    * @returns {import('#runtime/util/animate').TJSBasicAnimation} The associated animation control.\n    */\n   #addAnimation(initial, destination, duration, el, delay, ease, interpolate)\n   {\n      // Set initial data for transform values that are often null by default.\n      setNumericDefaults(initial);\n      setNumericDefaults(destination);\n\n      // Reject all initial data that is not a number.\n      for (const key in initial)\n      {\n         if (!Number.isFinite(initial[key])) { delete initial[key]; }\n      }\n\n      const keys = Object.keys(initial);\n      const newData = Object.assign({ immediateElementUpdate: true }, initial);\n\n      // Nothing to animate, so return now.\n      if (keys.length === 0) { return AnimationControl.voidControl; }\n\n      const animationData = {\n         active: true,\n         cleanup: this.#cleanup,\n         cancelled: false,\n         control: void 0,\n         current: 0,\n         destination,\n         duration: duration * 1000, // Internally the AnimationManager works in ms.\n         ease,\n         el,\n         finished: false,\n         initial,\n         interpolate,\n         keys,\n         newData,\n         position: this.#position,\n         resolve: void 0,\n         start: void 0\n      };\n\n      if (delay > 0)\n      {\n         animationData.active = false;\n\n         // Delay w/ setTimeout and schedule w/ AnimationManager if not already canceled\n         setTimeout(() =>\n         {\n            if (!animationData.cancelled)\n            {\n               animationData.active = true;\n\n               const now = performance.now();\n\n               // Offset start time by delta between last rAF time. This allows a delayed tween to start from the\n               // precise delayed time.\n               animationData.start = now + (AnimationManager.current - now);\n            }\n         }, delay * 1000);\n      }\n\n      // Schedule immediately w/ AnimationManager\n      this.#instanceCount++;\n      AnimationManager.add(animationData);\n\n      // Create animation control\n      return new AnimationControl(animationData, true);\n   }\n\n   /**\n    * Cancels all animation instances for this TJSPosition instance.\n    */\n   cancel()\n   {\n      AnimationManager.cancel(this.#position);\n   }\n\n   /**\n    * Cleans up an animation instance.\n    *\n    * @param {object}   data - Animation data for an animation instance.\n    */\n   #cleanupInstance(data)\n   {\n      this.#instanceCount--;\n\n      data.active = false;\n      data.finished = true;\n\n      if (typeof data.resolve === 'function') { data.resolve(data.cancelled); }\n   }\n\n   /**\n    * Returns all currently scheduled AnimationControl instances for this TJSPosition instance.\n    *\n    * @returns {import('#runtime/util/animate').TJSBasicAnimation[]} All currently scheduled animation controls for\n    *          this TJSPosition instance.\n    */\n   getScheduled()\n   {\n      return AnimationManager.getScheduled(this.#position);\n   }\n\n   /**\n    * Provides a tween from given position data to the current position.\n    *\n    * @param {import('../index.js').TJSPositionDataExtended} fromData - The starting position.\n    *\n    * @param {object}         [opts] - Optional parameters.\n    *\n    * @param {number}         [opts.delay=0] - Delay in seconds before animation starts.\n    *\n    * @param {number}         [opts.duration=1] - Duration in seconds.\n    *\n    * @param {Function}       [opts.ease=cubicOut] - Easing function.\n    *\n    * @param {Function}       [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {import('#runtime/util/animate').TJSBasicAnimation}  A control object that can cancel animation and\n    *          provides a `finished` Promise.\n    */\n   from(fromData, { delay = 0, duration = 1, ease = cubicOut, interpolate = lerp } = {})\n   {\n      if (!isObject(fromData))\n      {\n         throw new TypeError(`AnimationAPI.from error: 'fromData' is not an object.`);\n      }\n\n      const position = this.#position;\n      const parent = position.parent;\n\n      // Early out if the application is not positionable.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return AnimationControl.voidControl;\n      }\n\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\n      const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n      const el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n      if (!Number.isFinite(delay) || delay < 0)\n      {\n         throw new TypeError(`AnimationAPI.from error: 'delay' is not a positive number.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationAPI.from error: 'duration' is not a positive number.`);\n      }\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.from error: 'ease' is not a function.`);\n      }\n\n      if (typeof interpolate !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.from error: 'interpolate' is not a function.`);\n      }\n\n      const initial = {};\n      const destination = {};\n\n      const data = this.#data;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key in fromData)\n      {\n         if (data[key] !== void 0 && fromData[key] !== data[key])\n         {\n            initial[key] = fromData[key];\n            destination[key] = data[key];\n         }\n      }\n\n      convertRelative(initial, data);\n\n      return this.#addAnimation(initial, destination, duration, el, delay, ease, interpolate);\n   }\n\n   /**\n    * Provides a tween from given position data to the current position.\n    *\n    * @param {import('../index.js').TJSPositionDataExtended} fromData - The starting position.\n    *\n    * @param {import('../index.js').TJSPositionDataExtended} toData - The ending position.\n    *\n    * @param {object}         [opts] - Optional parameters.\n    *\n    * @param {number}         [opts.delay=0] - Delay in seconds before animation starts.\n    *\n    * @param {number}         [opts.duration=1] - Duration in seconds.\n    *\n    * @param {Function}       [opts.ease=cubicOut] - Easing function.\n    *\n    * @param {Function}       [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {import('#runtime/util/animate').TJSBasicAnimation}  A control object that can cancel animation and\n    *          provides a `finished` Promise.\n    */\n   fromTo(fromData, toData, { delay = 0, duration = 1, ease = cubicOut, interpolate = lerp } = {})\n   {\n      if (!isObject(fromData))\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'fromData' is not an object.`);\n      }\n\n      if (!isObject(toData))\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'toData' is not an object.`);\n      }\n\n      const parent = this.#position.parent;\n\n      // Early out if the application is not positionable.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return AnimationControl.voidControl;\n      }\n\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\n      const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n      const el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n      if (!Number.isFinite(delay) || delay < 0)\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'delay' is not a positive number.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'duration' is not a positive number.`);\n      }\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'ease' is not a function.`);\n      }\n\n      if (typeof interpolate !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'interpolate' is not a function.`);\n      }\n\n      const initial = {};\n      const destination = {};\n\n      const data = this.#data;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key in fromData)\n      {\n         if (toData[key] === void 0)\n         {\n            console.warn(\n             `AnimationAPI.fromTo warning: key ('${key}') from 'fromData' missing in 'toData'; skipping this key.`);\n            continue;\n         }\n\n         if (data[key] !== void 0)\n         {\n            initial[key] = fromData[key];\n            destination[key] = toData[key];\n         }\n      }\n\n      convertRelative(initial, data);\n      convertRelative(destination, data);\n\n      return this.#addAnimation(initial, destination, duration, el, delay, ease, interpolate);\n   }\n\n   /**\n    * Provides a tween to given position data from the current position.\n    *\n    * @param {import('../index.js').TJSPositionDataExtended} toData - The destination position.\n    *\n    * @param {object}         [opts] - Optional parameters.\n    *\n    * @param {number}         [opts.delay=0] - Delay in seconds before animation starts.\n    *\n    * @param {number}         [opts.duration=1] - Duration in seconds.\n    *\n    * @param {Function}       [opts.ease=cubicOut] - Easing function.\n    *\n    * @param {Function}       [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {import('#runtime/util/animate').TJSBasicAnimation}  A control object that can cancel animation and\n    *          provides a `finished` Promise.\n    */\n   to(toData, { delay = 0, duration = 1, ease = cubicOut, interpolate = lerp } = {})\n   {\n      if (!isObject(toData))\n      {\n         throw new TypeError(`AnimationAPI.to error: 'toData' is not an object.`);\n      }\n\n      const parent = this.#position.parent;\n\n      // Early out if the application is not positionable.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return AnimationControl.voidControl;\n      }\n\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\n      const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n      const el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n      if (!Number.isFinite(delay) || delay < 0)\n      {\n         throw new TypeError(`AnimationAPI.to error: 'delay' is not a positive number.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationAPI.to error: 'duration' is not a positive number.`);\n      }\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.to error: 'ease' is not a function.`);\n      }\n\n      if (typeof interpolate !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.to error: 'interpolate' is not a function.`);\n      }\n\n      const initial = {};\n      const destination = {};\n\n      const data = this.#data;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key in toData)\n      {\n         if (data[key] !== void 0 && toData[key] !== data[key])\n         {\n            destination[key] = toData[key];\n            initial[key] = data[key];\n         }\n      }\n\n      convertRelative(destination, data);\n\n      return this.#addAnimation(initial, destination, duration, el, delay, ease, interpolate);\n   }\n\n   /**\n    * Returns a function that provides an optimized way to constantly update a to-tween.\n    *\n    * @param {Iterable<string>}  keys - The keys for quickTo.\n    *\n    * @param {object}            [opts] - Optional parameters.\n    *\n    * @param {number}            [opts.duration=1] - Duration in seconds.\n    *\n    * @param {Function}          [opts.ease=cubicOut] - Easing function.\n    *\n    * @param {Function}          [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {import('../index.js').quickToCallback} quick-to tween function.\n    */\n   quickTo(keys, { duration = 1, ease = cubicOut, interpolate = lerp } = {})\n   {\n      if (!isIterable(keys))\n      {\n         throw new TypeError(`AnimationAPI.quickTo error: 'keys' is not an iterable list.`);\n      }\n\n      const parent = this.#position.parent;\n\n      // Early out if the application is not positionable.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         throw new Error(`AnimationAPI.quickTo error: 'parent' is not positionable.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationAPI.quickTo error: 'duration' is not a positive number.`);\n      }\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.quickTo error: 'ease' is not a function.`);\n      }\n\n      if (typeof interpolate !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.quickTo error: 'interpolate' is not a function.`);\n      }\n\n      const initial = {};\n      const destination = {};\n\n      const data = this.#data;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key of keys)\n      {\n         if (typeof key !== 'string')\n         {\n            throw new TypeError(`AnimationAPI.quickTo error: key is not a string.`);\n         }\n\n         if (!animateKeys.has(key))\n         {\n            throw new Error(`AnimationAPI.quickTo error: key ('${key}') is not animatable.`);\n         }\n\n         if (data[key] !== void 0)\n         {\n            destination[key] = data[key];\n            initial[key] = data[key];\n         }\n      }\n\n      const keysArray = [...keys];\n\n      Object.freeze(keysArray);\n\n      const newData = Object.assign({ immediateElementUpdate: true }, initial);\n\n      const animationData = {\n         active: true,\n         cleanup: this.#cleanup,\n         cancelled: false,\n         control: void 0,\n         current: 0,\n         destination,\n         duration: duration * 1000, // Internally the AnimationManager works in ms.\n         ease,\n         el: void 0,\n         finished: true, // Note: start in finished state to add to AnimationManager on first callback.\n         initial,\n         interpolate,\n         keys,\n         newData,\n         position: this.#position,\n         resolve: void 0,\n         start: void 0\n      };\n\n      const quickToCB = (...args) =>\n      {\n         const argsLength = args.length;\n\n         if (argsLength === 0) { return; }\n\n         for (let cntr = keysArray.length; --cntr >= 0;)\n         {\n            const key = keysArray[cntr];\n            if (data[key] !== void 0) { initial[key] = data[key]; }\n         }\n\n         // Handle case where the first arg is an object. Update all quickTo keys from data contained in the object.\n         if (isObject(args[0]))\n         {\n            const objData = args[0];\n\n            for (const key in objData)\n            {\n               if (destination[key] !== void 0) { destination[key] = objData[key]; }\n            }\n         }\n         else // Assign each variable argument to the key specified in the initial `keys` array above.\n         {\n            for (let cntr = 0; cntr < argsLength && cntr < keysArray.length; cntr++)\n            {\n               const key = keysArray[cntr];\n               if (destination[key] !== void 0) { destination[key] = args[cntr]; }\n            }\n         }\n\n         convertRelative(destination, data);\n\n         // Set initial data for transform values that are often null by default.\n         setNumericDefaults(initial);\n         setNumericDefaults(destination);\n\n         // Set target element to animation data to track if it is removed from the DOM hence ending the animation.\n         const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n         animationData.el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n         // Reschedule the quickTo animation with AnimationManager as it is finished.\n         if (animationData.finished)\n         {\n            animationData.finished = false;\n            animationData.active = true;\n            animationData.current = 0;\n\n            this.#instanceCount++;\n            AnimationManager.add(animationData);\n         }\n         else // QuickTo animation is currently scheduled w/ AnimationManager so reset start and current time.\n         {\n            const now = performance.now();\n\n            // Offset start time by delta between last rAF time. This allows a delayed tween to start from the\n            // precise delayed time.\n            animationData.start = now + (AnimationManager.current - now);\n            animationData.current = 0;\n         }\n      };\n\n      quickToCB.keys = keysArray;\n\n      /**\n       * Sets options of quickTo tween.\n       *\n       * @param {object}            [opts] - Optional parameters.\n       *\n       * @param {number}            [opts.duration] - Duration in seconds.\n       *\n       * @param {Function}          [opts.ease] - Easing function.\n       *\n       * @param {Function}          [opts.interpolate] - Interpolation function.\n       *\n       * @returns {import('../').quickToCallback} The quickTo callback.\n       */\n      quickToCB.options = ({ duration, ease, interpolate } = {}) => // eslint-disable-line no-shadow\n      {\n         if (duration !== void 0 && (!Number.isFinite(duration) || duration < 0))\n         {\n            throw new TypeError(`AnimationAPI.quickTo.options error: 'duration' is not a positive number.`);\n         }\n\n         if (ease !== void 0 && typeof ease !== 'function')\n         {\n            throw new TypeError(`AnimationAPI.quickTo.options error: 'ease' is not a function.`);\n         }\n\n         if (interpolate !== void 0 && typeof interpolate !== 'function')\n         {\n            throw new TypeError(`AnimationAPI.quickTo.options error: 'interpolate' is not a function.`);\n         }\n\n         if (duration >= 0) { animationData.duration = duration * 1000; }\n         if (ease) { animationData.ease = ease; }\n         if (interpolate) { animationData.interpolate = interpolate; }\n\n         return quickToCB;\n      };\n\n      return quickToCB;\n   }\n}\n\n/**\n * Provides a TJSBasicAnimation implementation for a TJSPosition animation for a group of TJSPosition instances.\n */\nclass AnimationGroupControl\n{\n   /** @type {import('./AnimationControl').AnimationControl[]} */\n   #animationControls;\n\n   /** @type {Promise<Awaited<unknown>[]>} */\n   #finishedPromise;\n\n   /**\n    * Defines a static empty / void animation control.\n    *\n    * @type {AnimationGroupControl}\n    */\n   static #voidControl = new AnimationGroupControl(null);\n\n   /**\n    * Provides a static void / undefined AnimationGroupControl that is automatically resolved.\n    *\n    * @returns {AnimationGroupControl} Void AnimationGroupControl\n    */\n   static get voidControl() { return this.#voidControl; }\n\n   /**\n    * @param {import('./AnimationControl').AnimationControl[]} animationControls - An array of AnimationControl\n    *        instances.\n    */\n   constructor(animationControls)\n   {\n      this.#animationControls = animationControls;\n   }\n\n   /**\n    * Get a promise that resolves when all animations are finished.\n    *\n    * @returns {Promise<Awaited<unknown>[]>|Promise<void>} Finished Promise for all animations.\n    */\n   get finished()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0) { return Promise.resolve(); }\n\n      if (!(this.#finishedPromise instanceof Promise))\n      {\n         const promises = [];\n         for (let cntr = animationControls.length; --cntr >= 0;)\n         {\n            promises.push(animationControls[cntr].finished);\n         }\n\n         this.#finishedPromise = Promise.all(promises);\n      }\n\n      return this.#finishedPromise;\n   }\n\n   /**\n    * Returns whether there are active animation instances for this group.\n    *\n    * Note: a delayed animation may not be started / active yet. Use {@link AnimationGroupControl.isFinished} to\n    * determine if all animations in the group are finished.\n    *\n    * @returns {boolean} Are there active animation instances.\n    */\n   get isActive()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0) { return false; }\n\n      for (let cntr = animationControls.length; --cntr >= 0;)\n      {\n         if (animationControls[cntr].isActive) { return true; }\n      }\n\n      return false;\n   }\n\n   /**\n    * Returns whether all animations in the group are finished.\n    *\n    * @returns {boolean} Are all animation instances finished.\n    */\n   get isFinished()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0) { return true; }\n\n      for (let cntr = animationControls.length; --cntr >= 0;)\n      {\n         if (!animationControls[cntr].isFinished) { return false; }\n      }\n\n      return false;\n   }\n\n   /**\n    * Cancels the all animations.\n    */\n   cancel()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0) { return; }\n\n      for (let cntr = this.#animationControls.length; --cntr >= 0;)\n      {\n         this.#animationControls[cntr].cancel();\n      }\n   }\n}\n\n/**\n * Provides a public API for grouping multiple {@link TJSPosition} animations together with the\n * AnimationManager.\n *\n * Note: To remove cyclic dependencies as this class provides the TJSPosition static / group Animation API `instanceof`\n * checks are not done against TJSPosition. Instead, a check for the animate property being an instanceof\n * {@link AnimationAPI} is performed in {@link AnimationGroupAPI.#isPosition}.\n *\n * @see AnimationAPI\n */\nclass AnimationGroupAPI\n{\n   /**\n    * Checks of the given object is a TJSPosition instance by checking for AnimationAPI.\n    *\n    * @param {*}  object - Any data.\n    *\n    * @returns {boolean} Is TJSPosition.\n    */\n   static #isPosition(object)\n   {\n      return isObject(object) && object.animate instanceof AnimationAPI;\n   }\n\n   /**\n    * Cancels any animation for given TJSPosition data.\n    *\n    * @param {import('../').TJSPosition | {position: import('../').TJSPosition} | Iterable<import('../').TJSPosition> | Iterable<{position: import('../').TJSPosition}>} position -\n    */\n   static cancel(position)\n   {\n      if (isIterable(position))\n      {\n         let index = -1;\n\n         for (const entry of position)\n         {\n            index++;\n\n            const actualPosition = this.#isPosition(entry) ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.cancel warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            AnimationManager.cancel(actualPosition);\n         }\n      }\n      else\n      {\n         const actualPosition = this.#isPosition(position) ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.cancel warning: No Position instance found.`);\n            return;\n         }\n\n         AnimationManager.cancel(actualPosition);\n      }\n   }\n\n   /**\n    * Cancels all TJSPosition animation.\n    */\n   static cancelAll() { AnimationManager.cancelAll(); }\n\n   /**\n    * Gets all animation controls for the given position data.\n    *\n    * @param {import('../').TJSPosition | {position: import('../').TJSPosition} | Iterable<import('../').TJSPosition> | Iterable<{position: import('../').TJSPosition}>} position -\n    *\n    * @returns {{ position: import('../').TJSPosition, data: object | void, controls: import('./AnimationControl').AnimationControl[]}[]} Results array.\n    */\n   static getScheduled(position)\n   {\n      const results = [];\n\n      if (isIterable(position))\n      {\n         let index = -1;\n\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.getScheduled warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            const controls = AnimationManager.getScheduled(actualPosition);\n\n            results.push({ position: actualPosition, data: isPosition ? void 0 : entry, controls });\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.getScheduled warning: No Position instance found.`);\n            return results;\n         }\n\n         const controls = AnimationManager.getScheduled(actualPosition);\n\n         results.push({ position: actualPosition, data: isPosition ? void 0 : position, controls });\n      }\n\n      return results;\n   }\n\n   /**\n    * Provides the `from` animation tween for one or more TJSPosition instances as a group.\n    *\n    * @param {import('../').TJSPosition | {position: import('../').TJSPosition} | Iterable<import('../').TJSPosition> | Iterable<{position: import('../').TJSPosition}>} position -\n    *\n    * @param {object|Function}   fromData -\n    *\n    * @param {object|Function}   options -\n    *\n    * @returns {import('#runtime/util/animate').TJSBasicAnimation} Basic animation control.\n    */\n   static from(position, fromData, options)\n   {\n      if (!isObject(fromData) && typeof fromData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.from error: 'fromData' is not an object or function.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.from error: 'options' is not an object or function.`);\n      }\n\n      /**\n       * @type {import('./AnimationControl').AnimationControl[]}\n       */\n      const animationControls = [];\n\n      let index = -1;\n      let callbackOptions;\n\n      const hasDataCallback = typeof fromData === 'function';\n      const hasOptionCallback = typeof options === 'function';\n      const hasCallback = hasDataCallback || hasOptionCallback;\n\n      if (hasCallback) { callbackOptions = { index, position: void 0, data: void 0 }; }\n\n      let actualFromData = fromData;\n      let actualOptions = options;\n\n      if (isIterable(position))\n      {\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.from warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            if (hasCallback)\n            {\n               callbackOptions.index = index;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : entry;\n            }\n\n            if (hasDataCallback)\n            {\n               actualFromData = fromData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualFromData === null || actualFromData === void 0) { continue; }\n\n               if (!isObject(actualFromData))\n               {\n                  throw new TypeError(`AnimationGroupAPI.from error: fromData callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (!isObject(actualOptions))\n               {\n                  throw new TypeError(`AnimationGroupAPI.from error: options callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            animationControls.push(actualPosition.animate.from(actualFromData, actualOptions));\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.from warning: No Position instance found.`);\n            return AnimationGroupControl.voidControl;\n         }\n\n         if (hasCallback)\n         {\n            callbackOptions.index = 0;\n            callbackOptions.position = position;\n            callbackOptions.data = isPosition ? void 0 : position;\n         }\n\n         if (hasDataCallback)\n         {\n            actualFromData = fromData(callbackOptions);\n\n            if (!isObject(actualFromData))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.from error: fromData callback function failed to return an object.`);\n            }\n         }\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            if (!isObject(actualOptions))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.from error: options callback function failed to return an object.`);\n            }\n         }\n\n         animationControls.push(actualPosition.animate.from(actualFromData, actualOptions));\n      }\n\n      return new AnimationGroupControl(animationControls);\n   }\n\n   /**\n    * Provides the `fromTo` animation tween for one or more TJSPosition instances as a group.\n    *\n    * @param {import('../').TJSPosition | {position: import('../').TJSPosition} | Iterable<import('../').TJSPosition> | Iterable<{position: import('../').TJSPosition}>} position -\n    *\n    * @param {object|Function}   fromData -\n    *\n    * @param {object|Function}   toData -\n    *\n    * @param {object|Function}   options -\n    *\n    * @returns {import('#runtime/util/animate').TJSBasicAnimation} Basic animation control.\n    */\n   static fromTo(position, fromData, toData, options)\n   {\n      if (!isObject(fromData) && typeof fromData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'fromData' is not an object or function.`);\n      }\n\n      if (!isObject(toData) && typeof toData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'toData' is not an object or function.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'options' is not an object or function.`);\n      }\n\n      /**\n       * @type {import('./AnimationControl').AnimationControl[]}\n       */\n      const animationControls = [];\n\n      let index = -1;\n      let callbackOptions;\n\n      const hasFromCallback = typeof fromData === 'function';\n      const hasToCallback = typeof toData === 'function';\n      const hasOptionCallback = typeof options === 'function';\n      const hasCallback = hasFromCallback || hasToCallback || hasOptionCallback;\n\n      if (hasCallback) { callbackOptions = { index, position: void 0, data: void 0 }; }\n\n      let actualFromData = fromData;\n      let actualToData = toData;\n      let actualOptions = options;\n\n      if (isIterable(position))\n      {\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.fromTo warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            if (hasCallback)\n            {\n               callbackOptions.index = index;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : entry;\n            }\n\n            if (hasFromCallback)\n            {\n               actualFromData = fromData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualFromData === null || actualFromData === void 0) { continue; }\n\n               if (!isObject(actualFromData))\n               {\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: fromData callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasToCallback)\n            {\n               actualToData = toData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualToData === null || actualToData === void 0) { continue; }\n\n               if (!isObject(actualToData))\n               {\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: toData callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (!isObject(actualOptions))\n               {\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: options callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            animationControls.push(actualPosition.animate.fromTo(actualFromData, actualToData, actualOptions));\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.fromTo warning: No Position instance found.`);\n            return AnimationGroupControl.voidControl;\n         }\n\n         if (hasCallback)\n         {\n            callbackOptions.index = 0;\n            callbackOptions.position = position;\n            callbackOptions.data = isPosition ? void 0 : position;\n         }\n\n         if (hasFromCallback)\n         {\n            actualFromData = fromData(callbackOptions);\n\n            if (!isObject(actualFromData))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.fromTo error: fromData callback function failed to return an object.`);\n            }\n         }\n\n         if (hasToCallback)\n         {\n            actualToData = toData(callbackOptions);\n\n            if (!isObject(actualToData))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.fromTo error: toData callback function failed to return an object.`);\n            }\n         }\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            if (!isObject(actualOptions))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.fromTo error: options callback function failed to return an object.`);\n            }\n         }\n\n         animationControls.push(actualPosition.animate.fromTo(actualFromData, actualToData, actualOptions));\n      }\n\n      return new AnimationGroupControl(animationControls);\n   }\n\n   /**\n    * Provides the `to` animation tween for one or more TJSPosition instances as a group.\n    *\n    * @param {import('../').TJSPosition | {position: import('../').TJSPosition} | Iterable<import('../').TJSPosition> | Iterable<{position: import('../').TJSPosition}>} position -\n    *\n    * @param {object|Function}   toData -\n    *\n    * @param {object|Function}   options -\n    *\n    * @returns {import('#runtime/util/animate').TJSBasicAnimation} Basic animation control.\n    */\n   static to(position, toData, options)\n   {\n      if (!isObject(toData) && typeof toData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.to error: 'toData' is not an object or function.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.to error: 'options' is not an object or function.`);\n      }\n\n      /**\n       * @type {import('./AnimationControl').AnimationControl[]}\n       */\n      const animationControls = [];\n\n      let index = -1;\n      let callbackOptions;\n\n      const hasDataCallback = typeof toData === 'function';\n      const hasOptionCallback = typeof options === 'function';\n      const hasCallback = hasDataCallback || hasOptionCallback;\n\n      if (hasCallback) { callbackOptions = { index, position: void 0, data: void 0 }; }\n\n      let actualToData = toData;\n      let actualOptions = options;\n\n      if (isIterable(position))\n      {\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.to warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            if (hasCallback)\n            {\n               callbackOptions.index = index;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : entry;\n            }\n\n            if (hasDataCallback)\n            {\n               actualToData = toData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualToData === null || actualToData === void 0) { continue; }\n\n               if (!isObject(actualToData))\n               {\n                  throw new TypeError(`AnimationGroupAPI.to error: toData callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (!isObject(actualOptions))\n               {\n                  throw new TypeError(`AnimationGroupAPI.to error: options callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            animationControls.push(actualPosition.animate.to(actualToData, actualOptions));\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.to warning: No Position instance found.`);\n            return AnimationGroupControl.voidControl;\n         }\n\n         if (hasCallback)\n         {\n            callbackOptions.index = 0;\n            callbackOptions.position = position;\n            callbackOptions.data = isPosition ? void 0 : position;\n         }\n\n         if (hasDataCallback)\n         {\n            actualToData = toData(callbackOptions);\n\n            if (!isObject(actualToData))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.to error: toData callback function failed to return an object.`);\n            }\n         }\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            if (!isObject(actualOptions))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.to error: options callback function failed to return an object.`);\n            }\n         }\n\n         animationControls.push(actualPosition.animate.to(actualToData, actualOptions));\n      }\n\n      return new AnimationGroupControl(animationControls);\n   }\n\n   /**\n    * Provides the `to` animation tween for one or more TJSPosition instances as a group.\n    *\n    * @param {import('../').TJSPosition | {position: import('../').TJSPosition} | Iterable<import('../').TJSPosition> | Iterable<{position: import('../').TJSPosition}>} position -\n    *\n    * @param {Iterable<string>}  keys -\n    *\n    * @param {object|Function}   options -\n    *\n    * @returns {import('../').quickToCallback} Basic animation control.\n    */\n   static quickTo(position, keys, options)\n   {\n      if (!isIterable(keys))\n      {\n         throw new TypeError(`AnimationGroupAPI.quickTo error: 'keys' is not an iterable list.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' is not an object or function.`);\n      }\n\n      /**\n       * @type {import('../').quickToCallback[]}\n       */\n      const quickToCallbacks = [];\n\n      let index = -1;\n\n      const hasOptionCallback = typeof options === 'function';\n\n      const callbackOptions = { index, position: void 0, data: void 0 };\n\n      let actualOptions = options;\n\n      if (isIterable(position))\n      {\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.quickTo warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            callbackOptions.index = index;\n            callbackOptions.position = position;\n            callbackOptions.data = isPosition ? void 0 : entry;\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (!isObject(actualOptions))\n               {\n                  throw new TypeError(`AnimationGroupAPI.quickTo error: options callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            quickToCallbacks.push(actualPosition.animate.quickTo(keys, actualOptions));\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.quickTo warning: No Position instance found.`);\n            return () => null;\n         }\n\n         callbackOptions.index = 0;\n         callbackOptions.position = position;\n         callbackOptions.data = isPosition ? void 0 : position;\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            if (!isObject(actualOptions))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.quickTo error: options callback function failed to return an object.`);\n            }\n         }\n\n         quickToCallbacks.push(actualPosition.animate.quickTo(keys, actualOptions));\n      }\n\n      const keysArray = [...keys];\n\n      Object.freeze(keysArray);\n\n      const quickToCB = (...args) =>\n      {\n         const argsLength = args.length;\n\n         if (argsLength === 0) { return; }\n\n         if (typeof args[0] === 'function')\n         {\n            const dataCallback = args[0];\n\n            index = -1;\n            let cntr = 0;\n\n            if (isIterable(position))\n            {\n               for (const entry of position)\n               {\n                  index++;\n\n                  const isPosition = this.#isPosition(entry);\n                  const actualPosition = isPosition ? entry : entry.position;\n\n                  if (!this.#isPosition(actualPosition)) { continue; }\n\n                  callbackOptions.index = index;\n                  callbackOptions.position = position;\n                  callbackOptions.data = isPosition ? void 0 : entry;\n\n                  const toData = dataCallback(callbackOptions);\n\n                  // Returned data from callback is null / undefined, so skip this position instance.\n                  if (toData === null || toData === void 0) { continue; }\n\n                  /**\n                   * @type {boolean}\n                   */\n                  const toDataIterable = isIterable(toData);\n\n                  if (!Number.isFinite(toData) && !toDataIterable && !isObject(toData))\n                  {\n                     throw new TypeError(`AnimationGroupAPI.quickTo error: toData callback function iteration(${\n                      index}) failed to return a finite number, iterable list, or object.`);\n                  }\n\n                  if (toDataIterable)\n                  {\n                     quickToCallbacks[cntr++](...toData);\n                  }\n                  else\n                  {\n                     quickToCallbacks[cntr++](toData);\n                  }\n               }\n            }\n            else\n            {\n               const isPosition = this.#isPosition(position);\n               const actualPosition = isPosition ? position : position.position;\n\n               if (!this.#isPosition(actualPosition)) { return; }\n\n               callbackOptions.index = 0;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : position;\n\n               const toData = dataCallback(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (toData === null || toData === void 0) { return; }\n\n               const toDataIterable = isIterable(toData);\n\n               if (!Number.isFinite(toData) && !toDataIterable && !isObject(toData))\n               {\n                  throw new TypeError(`AnimationGroupAPI.quickTo error: toData callback function iteration(${\n                   index}) failed to return a finite number, iterable list, or object.`);\n               }\n\n               if (toDataIterable)\n               {\n                  quickToCallbacks[cntr++](...toData);\n               }\n               else\n               {\n                  quickToCallbacks[cntr++](toData);\n               }\n            }\n         }\n         else\n         {\n            for (let cntr = quickToCallbacks.length; --cntr >= 0;)\n            {\n               quickToCallbacks[cntr](...args);\n            }\n         }\n      };\n\n      quickToCB.keys = keysArray;\n\n      /**\n       * Sets options of quickTo tween.\n       *\n       * @param {object|Function}   [options] - Optional parameters.\n       *\n       * @param {number}            [options.duration] - Duration in seconds.\n       *\n       * @param {Function}          [options.ease] - Easing function.\n       *\n       * @param {Function}          [options.interpolate] - Interpolation function.\n       *\n       * @returns {import('../').quickToCallback} The quickTo callback.\n       */\n      quickToCB.options = (options) => // eslint-disable-line no-shadow\n      {\n         if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n         {\n            throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' is not an object or function.`);\n         }\n\n         // Set options object for each quickTo callback.\n         if (isObject(options))\n         {\n            for (let cntr = quickToCallbacks.length; --cntr >= 0;) { quickToCallbacks[cntr].options(options); }\n         }\n         else if (typeof options === 'function')\n         {\n            if (isIterable(position))\n            {\n               index = -1;\n               let cntr = 0;\n\n               for (const entry of position)\n               {\n                  index++;\n\n                  const isPosition = this.#isPosition(entry);\n                  const actualPosition = isPosition ? entry : entry.position;\n\n                  if (!this.#isPosition(actualPosition))\n                  {\n                     console.warn(\n                      `AnimationGroupAPI.quickTo.options warning: No Position instance found at index: ${index}.`);\n                     continue;\n                  }\n\n                  callbackOptions.index = index;\n                  callbackOptions.position = position;\n                  callbackOptions.data = isPosition ? void 0 : entry;\n\n                  actualOptions = options(callbackOptions);\n\n                  // Returned data from callback is null / undefined, so skip this position instance.\n                  if (actualOptions === null || actualOptions === void 0) { continue; }\n\n                  if (!isObject(actualOptions))\n                  {\n                     throw new TypeError(\n                      `AnimationGroupAPI.quickTo.options error: options callback function iteration(${\n                       index}) failed to return an object.`);\n                  }\n\n                  quickToCallbacks[cntr++].options(actualOptions);\n               }\n            }\n            else\n            {\n               const isPosition = this.#isPosition(position);\n               const actualPosition = isPosition ? position : position.position;\n\n               if (!this.#isPosition(actualPosition))\n               {\n                  console.warn(`AnimationGroupAPI.quickTo.options warning: No Position instance found.`);\n                  return quickToCB;\n               }\n\n               callbackOptions.index = 0;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : position;\n\n               actualOptions = options(callbackOptions);\n\n               if (!isObject(actualOptions))\n               {\n                  throw new TypeError(\n                   `AnimationGroupAPI.quickTo error: options callback function failed to return an object.`);\n               }\n\n               quickToCallbacks[0].options(actualOptions);\n            }\n         }\n\n         return quickToCB;\n      };\n\n      return quickToCB;\n   }\n}\n\n/**\n * Provides a {@link TJSPositionInitialHelper} implementation to center to element being positioned.\n */\nclass Centered\n{\n   /**\n    * @type {HTMLElement}\n    */\n   #element;\n\n   /**\n    * Provides a manual setting of the element height. As things go `offsetHeight` causes a browser layout and is not\n    * performance oriented. If manually set this height is used instead of `offsetHeight`.\n    *\n    * @type {number}\n    */\n   #height;\n\n   /**\n    * Set from an optional value in the constructor to lock accessors preventing modification.\n    */\n   #lock;\n\n   /**\n    * Provides a manual setting of the element width. As things go `offsetWidth` causes a browser layout and is not\n    * performance oriented. If manually set this width is used instead of `offsetWidth`.\n    *\n    * @type {number}\n    */\n   #width;\n\n   /**\n    * @param {object}      [options] - Initial options.\n    *\n    * @param {HTMLElement} [options.element] - Target element.\n    *\n    * @param {boolean}     [options.lock=false] - Lock parameters from being set.\n    *\n    * @param {number}      [options.width] - Manual width.\n    *\n    * @param {number}      [options.height] - Manual height.\n    */\n   constructor({ element, lock = false, width, height } = {})\n   {\n      this.element = element;\n      this.width = width;\n      this.height = height;\n\n      this.#lock = typeof lock === 'boolean' ? lock : false;\n   }\n\n   /**\n    * @returns {HTMLElement|undefined|null} Target element.\n    */\n   get element() { return this.#element; }\n\n   /**\n    * @returns {number} Get manual height.\n    */\n   get height() { return this.#height; }\n\n   /**\n    * @returns {number} Get manual width.\n    */\n   get width() { return this.#width; }\n\n   /**\n    * @param {HTMLElement|undefined|null} element - Set target element.\n    */\n   set element(element)\n   {\n      if (this.#lock) { return; }\n\n      if (element === void 0  || element === null || element instanceof HTMLElement)\n      {\n         this.#element = element;\n      }\n      else\n      {\n         throw new TypeError(`'element' is not a HTMLElement, undefined, or null.`);\n      }\n   }\n\n   /**\n    * @param {number}   height - Set manual height.\n    */\n   set height(height)\n   {\n      if (this.#lock) { return; }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   /**\n    * @param {number}   width - Set manual width.\n    */\n   set width(width)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n   }\n\n   /**\n    * Set manual width & height.\n    *\n    * @param {number}   width - New manual width.\n    *\n    * @param {number}   height - New manual height.\n    */\n   setDimension(width, height)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   /**\n    * Get the left constraint based on any manual target values or the browser inner width.\n    *\n    * @param {number}   width - Target width.\n    *\n    * @returns {number} Calculated left constraint.\n    */\n   getLeft(width)\n   {\n      // Determine containing bounds from manual values; or any element; lastly the browser width / height.\n      const boundsWidth = this.#width ?? this.#element?.offsetWidth ?? globalThis.innerWidth;\n\n      return (boundsWidth - width) / 2;\n   }\n\n   /**\n    * Get the top constraint based on any manual target values or the browser inner height.\n    *\n    * @param {number}   height - Target height.\n    *\n    * @returns {number} Calculated top constraint.\n    */\n   getTop(height)\n   {\n      const boundsHeight = this.#height ?? this.#element?.offsetHeight ?? globalThis.innerHeight;\n\n      return (boundsHeight - height) / 2;\n   }\n}\n\nclass PositionChangeSet\n{\n   constructor()\n   {\n      this.left = false;\n      this.top = false;\n      this.width = false;\n      this.height = false;\n      this.maxHeight = false;\n      this.maxWidth = false;\n      this.minHeight = false;\n      this.minWidth = false;\n      this.zIndex = false;\n      this.transform = false;\n      this.transformOrigin = false;\n   }\n\n   hasChange()\n   {\n      return this.left || this.top || this.width || this.height || this.maxHeight || this.maxWidth || this.minHeight ||\n       this.minWidth || this.zIndex || this.transform || this.transformOrigin;\n   }\n\n   set(value)\n   {\n      this.left = value;\n      this.top = value;\n      this.width = value;\n      this.height = value;\n      this.maxHeight = value;\n      this.maxWidth = value;\n      this.minHeight = value;\n      this.minWidth = value;\n      this.zIndex = value;\n      this.transform = value;\n      this.transformOrigin = value;\n   }\n}\n\n/**\n * Defines stored positional data.\n */\nclass TJSPositionData\n{\n   constructor({ height = null, left = null, maxHeight = null, maxWidth = null, minHeight = null, minWidth = null,\n    rotateX = null, rotateY = null, rotateZ = null, scale = null, translateX = null, translateY = null,\n     translateZ = null, top = null, transformOrigin = null, width = null, zIndex = null } = {})\n   {\n      /**\n       * @type {number|'auto'|'inherit'|null}\n       */\n      this.height = height;\n\n      /**\n       * @type {number|null}\n       */\n      this.left = left;\n\n      /**\n       * @type {number|null}\n       */\n      this.maxHeight = maxHeight;\n\n      /**\n       * @type {number|null}\n       */\n      this.maxWidth = maxWidth;\n\n      /**\n       * @type {number|null}\n       */\n      this.minHeight = minHeight;\n\n      /**\n       * @type {number|null}\n       */\n      this.minWidth = minWidth;\n\n      /**\n       * @type {number|null}\n       */\n      this.rotateX = rotateX;\n\n      /**\n       * @type {number|null}\n       */\n      this.rotateY = rotateY;\n\n      /**\n       * @type {number|null}\n       */\n      this.rotateZ = rotateZ;\n\n      /**\n       * @type {number|null}\n       */\n      this.scale = scale;\n\n      /**\n       * @type {number|null}\n       */\n      this.top = top;\n\n      /**\n       * @type {string|null}\n       */\n      this.transformOrigin = transformOrigin;\n\n      /**\n       * @type {number|null}\n       */\n      this.translateX = translateX;\n\n      /**\n       * @type {number|null}\n       */\n      this.translateY = translateY;\n\n      /**\n       * @type {number|null}\n       */\n      this.translateZ = translateZ;\n\n      /**\n       * @type {number|'auto'|'inherit'|null}\n       */\n      this.width = width;\n\n      /**\n       * @type {number|null}\n       */\n      this.zIndex = zIndex;\n\n      Object.seal(this);\n   }\n\n   /**\n    * Copies given data to this instance.\n    *\n    * @param {TJSPositionData}   data - Copy from this instance.\n    *\n    * @returns {TJSPositionData} This instance.\n    */\n   copy(data)\n   {\n      this.height = data.height;\n      this.left = data.left;\n      this.maxHeight = data.maxHeight;\n      this.maxWidth = data.maxWidth;\n      this.minHeight = data.minHeight;\n      this.minWidth = data.minWidth;\n      this.rotateX = data.rotateX;\n      this.rotateY = data.rotateY;\n      this.rotateZ = data.rotateZ;\n      this.scale = data.scale;\n      this.top = data.top;\n      this.transformOrigin = data.transformOrigin;\n      this.translateX = data.translateX;\n      this.translateY = data.translateY;\n      this.translateZ = data.translateZ;\n      this.width = data.width;\n      this.zIndex = data.zIndex;\n\n      return this;\n   }\n}\n\nclass PositionStateAPI\n{\n   /** @type {import('./TJSPositionData').TJSPositionData} */\n   #data;\n\n   /**\n    * @type {Map<string, import('./').TJSPositionDataExtended>}\n    */\n   #dataSaved = new Map();\n\n   /** @type {import('./').TJSPosition} */\n   #position;\n\n   /** @type {import('./transform').TJSTransforms} */\n   #transforms;\n\n   constructor(position, data, transforms)\n   {\n      this.#position = position;\n      this.#data = data;\n      this.#transforms = transforms;\n   }\n\n   /**\n    * Returns any stored save state by name.\n    *\n    * @param {object}   options - Options\n    *\n    * @param {string}   options.name - Saved data set name.\n    *\n    * @returns {import('./').TJSPositionDataExtended} The saved data set.\n    */\n   get({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - getSave error: 'name' is not a string.`); }\n\n      return this.#dataSaved.get(name);\n   }\n\n   /**\n    * Returns any associated default data.\n    *\n    * @returns {import('./').TJSPositionDataExtended} Associated default data.\n    */\n   getDefault()\n   {\n      return this.#dataSaved.get('#defaultData');\n   }\n\n   /**\n    * Removes and returns any position state by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Name to remove and retrieve.\n    *\n    * @returns {import('./').TJSPositionDataExtended} Saved position data.\n    */\n   remove({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - remove: 'name' is not a string.`); }\n\n      const data = this.#dataSaved.get(name);\n      this.#dataSaved.delete(name);\n\n      return data;\n   }\n\n   /**\n    * Resets data to default values and invokes set.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.keepZIndex=false] - When true keeps current z-index.\n    *\n    * @param {boolean}  [opts.invokeSet=true] - When true invokes set method.\n    *\n    * @returns {boolean} Operation successful.\n    */\n   reset({ keepZIndex = false, invokeSet = true } = {})\n   {\n      const defaultData = this.#dataSaved.get('#defaultData');\n\n      // Quit early if there is no saved default data.\n      if (!isObject(defaultData)) { return false; }\n\n      // Cancel all animations for TJSPosition if there are currently any scheduled.\n      if (this.#position.animate.isScheduled)\n      {\n         this.#position.animate.cancel();\n      }\n\n      const zIndex = this.#position.zIndex;\n\n      const data = Object.assign({}, defaultData);\n\n      if (keepZIndex) { data.zIndex = zIndex; }\n\n      // Reset the transform data.\n      this.#transforms.reset(data);\n\n      // If current minimized invoke `maximize`.\n      if (this.#position.parent?.reactive?.minimized)\n      {\n         this.#position.parent?.maximize?.({ animate: false, duration: 0 });\n      }\n\n      // Note next clock tick scheduling.\n      if (invokeSet) { setTimeout(() => this.#position.set(data), 0); }\n\n      return true;\n   }\n\n   /**\n    * Restores a saved positional state returning the data. Several optional parameters are available\n    * to control whether the restore action occurs silently (no store / inline styles updates), animates\n-   * to the stored data, or simply sets the stored data. Restoring via {@link AnimationAPI.to}\n    * allows specification of the duration, easing, and interpolate functions along with configuring a Promise to be\n    * returned if awaiting the end of the animation.\n    *\n    * @param {object}            params - Parameters\n    *\n    * @param {string}            params.name - Saved data set name.\n    *\n    * @param {boolean}           [params.remove=false] - Remove data set.\n    *\n    * @param {Iterable<string>}  [params.properties] - Specific properties to set / animate.\n    *\n    * @param {boolean}           [params.silent] - Set position data directly; no store or style updates.\n    *\n    * @param {boolean}           [params.async=false] - If animating return a Promise that resolves with any saved data.\n    *\n    * @param {boolean}           [params.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [params.duration=0.1] - Duration in seconds.\n    *\n    * @param {Function}          [params.ease=linear] - Easing function.\n    *\n    * @param {Function}          [params.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {import('./').TJSPositionDataExtended | Promise<import('./').TJSPositionDataExtended>} Saved position\n    *          data.\n    */\n   restore({ name, remove = false, properties, silent = false, async = false, animateTo = false, duration = 0.1,\n    ease = linear, interpolate = lerp })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - restore error: 'name' is not a string.`); }\n\n      const dataSaved = this.#dataSaved.get(name);\n\n      if (dataSaved)\n      {\n         if (remove) { this.#dataSaved.delete(name); }\n\n         let data = dataSaved;\n\n         if (isIterable(properties))\n         {\n            data = {};\n            for (const property of properties) { data[property] = dataSaved[property]; }\n         }\n\n         // Update data directly with no store or inline style updates.\n         if (silent)\n         {\n            for (const property in data) { this.#data[property] = data[property]; }\n            return dataSaved;\n         }\n         else if (animateTo)  // Animate to saved data.\n         {\n            // Provide special handling to potentially change transform origin as this parameter is not animated.\n            if (data.transformOrigin !== this.#position.transformOrigin)\n            {\n               this.#position.transformOrigin = data.transformOrigin;\n            }\n\n            // Return a Promise with saved data that resolves after animation ends.\n            if (async)\n            {\n               return this.#position.animate.to(data, { duration, ease, interpolate }).finished.then(() => dataSaved);\n            }\n            else  // Animate synchronously.\n            {\n               this.#position.animate.to(data, { duration, ease, interpolate });\n            }\n         }\n         else\n         {\n            // Default options is to set data for an immediate update.\n            this.#position.set(data);\n         }\n      }\n\n      return dataSaved;\n   }\n\n   /**\n    * Saves current position state with the opportunity to add extra data to the saved state.\n    *\n    * @param {object}   opts - Options.\n    *\n    * @param {string}   opts.name - name to index this saved data.\n    *\n    * @param {...*}     [opts.extra] - Extra data to add to saved data.\n    *\n    * @returns {import('./').TJSPositionData} Current position data\n    */\n   save({ name, ...extra })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - save error: 'name' is not a string.`); }\n\n      const data = this.#position.get(extra);\n\n      this.#dataSaved.set(name, data);\n\n      return data;\n   }\n\n   /**\n    * Directly sets a position state.\n    *\n    * @param {object}   opts - Options.\n    *\n    * @param {string}   opts.name - name to index this saved data.\n    *\n    * @param {...*}     [opts.data] - TJSPosition data to set.\n    */\n   set({ name, ...data })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - set error: 'name' is not a string.`); }\n\n      this.#dataSaved.set(name, data);\n   }\n}\n\nclass StyleCache\n{\n   constructor()\n   {\n      /** @type {HTMLElement|undefined} */\n      this.el = void 0;\n\n      /** @type {CSSStyleDeclaration} */\n      this.computed = void 0;\n\n      /** @type {number|undefined} */\n      this.marginLeft = void 0;\n\n      /** @type {number|undefined} */\n      this.marginTop = void 0;\n\n      /** @type {number|undefined} */\n      this.maxHeight = void 0;\n\n      /** @type {number|undefined} */\n      this.maxWidth = void 0;\n\n      /** @type {number|undefined} */\n      this.minHeight = void 0;\n\n      /** @type {number|undefined} */\n      this.minWidth = void 0;\n\n      /** @type {boolean} */\n      this.hasWillChange = false;\n\n      /**\n       * @type {import('./').ResizeObserverData}\n       */\n      this.resizeObserved = {\n         contentHeight: void 0,\n         contentWidth: void 0,\n         offsetHeight: void 0,\n         offsetWidth: void 0\n      };\n\n      /**\n       * Provides a writable store to track offset & content width / height from an associated `resizeObserver` action.\n       *\n       * @type {import('svelte/store').Writable<import('./').ResizeObserverData>}\n       */\n      const storeResizeObserved = writable(this.resizeObserved);\n\n      this.stores = {\n         element: writable(this.el),\n         resizeContentHeight: propertyStore(storeResizeObserved, 'contentHeight'),\n         resizeContentWidth: propertyStore(storeResizeObserved, 'contentWidth'),\n         resizeObserved: storeResizeObserved,\n         resizeOffsetHeight: propertyStore(storeResizeObserved, 'offsetHeight'),\n         resizeOffsetWidth: propertyStore(storeResizeObserved, 'offsetWidth')\n      };\n   }\n\n   /**\n    * Returns the cached offsetHeight from any attached `resizeObserver` action otherwise gets the offsetHeight from\n    * the element directly. The more optimized path is using `resizeObserver` as getting it from the element\n    * directly is more expensive and alters the execution order of an animation frame.\n    *\n    * @returns {number} The element offsetHeight.\n    */\n   get offsetHeight()\n   {\n      if (this.el instanceof HTMLElement)\n      {\n         return this.resizeObserved.offsetHeight !== void 0 ? this.resizeObserved.offsetHeight : this.el.offsetHeight;\n      }\n\n      throw new Error(`StyleCache - get offsetHeight error: no element assigned.`);\n   }\n\n   /**\n    * Returns the cached offsetWidth from any attached `resizeObserver` action otherwise gets the offsetWidth from\n    * the element directly. The more optimized path is using `resizeObserver` as getting it from the element\n    * directly is more expensive and alters the execution order of an animation frame.\n    *\n    * @returns {number} The element offsetHeight.\n    */\n   get offsetWidth()\n   {\n      if (this.el instanceof HTMLElement)\n      {\n         return this.resizeObserved.offsetWidth !== void 0 ? this.resizeObserved.offsetWidth : this.el.offsetWidth;\n      }\n\n      throw new Error(`StyleCache - get offsetWidth error: no element assigned.`);\n   }\n\n   /**\n    * @param {HTMLElement} el -\n    *\n    * @returns {boolean} Does element match cached element.\n    */\n   hasData(el) { return this.el === el; }\n\n   /**\n    * Resets the style cache.\n    */\n   reset()\n   {\n      // Remove will-change inline style from previous element if it is still connected.\n      if (this.el instanceof HTMLElement && this.el.isConnected && !this.hasWillChange)\n      {\n         this.el.style.willChange = null;\n      }\n\n      this.el = void 0;\n      this.computed = void 0;\n      this.marginLeft = void 0;\n      this.marginTop = void 0;\n      this.maxHeight = void 0;\n      this.maxWidth = void 0;\n      this.minHeight = void 0;\n      this.minWidth = void 0;\n\n      this.hasWillChange = false;\n\n      // Silently reset `resizedObserved`; With proper usage the `resizeObserver` action issues an update on removal.\n      this.resizeObserved.contentHeight = void 0;\n      this.resizeObserved.contentWidth = void 0;\n      this.resizeObserved.offsetHeight = void 0;\n      this.resizeObserved.offsetWidth = void 0;\n\n      // Reset the tracked element this TJSPosition instance is modifying.\n      this.stores.element.set(void 0);\n   }\n\n   /**\n    * Updates the style cache with new data from the given element.\n    *\n    * @param {HTMLElement} el - An HTML element.\n    */\n   update(el)\n   {\n      this.el = el;\n\n      this.computed = globalThis.getComputedStyle(el);\n\n      this.marginLeft = StyleParse.pixels(el.style.marginLeft) ?? StyleParse.pixels(this.computed.marginLeft);\n      this.marginTop = StyleParse.pixels(el.style.marginTop) ?? StyleParse.pixels(this.computed.marginTop);\n      this.maxHeight = StyleParse.pixels(el.style.maxHeight) ?? StyleParse.pixels(this.computed.maxHeight);\n      this.maxWidth = StyleParse.pixels(el.style.maxWidth) ?? StyleParse.pixels(this.computed.maxWidth);\n\n      // Note that the computed styles for below will always be 0px / 0 when no style is active.\n      this.minHeight = StyleParse.pixels(el.style.minHeight) ?? StyleParse.pixels(this.computed.minHeight);\n      this.minWidth = StyleParse.pixels(el.style.minWidth) ?? StyleParse.pixels(this.computed.minWidth);\n\n      // Tracks if there already is a will-change property on the inline or computed styles.\n      const willChange = el.style.willChange !== '' ? el.style.willChange : this.computed.willChange;\n\n      this.hasWillChange = willChange !== '' && willChange !== 'auto';\n\n      // Update the tracked element this TJSPosition instance is modifying.\n      this.stores.element.set(el);\n   }\n}\n\n/**\n * Provides the output data for {@link TJSTransforms.getData}.\n */\nclass TJSTransformData\n{\n   constructor()\n   {\n      Object.seal(this);\n   }\n\n   /**\n    * Stores the calculated bounding rectangle.\n    *\n    * @type {DOMRect}\n    */\n   #boundingRect = new DOMRect();\n\n   /**\n    * Stores the individual transformed corner points of the window in screen space clockwise from:\n    * top left -> top right -> bottom right -> bottom left.\n    *\n    * @type {import('#runtime/math/gl-matrix').Vec3[]}\n    */\n   #corners = [Vec3.create(), Vec3.create(), Vec3.create(), Vec3.create()];\n\n   /**\n    * Stores the current gl-matrix Mat4 data.\n    *\n    * @type {import('#runtime/math/gl-matrix').Mat4}\n    */\n   #mat4 = Mat4.create();\n\n   /**\n    * Stores the pre & post origin translations to apply to matrix transforms.\n    *\n    * @type {import('#runtime/math/gl-matrix').Mat4[]}\n    */\n   #originTranslations = [Mat4.create(), Mat4.create()];\n\n   /**\n    * @returns {DOMRect} The bounding rectangle.\n    */\n   get boundingRect() { return this.#boundingRect; }\n\n   /**\n    * @returns {import('#runtime/math/gl-matrix').Vec3[]} The transformed corner points as Vec3 in screen space.\n    */\n   get corners() { return this.#corners; }\n\n   /**\n    * @returns {string} Returns the CSS style string for the transform matrix.\n    */\n   get css() { return `matrix3d(${this.mat4.join(',')})`; }\n\n   /**\n    * @returns {import('#runtime/math/gl-matrix').Mat4} The transform matrix.\n    */\n   get mat4() { return this.#mat4; }\n\n   /**\n    * @returns {import('#runtime/math/gl-matrix').Mat4[]} The pre / post translation matrices for origin translation.\n    */\n   get originTranslations() { return this.#originTranslations; }\n}\n\n/** @type {number[]} */\nconst s_SCALE_VECTOR = [1, 1, 1];\n\n/** @type {number[]} */\nconst s_TRANSLATE_VECTOR = [0, 0, 0];\n\n/** @type {import('#runtime/math/gl-matrix').Mat4} */\nconst s_MAT4_RESULT = Mat4.create();\n\n/** @type {import('#runtime/math/gl-matrix').Mat4} */\nconst s_MAT4_TEMP = Mat4.create();\n\n/** @type {import('#runtime/math/gl-matrix').Vec3} */\nconst s_VEC3_TEMP = Vec3.create();\n\nclass TJSTransforms\n{\n   /**\n    * Stores the transform keys in the order added.\n    *\n    * @type {string[]}\n    */\n   #orderList = [];\n\n   constructor()\n   {\n      this._data = {};\n   }\n\n   /**\n    * @returns {boolean} Whether there are active transforms in local data.\n    */\n   get isActive() { return this.#orderList.length > 0; }\n\n   /**\n    * @returns {number|undefined} Any local rotateX data.\n    */\n   get rotateX() { return this._data.rotateX; }\n\n   /**\n    * @returns {number|undefined} Any local rotateY data.\n    */\n   get rotateY() { return this._data.rotateY; }\n\n   /**\n    * @returns {number|undefined} Any local rotateZ data.\n    */\n   get rotateZ() { return this._data.rotateZ; }\n\n   /**\n    * @returns {number|undefined} Any local rotateZ scale.\n    */\n   get scale() { return this._data.scale; }\n\n   /**\n    * @returns {number|undefined} Any local translateZ data.\n    */\n   get translateX() { return this._data.translateX; }\n\n   /**\n    * @returns {number|undefined} Any local translateZ data.\n    */\n   get translateY() { return this._data.translateY; }\n\n   /**\n    * @returns {number|undefined} Any local translateZ data.\n    */\n   get translateZ() { return this._data.translateZ; }\n\n   /**\n    * Sets the local rotateX data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set rotateX(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.rotateX === void 0) { this.#orderList.push('rotateX'); }\n\n         this._data.rotateX = value;\n      }\n      else\n      {\n         if (this._data.rotateX !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateX');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.rotateX;\n      }\n   }\n\n   /**\n    * Sets the local rotateY data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set rotateY(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.rotateY === void 0) { this.#orderList.push('rotateY'); }\n\n         this._data.rotateY = value;\n      }\n      else\n      {\n         if (this._data.rotateY !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateY');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.rotateY;\n      }\n   }\n\n   /**\n    * Sets the local rotateZ data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set rotateZ(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.rotateZ === void 0) { this.#orderList.push('rotateZ'); }\n\n         this._data.rotateZ = value;\n      }\n\n      else\n      {\n         if (this._data.rotateZ !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateZ');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.rotateZ;\n      }\n   }\n\n   /**\n    * Sets the local scale data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set scale(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.scale === void 0) { this.#orderList.push('scale'); }\n\n         this._data.scale = value;\n      }\n      else\n      {\n         if (this._data.scale !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'scale');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.scale;\n      }\n   }\n\n   /**\n    * Sets the local translateX data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set translateX(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.translateX === void 0) { this.#orderList.push('translateX'); }\n\n         this._data.translateX = value;\n      }\n\n      else\n      {\n         if (this._data.translateX !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'translateX');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.translateX;\n      }\n   }\n\n   /**\n    * Sets the local translateY data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set translateY(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.translateY === void 0) { this.#orderList.push('translateY'); }\n\n         this._data.translateY = value;\n      }\n\n      else\n      {\n         if (this._data.translateY !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'translateY');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.translateY;\n      }\n   }\n\n   /**\n    * Sets the local translateZ data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set translateZ(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.translateZ === void 0) { this.#orderList.push('translateZ'); }\n\n         this._data.translateZ = value;\n      }\n\n      else\n      {\n         if (this._data.translateZ !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'translateZ');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.translateZ;\n      }\n   }\n\n   /**\n    * Returns the matrix3d CSS transform for the given position / transform data.\n    *\n    * @param {object} [data] - Optional position data otherwise use local stored transform data.\n    *\n    * @returns {string} The CSS matrix3d string.\n    */\n   getCSS(data = this._data)\n   {\n      return `matrix3d(${this.getMat4(data, s_MAT4_RESULT).join(',')})`;\n   }\n\n   /**\n    * Returns the matrix3d CSS transform for the given position / transform data.\n    *\n    * @param {object} [data] - Optional position data otherwise use local stored transform data.\n    *\n    * @returns {string} The CSS matrix3d string.\n    */\n   getCSSOrtho(data = this._data)\n   {\n      return `matrix3d(${this.getMat4Ortho(data, s_MAT4_RESULT).join(',')})`;\n   }\n\n   /**\n    * Collects all data including a bounding rect, transform matrix, and points array of the given\n    * {@link TJSPositionData} instance with the applied local transform data.\n    *\n    * @param {import('../').TJSPositionData} position - The position data to process.\n    *\n    * @param {TJSTransformData} [output] - Optional TJSTransformData output instance.\n    *\n    * @param {object} [validationData] - Optional validation data for adjustment parameters.\n    *\n    * @returns {TJSTransformData} The output TJSTransformData instance.\n    */\n   getData(position, output = new TJSTransformData(), validationData = {})\n   {\n      const valWidth = validationData.width ?? 0;\n      const valHeight = validationData.height ?? 0;\n      const valOffsetTop = validationData.offsetTop ?? validationData.marginTop ?? 0;\n      const valOffsetLeft = validationData.offsetLeft ?? validationData.offsetLeft ?? 0;\n\n      position.top += valOffsetTop;\n      position.left += valOffsetLeft;\n\n      const width = Number.isFinite(position.width) ? position.width : valWidth;\n      const height = Number.isFinite(position.height) ? position.height : valHeight;\n\n      const rect = output.corners;\n\n      if (this.hasTransform(position))\n      {\n         rect[0][0] = rect[0][1] = rect[0][2] = 0;\n         rect[1][0] = width;\n         rect[1][1] = rect[1][2] = 0;\n         rect[2][0] = width;\n         rect[2][1] = height;\n         rect[2][2] = 0;\n         rect[3][0] = 0;\n         rect[3][1] = height;\n         rect[3][2] = 0;\n\n         const matrix = this.getMat4(position, output.mat4);\n\n         const translate = s_GET_ORIGIN_TRANSLATION(position.transformOrigin, width, height, output.originTranslations);\n\n         if (transformOriginDefault === position.transformOrigin)\n         {\n            Vec3.transformMat4(rect[0], rect[0], matrix);\n            Vec3.transformMat4(rect[1], rect[1], matrix);\n            Vec3.transformMat4(rect[2], rect[2], matrix);\n            Vec3.transformMat4(rect[3], rect[3], matrix);\n         }\n         else\n         {\n            Vec3.transformMat4(rect[0], rect[0], translate[0]);\n            Vec3.transformMat4(rect[0], rect[0], matrix);\n            Vec3.transformMat4(rect[0], rect[0], translate[1]);\n\n            Vec3.transformMat4(rect[1], rect[1], translate[0]);\n            Vec3.transformMat4(rect[1], rect[1], matrix);\n            Vec3.transformMat4(rect[1], rect[1], translate[1]);\n\n            Vec3.transformMat4(rect[2], rect[2], translate[0]);\n            Vec3.transformMat4(rect[2], rect[2], matrix);\n            Vec3.transformMat4(rect[2], rect[2], translate[1]);\n\n            Vec3.transformMat4(rect[3], rect[3], translate[0]);\n            Vec3.transformMat4(rect[3], rect[3], matrix);\n            Vec3.transformMat4(rect[3], rect[3], translate[1]);\n         }\n\n         rect[0][0] = position.left + rect[0][0];\n         rect[0][1] = position.top + rect[0][1];\n         rect[1][0] = position.left + rect[1][0];\n         rect[1][1] = position.top + rect[1][1];\n         rect[2][0] = position.left + rect[2][0];\n         rect[2][1] = position.top + rect[2][1];\n         rect[3][0] = position.left + rect[3][0];\n         rect[3][1] = position.top + rect[3][1];\n      }\n      else\n      {\n         rect[0][0] = position.left;\n         rect[0][1] = position.top;\n         rect[1][0] = position.left + width;\n         rect[1][1] = position.top;\n         rect[2][0] = position.left + width;\n         rect[2][1] = position.top + height;\n         rect[3][0] = position.left;\n         rect[3][1] = position.top + height;\n\n         Mat4.identity(output.mat4);\n      }\n\n      let maxX = Number.MIN_SAFE_INTEGER;\n      let maxY = Number.MIN_SAFE_INTEGER;\n      let minX = Number.MAX_SAFE_INTEGER;\n      let minY = Number.MAX_SAFE_INTEGER;\n\n      for (let cntr = 4; --cntr >= 0;)\n      {\n         if (rect[cntr][0] > maxX) { maxX = rect[cntr][0]; }\n         if (rect[cntr][0] < minX) { minX = rect[cntr][0]; }\n         if (rect[cntr][1] > maxY) { maxY = rect[cntr][1]; }\n         if (rect[cntr][1] < minY) { minY = rect[cntr][1]; }\n      }\n\n      const boundingRect = output.boundingRect;\n      boundingRect.x = minX;\n      boundingRect.y = minY;\n      boundingRect.width = maxX - minX;\n      boundingRect.height = maxY - minY;\n\n      position.top -= valOffsetTop;\n      position.left -= valOffsetLeft;\n\n      return output;\n   }\n\n   /**\n    * Creates a transform matrix based on local data applied in order it was added.\n    *\n    * If no data object is provided then the source is the local transform data. If another data object is supplied\n    * then the stored local transform order is applied then all remaining transform keys are applied. This allows the\n    * construction of a transform matrix in advance of setting local data and is useful in collision detection.\n    *\n    * @param {object}   [data] - TJSPositionData instance or local transform data.\n    *\n    * @param {import('#runtime/math/gl-matrix').Mat4}  [output] - The output mat4 instance.\n    *\n    * @returns {import('#runtime/math/gl-matrix').Mat4} Transform matrix.\n    */\n   getMat4(data = this._data, output = Mat4.create())\n   {\n      const matrix = Mat4.identity(output);\n\n      // Bitwise tracks applied transform keys from local transform data.\n      let seenKeys = 0;\n\n      const orderList = this.#orderList;\n\n      // First apply ordered transforms from local transform data.\n      for (let cntr = 0; cntr < orderList.length; cntr++)\n      {\n         const key = orderList[cntr];\n\n         switch (key)\n         {\n            case 'rotateX':\n               seenKeys |= transformKeysBitwise.rotateX;\n               Mat4.multiply(matrix, matrix, Mat4.fromXRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'rotateY':\n               seenKeys |= transformKeysBitwise.rotateY;\n               Mat4.multiply(matrix, matrix, Mat4.fromYRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'rotateZ':\n               seenKeys |= transformKeysBitwise.rotateZ;\n               Mat4.multiply(matrix, matrix, Mat4.fromZRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'scale':\n               seenKeys |= transformKeysBitwise.scale;\n               s_SCALE_VECTOR[0] = s_SCALE_VECTOR[1] = data[key];\n               Mat4.multiply(matrix, matrix, Mat4.fromScaling(s_MAT4_TEMP, s_SCALE_VECTOR));\n               break;\n\n            case 'translateX':\n               seenKeys |= transformKeysBitwise.translateX;\n               s_TRANSLATE_VECTOR[0] = data.translateX;\n               s_TRANSLATE_VECTOR[1] = 0;\n               s_TRANSLATE_VECTOR[2] = 0;\n               Mat4.multiply(matrix, matrix, Mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n               break;\n\n            case 'translateY':\n               seenKeys |= transformKeysBitwise.translateY;\n               s_TRANSLATE_VECTOR[0] = 0;\n               s_TRANSLATE_VECTOR[1] = data.translateY;\n               s_TRANSLATE_VECTOR[2] = 0;\n               Mat4.multiply(matrix, matrix, Mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n               break;\n\n            case 'translateZ':\n               seenKeys |= transformKeysBitwise.translateZ;\n               s_TRANSLATE_VECTOR[0] = 0;\n               s_TRANSLATE_VECTOR[1] = 0;\n               s_TRANSLATE_VECTOR[2] = data.translateZ;\n               Mat4.multiply(matrix, matrix, Mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n               break;\n         }\n      }\n\n      // Now apply any new keys not set in local transform data that have not been applied yet.\n      if (data !== this._data)\n      {\n         for (let cntr = 0; cntr < transformKeys.length; cntr++)\n         {\n            const key = transformKeys[cntr];\n\n            // Reject bad / no data or if the key has already been applied.\n            if (data[key] === null || (seenKeys & transformKeysBitwise[key]) > 0) { continue; }\n\n            switch (key)\n            {\n               case 'rotateX':\n                  Mat4.multiply(matrix, matrix, Mat4.fromXRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'rotateY':\n                  Mat4.multiply(matrix, matrix, Mat4.fromYRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'rotateZ':\n                  Mat4.multiply(matrix, matrix, Mat4.fromZRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'scale':\n                  s_SCALE_VECTOR[0] = s_SCALE_VECTOR[1] = data[key];\n                  Mat4.multiply(matrix, matrix, Mat4.fromScaling(s_MAT4_TEMP, s_SCALE_VECTOR));\n                  break;\n\n               case 'translateX':\n                  s_TRANSLATE_VECTOR[0] = data[key];\n                  s_TRANSLATE_VECTOR[1] = 0;\n                  s_TRANSLATE_VECTOR[2] = 0;\n                  Mat4.multiply(matrix, matrix, Mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n                  break;\n\n               case 'translateY':\n                  s_TRANSLATE_VECTOR[0] = 0;\n                  s_TRANSLATE_VECTOR[1] = data[key];\n                  s_TRANSLATE_VECTOR[2] = 0;\n                  Mat4.multiply(matrix, matrix, Mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n                  break;\n\n               case 'translateZ':\n                  s_TRANSLATE_VECTOR[0] = 0;\n                  s_TRANSLATE_VECTOR[1] = 0;\n                  s_TRANSLATE_VECTOR[2] = data[key];\n                  Mat4.multiply(matrix, matrix, Mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n                  break;\n            }\n         }\n      }\n\n      return matrix;\n   }\n\n   /**\n    * Provides an orthographic enhancement to convert left / top positional data to a translate operation.\n    *\n    * This transform matrix takes into account that the remaining operations are , but adds any left / top attributes from passed in data to\n    * translate X / Y.\n    *\n    * If no data object is provided then the source is the local transform data. If another data object is supplied\n    * then the stored local transform order is applied then all remaining transform keys are applied. This allows the\n    * construction of a transform matrix in advance of setting local data and is useful in collision detection.\n    *\n    * @param {object}   [data] - TJSPositionData instance or local transform data.\n    *\n    * @param {import('#runtime/math/gl-matrix').Mat4}  [output] - The output mat4 instance.\n    *\n    * @returns {import('#runtime/math/gl-matrix').Mat4} Transform matrix.\n    */\n   getMat4Ortho(data = this._data, output = Mat4.create())\n   {\n      const matrix = Mat4.identity(output);\n\n      // Attempt to retrieve values from passed in data otherwise default to 0.\n      // Always perform the translation last regardless of order added to local transform data.\n      // Add data.left to translateX and data.top to translateY.\n      s_TRANSLATE_VECTOR[0] = (data.left ?? 0) + (data.translateX ?? 0);\n      s_TRANSLATE_VECTOR[1] = (data.top ?? 0) + (data.translateY ?? 0);\n      s_TRANSLATE_VECTOR[2] = data.translateZ ?? 0;\n      Mat4.multiply(matrix, matrix, Mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n\n      // Scale can also be applied out of order.\n      if (data.scale !== null)\n      {\n         s_SCALE_VECTOR[0] = s_SCALE_VECTOR[1] = data.scale;\n         Mat4.multiply(matrix, matrix, Mat4.fromScaling(s_MAT4_TEMP, s_SCALE_VECTOR));\n      }\n\n      // Early out if there is not rotation data.\n      if (data.rotateX === null && data.rotateY === null && data.rotateZ === null) { return matrix; }\n\n      // Rotation transforms must be applied in the order they are added.\n\n      // Bitwise tracks applied transform keys from local transform data.\n      let seenKeys = 0;\n\n      const orderList = this.#orderList;\n\n      // First apply ordered transforms from local transform data.\n      for (let cntr = 0; cntr < orderList.length; cntr++)\n      {\n         const key = orderList[cntr];\n\n         switch (key)\n         {\n            case 'rotateX':\n               seenKeys |= transformKeysBitwise.rotateX;\n               Mat4.multiply(matrix, matrix, Mat4.fromXRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'rotateY':\n               seenKeys |= transformKeysBitwise.rotateY;\n               Mat4.multiply(matrix, matrix, Mat4.fromYRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'rotateZ':\n               seenKeys |= transformKeysBitwise.rotateZ;\n               Mat4.multiply(matrix, matrix, Mat4.fromZRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n         }\n      }\n\n      // Now apply any new keys not set in local transform data that have not been applied yet.\n      if (data !== this._data)\n      {\n         for (let cntr = 0; cntr < transformKeys.length; cntr++)\n         {\n            const key = transformKeys[cntr];\n\n            // Reject bad / no data or if the key has already been applied.\n            if (data[key] === null || (seenKeys & transformKeysBitwise[key]) > 0) { continue; }\n\n            switch (key)\n            {\n               case 'rotateX':\n                  Mat4.multiply(matrix, matrix, Mat4.fromXRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'rotateY':\n                  Mat4.multiply(matrix, matrix, Mat4.fromYRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'rotateZ':\n                  Mat4.multiply(matrix, matrix, Mat4.fromZRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n            }\n         }\n      }\n\n      return matrix;\n   }\n\n   /**\n    * Tests an object if it contains transform keys and the values are finite numbers.\n    *\n    * @param {object} data - An object to test for transform data.\n    *\n    * @returns {boolean} Whether the given TJSPositionData has transforms.\n    */\n   hasTransform(data)\n   {\n      for (const key of transformKeys)\n      {\n         if (Number.isFinite(data[key])) { return true; }\n      }\n\n      return false;\n   }\n\n   /**\n    * Resets internal data from the given object containing valid transform keys.\n    *\n    * @param {object}   data - An object with transform data.\n    */\n   reset(data)\n   {\n      for (const key in data)\n      {\n         if (transformKeys.includes(key))\n         {\n            if (Number.isFinite(data[key]))\n            {\n               this._data[key] = data[key];\n            }\n            else\n            {\n               const index = this.#orderList.findIndex((entry) => entry === key);\n               if (index >= 0) { this.#orderList.splice(index, 1); }\n\n               delete this._data[key];\n            }\n         }\n      }\n   }\n}\n\n/**\n * Returns the translations necessary to translate a matrix operation based on the `transformOrigin` parameter of the\n * given position instance. The first entry / index 0 is the pre-translation and last entry / index 1 is the post-\n * translation.\n *\n * This method is used internally, but may be useful if you need the origin translation matrices to transform\n * bespoke points based on any `transformOrigin` set in {@link TJSPositionData}.\n *\n * @param {string}   transformOrigin - The transform origin attribute from TJSPositionData.\n *\n * @param {number}   width - The TJSPositionData width or validation data width when 'auto'.\n *\n * @param {number}   height - The TJSPositionData height or validation data height when 'auto'.\n *\n * @param {import('#runtime/math/gl-matrix').Mat4[]}   output - Output Mat4 array.\n *\n * @returns {import('#runtime/math/gl-matrix').Mat4[]} Output Mat4 array.\n */\nfunction s_GET_ORIGIN_TRANSLATION(transformOrigin, width, height, output)\n{\n   const vector = s_VEC3_TEMP;\n\n   switch (transformOrigin)\n   {\n      case 'top left':\n         vector[0] = vector[1] = 0;\n         Mat4.fromTranslation(output[0], vector);\n         Mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'top center':\n         vector[0] = -width * 0.5;\n         vector[1] = 0;\n         Mat4.fromTranslation(output[0], vector);\n         vector[0] = width * 0.5;\n         Mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'top right':\n         vector[0] = -width;\n         vector[1] = 0;\n         Mat4.fromTranslation(output[0], vector);\n         vector[0] = width;\n         Mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'center left':\n         vector[0] = 0;\n         vector[1] = -height * 0.5;\n         Mat4.fromTranslation(output[0], vector);\n         vector[1] = height * 0.5;\n         Mat4.fromTranslation(output[1], vector);\n         break;\n\n      // By default, null / no transform is 'center'.\n      case null:\n      case 'center':\n         vector[0] = -width * 0.5;\n         vector[1] = -height * 0.5;\n         Mat4.fromTranslation(output[0], vector);\n         vector[0] = width * 0.5;\n         vector[1] = height * 0.5;\n         Mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'center right':\n         vector[0] = -width;\n         vector[1] = -height * 0.5;\n         Mat4.fromTranslation(output[0], vector);\n         vector[0] = width;\n         vector[1] = height * 0.5;\n         Mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'bottom left':\n         vector[0] = 0;\n         vector[1] = -height;\n         Mat4.fromTranslation(output[0], vector);\n         vector[1] = height;\n         Mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'bottom center':\n         vector[0] = -width * 0.5;\n         vector[1] = -height;\n         Mat4.fromTranslation(output[0], vector);\n         vector[0] = width * 0.5;\n         vector[1] = height;\n         Mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'bottom right':\n         vector[0] = -width;\n         vector[1] = -height;\n         Mat4.fromTranslation(output[0], vector);\n         vector[0] = width;\n         vector[1] = height;\n         Mat4.fromTranslation(output[1], vector);\n         break;\n\n      // No valid transform origin parameter; set identity.\n      default:\n         Mat4.identity(output[0]);\n         Mat4.identity(output[1]);\n         break;\n   }\n\n   return output;\n}\n\n/**\n * Provides the storage and sequencing of managed position validators. Each validator added may be a bespoke function or\n * a {@link ValidatorData} object containing an `id`, `validator`, and `weight` attributes; `validator` is\n * the only required attribute.\n *\n * The `id` attribute can be anything that creates a unique ID for the validator; recommended strings or numbers. This\n * allows validators to be removed by ID easily.\n *\n * The `weight` attribute is a number between 0 and 1 inclusive that allows validators to be added in a\n * predictable order which is especially handy if they are manipulated at runtime. A lower weighted validator always\n * runs before a higher weighted validator. If no weight is specified the default of '1' is assigned and it is appended\n * to the end of the validators list.\n *\n * This class forms the public API which is accessible from the `.validators` getter in the main TJSPosition instance.\n * ```\n * const position = new TJSPosition(<TJSPositionData>);\n * position.validators.add(...);\n * position.validators.clear();\n * position.validators.length;\n * position.validators.remove(...);\n * position.validators.removeBy(...);\n * position.validators.removeById(...);\n * ```\n */\nclass AdapterValidators\n{\n   /** @type {boolean} */\n   #enabled = true;\n\n   /**\n    * @type {import('../').ValidatorData[]}\n    */\n   #validatorData;\n\n   #mapUnsubscribe = new Map();\n\n   /**\n    * @returns {[AdapterValidators, import('../').ValidatorData[]]} Returns this and internal storage for validator\n    *          adapter.\n    */\n   constructor()\n   {\n      this.#validatorData = [];\n\n      Object.seal(this);\n\n      return [this, this.#validatorData];\n   }\n\n   /**\n    * @returns {boolean} Returns the enabled state.s\n    */\n   get enabled() { return this.#enabled; }\n\n   /**\n    * @returns {number} Returns the length of the validators array.\n    */\n   get length() { return this.#validatorData.length; }\n\n   /**\n    * @param {boolean}  enabled - Sets enabled state.\n    */\n   set enabled(enabled)\n   {\n      if (typeof enabled !== 'boolean') { throw new TypeError(`'enabled' is not a boolean.`); }\n\n      this.#enabled = enabled;\n   }\n\n   /**\n    * Provides an iterator for validators.\n    *\n    * @yields {import('../').ValidatorData}\n    */\n   *[Symbol.iterator]()\n   {\n      if (this.#validatorData.length === 0) { return; }\n\n      for (const entry of this.#validatorData)\n      {\n         yield { ...entry };\n      }\n   }\n\n   /**\n    * @param {...(import('../').ValidatorFn | import('../').ValidatorData)}   validators -\n    */\n   add(...validators)\n   {\n      /**\n       * Tracks the number of validators added that have subscriber functionality.\n       *\n       * @type {number}\n       */\n      // let subscribeCount = 0;  // TODO: Currently unused\n\n      for (const validator of validators)\n      {\n         const validatorType = typeof validator;\n\n         if ((validatorType !== 'function' && validatorType !== 'object') || validator === null)\n         {\n            throw new TypeError(`AdapterValidator error: 'validator' is not a function or object.`);\n         }\n\n         let data = void 0;\n         let subscribeFn = void 0;\n\n         switch (validatorType)\n         {\n            case 'function':\n               data = {\n                  id: void 0,\n                  validator,\n                  weight: 1\n               };\n\n               subscribeFn = validator.subscribe;\n               break;\n\n            case 'object':\n               if (typeof validator.validator !== 'function')\n               {\n                  throw new TypeError(`AdapterValidator error: 'validator' attribute is not a function.`);\n               }\n\n               if (validator.weight !== void 0 && typeof validator.weight !== 'number' ||\n                (validator.weight < 0 || validator.weight > 1))\n               {\n                  throw new TypeError(\n                   `AdapterValidator error: 'weight' attribute is not a number between '0 - 1' inclusive.`);\n               }\n\n               data = {\n                  id: validator.id !== void 0 ? validator.id : void 0,\n                  validator: validator.validator.bind(validator),\n                  weight: validator.weight || 1,\n                  instance: validator\n               };\n\n               subscribeFn = validator.validator.subscribe ?? validator.subscribe;\n               break;\n         }\n\n         // Find the index to insert where data.weight is less than existing values weight.\n         const index = this.#validatorData.findIndex((value) =>\n         {\n            return data.weight < value.weight;\n         });\n\n         // If an index was found insert at that location.\n         if (index >= 0)\n         {\n            this.#validatorData.splice(index, 0, data);\n         }\n         else // push to end of validators.\n         {\n            this.#validatorData.push(data);\n         }\n\n         if (typeof subscribeFn === 'function')\n         {\n            // TODO: consider how to handle validator updates.\n            const unsubscribe = subscribeFn();\n\n            // Ensure that unsubscribe is a function.\n            if (typeof unsubscribe !== 'function')\n            {\n               throw new TypeError(\n                'AdapterValidator error: Filter has subscribe function, but no unsubscribe function is returned.');\n            }\n\n            // Ensure that the same validator is not subscribed to multiple times.\n            if (this.#mapUnsubscribe.has(data.validator))\n            {\n               throw new Error(\n                'AdapterValidator error: Filter added already has an unsubscribe function registered.');\n            }\n\n            this.#mapUnsubscribe.set(data.validator, unsubscribe);\n            // subscribeCount++;  // TODO: Currently unused\n         }\n      }\n\n      // Filters with subscriber functionality are assumed to immediately invoke the `subscribe` callback. If the\n      // subscriber count is less than the amount of validators added then automatically trigger an index update\n      // manually.\n      // TODO: handle validator updates.\n      // if (subscribeCount < validators.length) { this.#indexUpdate(); }\n   }\n\n   clear()\n   {\n      this.#validatorData.length = 0;\n\n      // Unsubscribe from all validators with subscription support.\n      for (const unsubscribe of this.#mapUnsubscribe.values())\n      {\n         unsubscribe();\n      }\n\n      this.#mapUnsubscribe.clear();\n\n      // TODO: handle validator updates.\n      // this.#indexUpdate();\n   }\n\n   /**\n    * @param {...(import('../').ValidatorFn | import('../').ValidatorData)}   validators -\n    */\n   remove(...validators)\n   {\n      const length = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      for (const data of validators)\n      {\n         // Handle the case that the validator may either be a function or a validator entry / object.\n         const actualValidator = typeof data === 'function' ? data : isObject(data) ? data.validator : void 0;\n\n         if (!actualValidator) { continue; }\n\n         for (let cntr = this.#validatorData.length; --cntr >= 0;)\n         {\n            if (this.#validatorData[cntr].validator === actualValidator)\n            {\n               this.#validatorData.splice(cntr, 1);\n\n               // Invoke any unsubscribe function for given validator then remove from tracking.\n               let unsubscribe = void 0;\n               if (typeof (unsubscribe = this.#mapUnsubscribe.get(actualValidator)) === 'function')\n               {\n                  unsubscribe();\n                  this.#mapUnsubscribe.delete(actualValidator);\n               }\n            }\n         }\n      }\n\n      // Update the index a validator was removed.\n      // TODO: handle validator updates.\n      // if (length !== this.#validatorData.length) { this.#indexUpdate(); }\n   }\n\n   /**\n    * Remove validators by the provided callback. The callback takes 3 parameters: `id`, `validator`, and `weight`.\n    * Any truthy value returned will remove that validator.\n    *\n    * @param {function(*, import('../').ValidatorFn, number): boolean} callback - Callback function to evaluate each\n    *        validator entry.\n    */\n   removeBy(callback)\n   {\n      const length = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      if (typeof callback !== 'function')\n      {\n         throw new TypeError(`AdapterValidator error: 'callback' is not a function.`);\n      }\n\n      this.#validatorData = this.#validatorData.filter((data) =>\n      {\n         const remove = callback.call(callback, { ...data });\n\n         if (remove)\n         {\n            let unsubscribe;\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.validator)) === 'function')\n            {\n               unsubscribe();\n               this.#mapUnsubscribe.delete(data.validator);\n            }\n         }\n\n         // Reverse remove boolean to properly validator / remove this validator.\n         return !remove;\n      });\n\n      // TODO: handle validator updates.\n      // if (length !== this.#validatorData.length) { this.#indexUpdate(); }\n   }\n\n   removeById(...ids)\n   {\n      const length = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      this.#validatorData = this.#validatorData.filter((data) =>\n      {\n         let remove = false;\n\n         for (const id of ids) { remove |= data.id === id; }\n\n         // If not keeping invoke any unsubscribe function for given validator then remove from tracking.\n         if (remove)\n         {\n            let unsubscribe;\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.validator)) === 'function')\n            {\n               unsubscribe();\n               this.#mapUnsubscribe.delete(data.validator);\n            }\n         }\n\n         return !remove; // Swap here to actually remove the item via array validator method.\n      });\n\n      // TODO: handle validator updates.\n      // if (length !== this.#validatorData.length) { this.#indexUpdate(); }\n   }\n}\n\nclass BasicBounds\n{\n   /**\n    * When true constrains the min / max width or height to element.\n    *\n    * @type {boolean}\n    */\n   #constrain;\n\n   /**\n    * @type {HTMLElement}\n    */\n   #element;\n\n   /**\n    * When true the validator is active.\n    *\n    * @type {boolean}\n    */\n   #enabled;\n\n   /**\n    * Provides a manual setting of the element height. As things go `offsetHeight` causes a browser layout and is not\n    * performance oriented. If manually set this height is used instead of `offsetHeight`.\n    *\n    * @type {number}\n    */\n   #height;\n\n   /**\n    * Set from an optional value in the constructor to lock accessors preventing modification.\n    */\n   #lock;\n\n   /**\n    * Provides a manual setting of the element width. As things go `offsetWidth` causes a browser layout and is not\n    * performance oriented. If manually set this width is used instead of `offsetWidth`.\n    *\n    * @type {number}\n    */\n   #width;\n\n   constructor({ constrain = true, element, enabled = true, lock = false, width, height } = {})\n   {\n      this.element = element;\n      this.constrain = constrain;\n      this.enabled = enabled;\n      this.width = width;\n      this.height = height;\n\n      this.#lock = typeof lock === 'boolean' ? lock : false;\n   }\n\n   get constrain() { return this.#constrain; }\n\n   get element() { return this.#element; }\n\n   get enabled() { return this.#enabled; }\n\n   get height() { return this.#height; }\n\n   get width() { return this.#width; }\n\n   set constrain(constrain)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof constrain !== 'boolean') { throw new TypeError(`'constrain' is not a boolean.`); }\n\n      this.#constrain = constrain;\n   }\n\n   set element(element)\n   {\n      if (this.#lock) { return; }\n\n      if (element === void 0  || element === null || element instanceof HTMLElement)\n      {\n         this.#element = element;\n      }\n      else\n      {\n         throw new TypeError(`'element' is not a HTMLElement, undefined, or null.`);\n      }\n   }\n\n   set enabled(enabled)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof enabled !== 'boolean') { throw new TypeError(`'enabled' is not a boolean.`); }\n\n      this.#enabled = enabled;\n   }\n\n   set height(height)\n   {\n      if (this.#lock) { return; }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   set width(width)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n   }\n\n   setDimension(width, height)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   /**\n    * Provides a validator that respects transforms in positional data constraining the position to within the target\n    * elements bounds.\n    *\n    * @param {import('../').ValidationData}   valData - The associated validation data for position updates.\n    *\n    * @returns {import('../').TJSPositionData} Potentially adjusted position data.\n    */\n   validator(valData)\n   {\n      // Early out if element is undefined or local enabled state is false.\n      if (!this.#enabled) { return valData.position; }\n\n      // Determine containing bounds from manual values; or any element; lastly the browser width / height.\n      const boundsWidth = this.#width ?? this.#element?.offsetWidth ?? globalThis.innerWidth;\n      const boundsHeight = this.#height ?? this.#element?.offsetHeight ?? globalThis.innerHeight;\n\n      if (typeof valData.position.width === 'number')\n      {\n         const maxW = valData.maxWidth ?? (this.#constrain ? boundsWidth : Number.MAX_SAFE_INTEGER);\n         valData.position.width = valData.width = clamp(valData.position.width, valData.minWidth, maxW);\n\n         if ((valData.width + valData.position.left + valData.marginLeft) > boundsWidth)\n         {\n            valData.position.left = boundsWidth - valData.width - valData.marginLeft;\n         }\n      }\n\n      if (typeof valData.position.height === 'number')\n      {\n         const maxH = valData.maxHeight ?? (this.#constrain ? boundsHeight : Number.MAX_SAFE_INTEGER);\n         valData.position.height = valData.height = clamp(valData.position.height, valData.minHeight, maxH);\n\n         if ((valData.height + valData.position.top + valData.marginTop) > boundsHeight)\n         {\n            valData.position.top = boundsHeight - valData.height - valData.marginTop;\n         }\n      }\n\n      const maxL = Math.max(boundsWidth - valData.width - valData.marginLeft, 0);\n      valData.position.left = Math.round(clamp(valData.position.left, 0, maxL));\n\n      const maxT = Math.max(boundsHeight - valData.height - valData.marginTop, 0);\n      valData.position.top = Math.round(clamp(valData.position.top, 0, maxT));\n\n      return valData.position;\n   }\n}\n\nconst s_TRANSFORM_DATA = new TJSTransformData();\n\nclass TransformBounds\n{\n   /**\n    * When true constrains the min / max width or height to element.\n    *\n    * @type {boolean}\n    */\n   #constrain;\n\n   /**\n    * @type {HTMLElement}\n    */\n   #element;\n\n   /**\n    * When true the validator is active.\n    *\n    * @type {boolean}\n    */\n   #enabled;\n\n   /**\n    * Provides a manual setting of the element height. As things go `offsetHeight` causes a browser layout and is not\n    * performance oriented. If manually set this height is used instead of `offsetHeight`.\n    *\n    * @type {number}\n    */\n   #height;\n\n   /**\n    * Set from an optional value in the constructor to lock accessors preventing modification.\n    */\n   #lock;\n\n   /**\n    * Provides a manual setting of the element width. As things go `offsetWidth` causes a browser layout and is not\n    * performance oriented. If manually set this width is used instead of `offsetWidth`.\n    *\n    * @type {number}\n    */\n   #width;\n\n   constructor({ constrain = true, element, enabled = true, lock = false, width, height } = {})\n   {\n      this.element = element;\n      this.constrain = constrain;\n      this.enabled = enabled;\n      this.width = width;\n      this.height = height;\n\n      this.#lock = typeof lock === 'boolean' ? lock : false;\n   }\n\n   get constrain() { return this.#constrain; }\n\n   get element() { return this.#element; }\n\n   get enabled() { return this.#enabled; }\n\n   get height() { return this.#height; }\n\n   get width() { return this.#width; }\n\n   set constrain(constrain)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof constrain !== 'boolean') { throw new TypeError(`'constrain' is not a boolean.`); }\n\n      this.#constrain = constrain;\n   }\n\n   set element(element)\n   {\n      if (this.#lock) { return; }\n\n      if (element === void 0 || element === null || element instanceof HTMLElement)\n      {\n         this.#element = element;\n      }\n      else\n      {\n         throw new TypeError(`'element' is not a HTMLElement, undefined, or null.`);\n      }\n   }\n\n   set enabled(enabled)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof enabled !== 'boolean') { throw new TypeError(`'enabled' is not a boolean.`); }\n\n      this.#enabled = enabled;\n   }\n\n   set height(height)\n   {\n      if (this.#lock) { return; }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   set width(width)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n   }\n\n   setDimension(width, height)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   /**\n    * Provides a validator that respects transforms in positional data constraining the position to within the target\n    * elements bounds.\n    *\n    * @param {import('../').ValidationData}   valData - The associated validation data for position updates.\n    *\n    * @returns {import('../').TJSPositionData} Potentially adjusted position data.\n    */\n   validator(valData)\n   {\n      // Early out if element is undefined or local enabled state is false.\n      if (!this.#enabled) { return valData.position; }\n\n      // Determine containing bounds from manual values; or any element; lastly the browser width / height.\n      const boundsWidth = this.#width ?? this.#element?.offsetWidth ?? globalThis.innerWidth;\n      const boundsHeight = this.#height ?? this.#element?.offsetHeight ?? globalThis.innerHeight;\n\n      // Ensure min / max width constraints when position width is a number; not 'auto' or 'inherit'. If constrain is\n      // true cap width bounds.\n      if (typeof valData.position.width === 'number')\n      {\n         const maxW = valData.maxWidth ?? (this.#constrain ? boundsWidth : Number.MAX_SAFE_INTEGER);\n         valData.position.width = clamp(valData.width, valData.minWidth, maxW);\n      }\n\n      // Ensure min / max height constraints when position height is a number; not 'auto' or 'inherit'. If constrain\n      // is true cap height bounds.\n      if (typeof valData.position.height === 'number')\n      {\n         const maxH = valData.maxHeight ?? (this.#constrain ? boundsHeight : Number.MAX_SAFE_INTEGER);\n         valData.position.height = clamp(valData.height, valData.minHeight, maxH);\n      }\n\n      // Get transform data. First set constraints including any margin top / left as offsets and width / height. Used\n      // when position width / height is 'auto'.\n      const data = valData.transforms.getData(valData.position, s_TRANSFORM_DATA, valData);\n\n      // Check the bounding rectangle against browser height / width. Adjust position based on how far the overlap of\n      // the bounding rect is outside the bounds height / width. The order below matters as the constraints are top /\n      // left oriented, so perform those checks last.\n\n      const initialX = data.boundingRect.x;\n      const initialY = data.boundingRect.y;\n\n      if (data.boundingRect.bottom + valData.marginTop > boundsHeight)\n      {\n         data.boundingRect.y += boundsHeight - data.boundingRect.bottom - valData.marginTop;\n      }\n\n      if (data.boundingRect.right + valData.marginLeft > boundsWidth)\n      {\n         data.boundingRect.x += boundsWidth - data.boundingRect.right - valData.marginLeft;\n      }\n\n      if (data.boundingRect.top - valData.marginTop < 0)\n      {\n         data.boundingRect.y += Math.abs(data.boundingRect.top - valData.marginTop);\n      }\n\n      if (data.boundingRect.left - valData.marginLeft < 0)\n      {\n         data.boundingRect.x += Math.abs(data.boundingRect.left - valData.marginLeft);\n      }\n\n      valData.position.left -= initialX - data.boundingRect.x;\n      valData.position.top -= initialY - data.boundingRect.y;\n\n      return valData.position;\n   }\n}\n\nclass UpdateElementData\n{\n   constructor()\n   {\n      /**\n       * Stores the private data from TJSPosition.\n       *\n       * @type {TJSPositionData}\n       */\n      this.data = void 0;\n\n      /**\n       * Provides a copy of local data sent to subscribers.\n       *\n       * @type {TJSPositionData}\n       */\n      this.dataSubscribers = new TJSPositionData();\n\n      /**\n       * Stores the current dimension data used for the readable `dimension` store.\n       *\n       * @type {{width: number | 'auto', height: number | 'auto'}}\n       */\n      this.dimensionData = { width: 0, height: 0 };\n\n      /**\n       * @type {import('../PositionChangeSet').PositionChangeSet}\n       */\n      this.changeSet = void 0;\n\n      /**\n       * @type {import('../').TJSPositionOptions}\n       */\n      this.options = void 0;\n\n      /**\n       * Stores if this TJSPosition / update data is queued for update.\n       *\n       * @type {boolean}\n       */\n      this.queued = false;\n\n      /**\n       * @type {import('../StyleCache').StyleCache}\n       */\n      this.styleCache = void 0;\n\n      /**\n       * @type {import('../transform').TJSTransforms}\n       */\n      this.transforms = void 0;\n\n      /**\n       * Stores the current transform data used for the readable `transform` store. It is only active when there are\n       * subscribers to the store or calculateTransform options is true.\n       *\n       * @type {TJSTransformData}\n       */\n      this.transformData = new TJSTransformData();\n\n      /**\n       * @type {(function(TJSPositionData): void)[]}\n       */\n      this.subscriptions = void 0;\n\n      /**\n       * @type {import('svelte/store').Writable<{width: (number|\"auto\"), height: (number|\"auto\")}>}\n       */\n      this.storeDimension = writable(this.dimensionData);\n\n      // When there are subscribers set option to calculate transform updates; set to false when no subscribers.\n\n      /**\n       * @type {import('svelte/store').Writable<TJSTransformData>}\n       */\n      this.storeTransform = writable(this.transformData, () =>\n      {\n         this.options.transformSubscribed = true;\n         return () => this.options.transformSubscribed = false;\n      });\n\n      /**\n       * Stores the queued state for update element processing.\n       *\n       * @type {boolean}\n       */\n      this.queued = false;\n\n      // Seal data backing readable stores.\n      Object.seal(this.dimensionData);\n   }\n}\n\n/**\n * Decouples updates to any parent target HTMLElement inline styles. Invoke\n * {@link TJSPosition.elementUpdated} to await on the returned promise that is resolved with the current\n * render time via `nextAnimationFrame` / `requestAnimationFrame`. This allows the underlying data model to be updated\n * immediately while updates to the element are in sync with the browser and potentially in the future be further\n * throttled.\n *\n * @param {HTMLElement} el - The target HTMLElement.\n */\nclass UpdateElementManager\n{\n   static list = [];\n   static listCntr = 0;\n\n   static updatePromise;\n\n   static get promise() { return this.updatePromise; }\n\n   /**\n    * Potentially adds the given element and internal updateData instance to the list.\n    *\n    * @param {HTMLElement}       el - An HTMLElement instance.\n    *\n    * @param {import('./UpdateElementData').UpdateElementData} updateData - An UpdateElementData instance.\n    *\n    * @returns {Promise<number>} The unified next frame update promise. Returns `currentTime`.\n    */\n   static add(el, updateData)\n   {\n      if (this.listCntr < this.list.length)\n      {\n         const entry = this.list[this.listCntr];\n         entry[0] = el;\n         entry[1] = updateData;\n      }\n      else\n      {\n         this.list.push([el, updateData]);\n      }\n\n      this.listCntr++;\n      updateData.queued = true;\n\n      if (!this.updatePromise) { this.updatePromise = this.wait(); }\n\n      return this.updatePromise;\n   }\n\n   /**\n    * Await on `nextAnimationFrame` and iterate over list map invoking callback functions.\n    *\n    * @returns {Promise<number>} The next frame Promise / currentTime from nextAnimationFrame.\n    */\n   static async wait()\n   {\n      // Await the next animation frame. In the future this can be extended to multiple frames to divide update rate.\n      const currentTime = await nextAnimationFrame();\n\n      this.updatePromise = void 0;\n\n      for (let cntr = this.listCntr; --cntr >= 0;)\n      {\n         // Obtain data for entry.\n         const entry = this.list[cntr];\n         const el = entry[0];\n         const updateData = entry[1];\n\n         // Clear entry data.\n         entry[0] = void 0;\n         entry[1] = void 0;\n\n         // Reset queued state.\n         updateData.queued = false;\n\n         // Early out if the element is no longer connected to the DOM / shadow root.\n         // if (!el.isConnected || !updateData.changeSet.hasChange()) { continue; }\n         if (!el.isConnected) { continue; }\n\n         if (updateData.options.ortho)\n         {\n            s_UPDATE_ELEMENT_ORTHO(el, updateData);\n         }\n         else\n         {\n            s_UPDATE_ELEMENT(el, updateData);\n         }\n\n         // If calculate transform options is enabled then update the transform data and set the readable store.\n         if (updateData.options.calculateTransform || updateData.options.transformSubscribed)\n         {\n            s_UPDATE_TRANSFORM(el, updateData);\n         }\n\n         // Update all subscribers with changed data.\n         this.updateSubscribers(updateData);\n      }\n\n      this.listCntr = 0;\n\n      return currentTime;\n   }\n\n   /**\n    * Potentially immediately updates the given element.\n    *\n    * @param {HTMLElement}       el - An HTMLElement instance.\n    *\n    * @param {import('./UpdateElementData').UpdateElementData} updateData - An UpdateElementData instance.\n    */\n   static immediate(el, updateData)\n   {\n      // Early out if the element is no longer connected to the DOM / shadow root.\n      // if (!el.isConnected || !updateData.changeSet.hasChange()) { continue; }\n      if (!el.isConnected) { return; }\n\n      if (updateData.options.ortho)\n      {\n         s_UPDATE_ELEMENT_ORTHO(el, updateData);\n      }\n      else\n      {\n         s_UPDATE_ELEMENT(el, updateData);\n      }\n\n      // If calculate transform options is enabled then update the transform data and set the readable store.\n      if (updateData.options.calculateTransform || updateData.options.transformSubscribed)\n      {\n         s_UPDATE_TRANSFORM(el, updateData);\n      }\n\n      // Update all subscribers with changed data.\n      this.updateSubscribers(updateData);\n   }\n\n   /**\n    * @param {import('./UpdateElementData').UpdateElementData} updateData - Data change set.\n    */\n   static updateSubscribers(updateData)\n   {\n      const data = updateData.data;\n      const changeSet = updateData.changeSet;\n\n      if (!changeSet.hasChange()) { return; }\n\n      // Make a copy of the data.\n      const output = updateData.dataSubscribers.copy(data);\n\n      const subscriptions = updateData.subscriptions;\n\n      // Early out if there are no subscribers.\n      if (subscriptions.length > 0)\n      {\n         for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](output); }\n      }\n\n      // Update dimension data if width / height has changed.\n      if (changeSet.width || changeSet.height)\n      {\n         updateData.dimensionData.width = data.width;\n         updateData.dimensionData.height = data.height;\n         updateData.storeDimension.set(updateData.dimensionData);\n      }\n\n      changeSet.set(false);\n   }\n}\n\n/**\n * Decouples updates to any parent target HTMLElement inline styles. Invoke\n * {@link TJSPosition.elementUpdated} to await on the returned promise that is resolved with the current\n * render time via `nextAnimationFrame` / `requestAnimationFrame`. This allows the underlying data model to be updated\n * immediately while updates to the element are in sync with the browser and potentially in the future be further\n * throttled.\n *\n * @param {HTMLElement} el - The target HTMLElement.\n *\n * @param {import('./UpdateElementData').UpdateElementData} updateData - Update data.\n */\nfunction s_UPDATE_ELEMENT(el, updateData)\n{\n   const changeSet = updateData.changeSet;\n   const data = updateData.data;\n\n   if (changeSet.left)\n   {\n      el.style.left = `${data.left}px`;\n   }\n\n   if (changeSet.top)\n   {\n      el.style.top = `${data.top}px`;\n   }\n\n   if (changeSet.zIndex)\n   {\n      el.style.zIndex = typeof data.zIndex === 'number' ? `${data.zIndex}` : null;\n   }\n\n   if (changeSet.width)\n   {\n      el.style.width = typeof data.width === 'number' ? `${data.width}px` : data.width;\n   }\n\n   if (changeSet.height)\n   {\n      el.style.height = typeof data.height === 'number' ? `${data.height}px` : data.height;\n   }\n\n   if (changeSet.transformOrigin)\n   {\n      el.style.transformOrigin = data.transformOrigin;\n   }\n\n   // Update all transforms in order added to transforms object.\n   if (changeSet.transform)\n   {\n      el.style.transform = updateData.transforms.isActive ? updateData.transforms.getCSS() : null;\n   }\n}\n\n/**\n * Decouples updates to any parent target HTMLElement inline styles. Invoke\n * {@link TJSPosition.elementUpdated} to await on the returned promise that is resolved with the current\n * render time via `nextAnimationFrame` / `requestAnimationFrame`. This allows the underlying data model to be updated\n * immediately while updates to the element are in sync with the browser and potentially in the future be further\n * throttled.\n *\n * @param {HTMLElement} el - The target HTMLElement.\n *\n * @param {import('./UpdateElementData').UpdateElementData} updateData - Update data.\n */\nfunction s_UPDATE_ELEMENT_ORTHO(el, updateData)\n{\n   const changeSet = updateData.changeSet;\n   const data = updateData.data;\n\n   if (changeSet.zIndex)\n   {\n      el.style.zIndex = typeof data.zIndex === 'number' ? `${data.zIndex}` : null;\n   }\n\n   if (changeSet.width)\n   {\n      el.style.width = typeof data.width === 'number' ? `${data.width}px` : data.width;\n   }\n\n   if (changeSet.height)\n   {\n      el.style.height = typeof data.height === 'number' ? `${data.height}px` : data.height;\n   }\n\n   if (changeSet.transformOrigin)\n   {\n      el.style.transformOrigin = data.transformOrigin;\n   }\n\n   // Update all transforms in order added to transforms object.\n   if (changeSet.left || changeSet.top || changeSet.transform)\n   {\n      el.style.transform = updateData.transforms.getCSSOrtho(data);\n   }\n}\n\n/**\n * Updates the applied transform data and sets the readble `transform` store.\n *\n * @param {HTMLElement} el - The target HTMLElement.\n *\n * @param {import('./UpdateElementData').UpdateElementData} updateData - Update element data.\n */\nfunction s_UPDATE_TRANSFORM(el, updateData)\n{\n   s_VALIDATION_DATA$1.height = updateData.data.height !== 'auto' ? updateData.data.height :\n    updateData.styleCache.offsetHeight;\n\n   s_VALIDATION_DATA$1.width = updateData.data.width !== 'auto' ? updateData.data.width :\n    updateData.styleCache.offsetWidth;\n\n   s_VALIDATION_DATA$1.marginLeft = updateData.styleCache.marginLeft;\n\n   s_VALIDATION_DATA$1.marginTop = updateData.styleCache.marginTop;\n\n   // Get transform data. First set constraints including any margin top / left as offsets and width / height. Used\n   // when position width / height is 'auto'.\n   updateData.transforms.getData(updateData.data, updateData.transformData, s_VALIDATION_DATA$1);\n\n   updateData.storeTransform.set(updateData.transformData);\n}\n\nconst s_VALIDATION_DATA$1 = {\n   height: void 0,\n   width: void 0,\n   marginLeft: void 0,\n   marginTop: void 0\n};\n\n/**\n * Provides a store for position following the subscriber protocol in addition to providing individual writable derived\n * stores for each independent variable.\n */\nclass TJSPosition\n{\n   /**\n    * @type {{browserCentered: Centered, Centered: Centered}}\n    */\n   static #positionInitial = {\n      browserCentered: new Centered({ lock: true }),\n      Centered\n   };\n\n   /**\n    * @type {{TransformBounds: TransformBounds, BasicBounds: BasicBounds, basicWindow: BasicBounds, transformWindow: TransformBounds}}\n    */\n   static #positionValidators = {\n      basicWindow: new BasicBounds({ lock: true }),\n      BasicBounds,\n      transformWindow: new TransformBounds({ lock: true }),\n      TransformBounds\n   };\n\n   /**\n    * @type {TJSPositionData}\n    */\n   #data = new TJSPositionData();\n\n   /**\n    * Provides the animation API.\n    *\n    * @type {AnimationAPI}\n    */\n   #animate = new AnimationAPI(this, this.#data);\n\n   /**\n    * Provides a way to turn on / off the position handling.\n    *\n    * @type {boolean}\n    */\n   #enabled = true;\n\n   /**\n    * Stores ongoing options that are set in the constructor or by transform store subscription.\n    *\n    * @type {import('./').TJSPositionOptions}\n    */\n   #options = {\n      calculateTransform: false,\n      initialHelper: void 0,\n      ortho: true,\n      transformSubscribed: false\n   };\n\n   /**\n    * The associated parent for positional data tracking. Used in validators.\n    *\n    * @type {import('./').TJSPositionParent}\n    */\n   #parent;\n\n   /**\n    * Stores the style attributes that changed on update.\n    *\n    * @type {PositionChangeSet}\n    */\n   #positionChangeSet = new PositionChangeSet();\n\n   /**\n    * @type {import('./').TJSPositionStores}\n    */\n   #stores;\n\n   /**\n    * Stores an instance of the computer styles for the target element.\n    *\n    * @type {StyleCache}\n    */\n   #styleCache;\n\n   /**\n    * Stores the subscribers.\n    *\n    * @type {import('svelte/store').Subscriber<TJSPositionData>[]}\n    */\n   #subscriptions = [];\n\n   /**\n    * @type {TJSTransforms}\n    */\n   #transforms = new TJSTransforms();\n\n   /**\n    * @type {UpdateElementData}\n    */\n   #updateElementData;\n\n   /**\n    * Stores the UpdateElementManager wait promise.\n    *\n    * @type {Promise}\n    */\n   #updateElementPromise;\n\n   /**\n    * @type {AdapterValidators}\n    */\n   #validators;\n\n   /**\n    * @type {import('./').ValidatorData[]}\n    */\n   #validatorData;\n\n   /**\n    * @type {PositionStateAPI}\n    */\n   #state = new PositionStateAPI(this, this.#data, this.#transforms);\n\n   /**\n    * @returns {AnimationGroupAPI} Public Animation API.\n    */\n   static get Animate() { return AnimationGroupAPI; }\n\n   /**\n    * @returns {{browserCentered: Centered, Centered: Centered}} TJSPosition initial API.\n    */\n   static get Initial() { return this.#positionInitial; }\n\n   /**\n    * Returns TJSTransformData class / constructor.\n    *\n    * @returns {TJSTransformData} TJSTransformData class / constructor.\n    */\n   static get TransformData() { return TJSTransformData; }\n\n   /**\n    * Returns default validators.\n    *\n    * Note: `basicWindow` and `BasicBounds` will eventually be removed.\n    *\n    * @returns {{TransformBounds: TransformBounds, BasicBounds: BasicBounds, basicWindow: BasicBounds, transformWindow: TransformBounds}}\n    * Available validators.\n    */\n   static get Validators() { return this.#positionValidators; }\n\n   /**\n    * Returns a duplicate of a given position instance copying any options and validators.\n    *\n    * // TODO: Consider more safety over options processing.\n    *\n    * @param {TJSPosition}          position - A position instance.\n    *\n    * @param {import('./').TJSPositionOptions}   options - TJSPosition options.\n    *\n    * @returns {TJSPosition} A duplicate position instance.\n    */\n   static duplicate(position, options)\n   {\n      if (!(position instanceof TJSPosition)) { throw new TypeError(`'position' is not an instance of Position.`); }\n\n      const newPosition = new TJSPosition(options);\n\n      newPosition.#options = Object.assign({}, position.#options, options);\n      newPosition.#validators.add(...position.#validators);\n\n      newPosition.set(position.#data);\n\n      return newPosition;\n   }\n\n   /**\n    * @param {import('./').TJSPositionParent | import('./').TJSPositionOptionsAll}   [parent] - A\n    *        potential parent element or object w/ `elementTarget` getter. May also be the TJSPositionOptions object\n    *        w/ 1 argument.\n    *\n    * @param {import('./').TJSPositionOptionsAll}   [options] - Default values.\n    */\n   constructor(parent, options)\n   {\n      // Test if `parent` is a plain object; if so treat as options object.\n      if (isPlainObject(parent))\n      {\n         options = parent;\n      }\n      else\n      {\n         this.#parent = parent;\n      }\n\n      const data = this.#data;\n      const transforms = this.#transforms;\n\n      this.#styleCache = new StyleCache();\n\n      const updateData = new UpdateElementData();\n\n      updateData.changeSet = this.#positionChangeSet;\n      updateData.data = this.#data;\n      updateData.options = this.#options;\n      updateData.styleCache = this.#styleCache;\n      updateData.subscriptions = this.#subscriptions;\n      updateData.transforms = this.#transforms;\n\n      this.#updateElementData = updateData;\n\n      if (isObject(options))\n      {\n         // Set TJSPosition options\n         if (typeof options.calculateTransform === 'boolean')\n         {\n            this.#options.calculateTransform = options.calculateTransform;\n         }\n\n         if (typeof options.ortho === 'boolean')\n         {\n            this.#options.ortho = options.ortho;\n         }\n\n         // Set default values from options.\n\n         if (Number.isFinite(options.height) || options.height === 'auto' || options.height === 'inherit' ||\n          options.height === null)\n         {\n            data.height = updateData.dimensionData.height = typeof options.height === 'number' ?\n             Math.round(options.height) : options.height;\n         }\n\n         if (Number.isFinite(options.left) || options.left === null)\n         {\n            data.left = typeof options.left === 'number' ? Math.round(options.left) : options.left;\n         }\n\n         if (Number.isFinite(options.maxHeight) || options.maxHeight === null)\n         {\n            data.maxHeight = typeof options.maxHeight === 'number' ? Math.round(options.maxHeight) : options.maxHeight;\n         }\n\n         if (Number.isFinite(options.maxWidth) || options.maxWidth === null)\n         {\n            data.maxWidth = typeof options.maxWidth === 'number' ? Math.round(options.maxWidth) : options.maxWidth;\n         }\n\n         if (Number.isFinite(options.minHeight) || options.minHeight === null)\n         {\n            data.minHeight = typeof options.minHeight === 'number' ? Math.round(options.minHeight) : options.minHeight;\n         }\n\n         if (Number.isFinite(options.minWidth) || options.minWidth === null)\n         {\n            data.minWidth = typeof options.minWidth === 'number' ? Math.round(options.minWidth) : options.minWidth;\n         }\n\n         if (Number.isFinite(options.rotateX) || options.rotateX === null)\n         {\n            transforms.rotateX = data.rotateX = options.rotateX;\n         }\n\n         if (Number.isFinite(options.rotateY) || options.rotateY === null)\n         {\n            transforms.rotateY = data.rotateY = options.rotateY;\n         }\n\n         if (Number.isFinite(options.rotateZ) || options.rotateZ === null)\n         {\n            transforms.rotateZ = data.rotateZ = options.rotateZ;\n         }\n\n         if (Number.isFinite(options.scale) || options.scale === null)\n         {\n            transforms.scale = data.scale = options.scale;\n         }\n\n         if (Number.isFinite(options.top) || options.top === null)\n         {\n            data.top = typeof options.top === 'number' ? Math.round(options.top) : options.top;\n         }\n\n         if (typeof options.transformOrigin === 'string' || options.transformOrigin === null)\n         {\n            data.transformOrigin = transformOrigins.includes(options.transformOrigin) ?\n             options.transformOrigin : null;\n         }\n\n         if (Number.isFinite(options.translateX) || options.translateX === null)\n         {\n            transforms.translateX = data.translateX = options.translateX;\n         }\n\n         if (Number.isFinite(options.translateY) || options.translateY === null)\n         {\n            transforms.translateY = data.translateY = options.translateY;\n         }\n\n         if (Number.isFinite(options.translateZ) || options.translateZ === null)\n         {\n            transforms.translateZ = data.translateZ = options.translateZ;\n         }\n\n         if (Number.isFinite(options.width) || options.width === 'auto' || options.width === 'inherit' ||\n          options.width === null)\n         {\n            data.width = updateData.dimensionData.width = typeof options.width === 'number' ?\n             Math.round(options.width) : options.width;\n         }\n\n         if (Number.isFinite(options.zIndex) || options.zIndex === null)\n         {\n            data.zIndex = typeof options.zIndex === 'number' ? Math.round(options.zIndex) : options.zIndex;\n         }\n      }\n\n      this.#stores = {\n         // The main properties for manipulating TJSPosition.\n         height: propertyStore(this, 'height'),\n         left: propertyStore(this, 'left'),\n         rotateX: propertyStore(this, 'rotateX'),\n         rotateY: propertyStore(this, 'rotateY'),\n         rotateZ: propertyStore(this, 'rotateZ'),\n         scale: propertyStore(this, 'scale'),\n         top: propertyStore(this, 'top'),\n         transformOrigin: propertyStore(this, 'transformOrigin'),\n         translateX: propertyStore(this, 'translateX'),\n         translateY: propertyStore(this, 'translateY'),\n         translateZ: propertyStore(this, 'translateZ'),\n         width: propertyStore(this, 'width'),\n         zIndex: propertyStore(this, 'zIndex'),\n\n         // Stores that control validation when width / height is not `auto`.\n         maxHeight: propertyStore(this, 'maxHeight'),\n         maxWidth: propertyStore(this, 'maxWidth'),\n         minHeight: propertyStore(this, 'minHeight'),\n         minWidth: propertyStore(this, 'minWidth'),\n\n         // Readable stores based on updates or from resize observer changes.\n         dimension: { subscribe: updateData.storeDimension.subscribe },\n         element: { subscribe: this.#styleCache.stores.element.subscribe },\n         resizeContentHeight: { subscribe: this.#styleCache.stores.resizeContentHeight.subscribe },\n         resizeContentWidth: { subscribe: this.#styleCache.stores.resizeContentWidth.subscribe },\n         resizeOffsetHeight: { subscribe: this.#styleCache.stores.resizeOffsetHeight.subscribe },\n         resizeOffsetWidth: { subscribe: this.#styleCache.stores.resizeOffsetWidth.subscribe },\n         transform: { subscribe: updateData.storeTransform.subscribe },\n\n         // Protected store that should only be set by resizeObserver action.\n         resizeObserved: this.#styleCache.stores.resizeObserved,\n      };\n\n      // When resize change from any applied resizeObserver action automatically set data for new validation run.\n      // A resizeObserver prop should be set to true for ApplicationShell components or usage of resizeObserver action\n      // to monitor for changes. This should only be used on elements that have 'auto' for width or height.\n      subscribeIgnoreFirst(this.#stores.resizeObserved, (resizeData) =>\n      {\n         const parent = this.#parent;\n         const el = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n\n         // Only invoke set if there is a target element and the resize data has a valid offset width & height.\n         if (el instanceof HTMLElement && Number.isFinite(resizeData?.offsetWidth) &&\n          Number.isFinite(resizeData?.offsetHeight))\n         {\n            this.set(data);\n         }\n      });\n\n      this.#stores.transformOrigin.values = transformOrigins;\n\n      [this.#validators, this.#validatorData] = new AdapterValidators();\n\n      if (options?.initial || options?.positionInitial)\n      {\n         const initialHelper = options.initial ?? options.positionInitial;\n\n         if (typeof initialHelper?.getLeft !== 'function' || typeof initialHelper?.getTop !== 'function')\n         {\n            throw new Error(\n             `'options.initial' position helper does not contain 'getLeft' and / or 'getTop' functions.`);\n         }\n\n         this.#options.initialHelper = options.initial;\n      }\n\n      if (options?.validator)\n      {\n         if (isIterable(options?.validator)) { this.validators.add(...options.validator); }\n         else { this.validators.add(options.validator); }\n      }\n   }\n\n   /**\n    * Returns the animation API.\n    *\n    * @returns {AnimationAPI} Animation API.\n    */\n   get animate()\n   {\n      return this.#animate;\n   }\n\n   /**\n    * Returns the dimension data for the readable store.\n    *\n    * @returns {{width: number | 'auto', height: number | 'auto'}} Dimension data.\n    */\n   get dimension()\n   {\n      return this.#updateElementData.dimensionData;\n   }\n\n   /**\n    * Returns the enabled state.\n    *\n    * @returns {boolean} Enabled state.\n    */\n   get enabled()\n   {\n      return this.#enabled;\n   }\n\n   /**\n    * Returns the current HTMLElement being positioned.\n    *\n    * @returns {HTMLElement|undefined} Current HTMLElement being positioned.\n    */\n   get element()\n   {\n      return this.#styleCache.el;\n   }\n\n   /**\n    * Returns a promise that is resolved on the next element update with the time of the update.\n    *\n    * @returns {Promise<number>} Promise resolved on element update.\n    */\n   get elementUpdated()\n   {\n      return this.#updateElementPromise;\n   }\n\n   /**\n    * Returns the associated {@link TJSPositionParent} instance.\n    *\n    * @returns {import('./').TJSPositionParent} The TJSPositionParent instance.\n    */\n   get parent() { return this.#parent; }\n\n   /**\n    * Returns the state API.\n    *\n    * @returns {import('./PositionStateAPI').PositionStateAPI} TJSPosition state API.\n    */\n   get state() { return this.#state; }\n\n   /**\n    * Returns the derived writable stores for individual data variables.\n    *\n    * @returns {import('./').TJSPositionStores} Derived / writable stores.\n    */\n   get stores() { return this.#stores; }\n\n   /**\n    * Returns the transform data for the readable store.\n    *\n    * @returns {TJSTransformData} Transform Data.\n    */\n   get transform()\n   {\n      return this.#updateElementData.transformData;\n   }\n\n   /**\n    * Returns the validators.\n    *\n    * @returns {AdapterValidators} validators.\n    */\n   get validators() { return this.#validators; }\n\n   /**\n    * Sets the enabled state.\n    *\n    * @param {boolean}  enabled - New enabled state.\n    */\n   set enabled(enabled)\n   {\n      if (typeof enabled !== 'boolean')\n      {\n         throw new TypeError(`'enabled' is not a boolean.`);\n      }\n\n      this.#enabled = enabled;\n   }\n\n   /**\n    * Sets the associated {@link TJSPositionParent} instance. Resets the style cache and default data.\n    *\n    * @param {import('./').TJSPositionParent} parent - A TJSPositionParent instance.\n    */\n   set parent(parent)\n   {\n      if (parent !== void 0 && !(parent instanceof HTMLElement) && !isObject(parent))\n      {\n         throw new TypeError(`'parent' is not an HTMLElement, object, or undefined.`);\n      }\n\n      this.#parent = parent;\n\n      // Reset any stored default data & the style cache.\n      this.#state.remove({ name: '#defaultData' });\n      this.#styleCache.reset();\n\n      // If a parent is defined then invoke set to update any parent element.\n      if (parent) { this.set(this.#data); }\n   }\n\n// Data accessors ----------------------------------------------------------------------------------------------------\n\n   /**\n    * @returns {number|'auto'|'inherit'|null} height\n    */\n   get height() { return this.#data.height; }\n\n   /**\n    * @returns {number|null} left\n    */\n   get left() { return this.#data.left; }\n\n   /**\n    * @returns {number|null} maxHeight\n    */\n   get maxHeight() { return this.#data.maxHeight; }\n\n   /**\n    * @returns {number|null} maxWidth\n    */\n   get maxWidth() { return this.#data.maxWidth; }\n\n   /**\n    * @returns {number|null} minHeight\n    */\n   get minHeight() { return this.#data.minHeight; }\n\n   /**\n    * @returns {number|null} minWidth\n    */\n   get minWidth() { return this.#data.minWidth; }\n\n   /**\n    * @returns {number|null} rotateX\n    */\n   get rotateX() { return this.#data.rotateX; }\n\n   /**\n    * @returns {number|null} rotateY\n    */\n   get rotateY() { return this.#data.rotateY; }\n\n   /**\n    * @returns {number|null} rotateZ\n    */\n   get rotateZ() { return this.#data.rotateZ; }\n\n   /**\n    * @returns {number|null} alias for rotateZ\n    */\n   get rotation() { return this.#data.rotateZ; }\n\n   /**\n    * @returns {number|null} scale\n    */\n   get scale() { return this.#data.scale; }\n\n   /**\n    * @returns {number|null} top\n    */\n   get top() { return this.#data.top; }\n\n   /**\n    * @returns {import('./').TJSTransformOrigin} transformOrigin\n    */\n   get transformOrigin() { return this.#data.transformOrigin; }\n\n   /**\n    * @returns {number|null} translateX\n    */\n   get translateX() { return this.#data.translateX; }\n\n   /**\n    * @returns {number|null} translateY\n    */\n   get translateY() { return this.#data.translateY; }\n\n   /**\n    * @returns {number|null} translateZ\n    */\n   get translateZ() { return this.#data.translateZ; }\n\n   /**\n    * @returns {number|'auto'|'inherit'|null} width\n    */\n   get width() { return this.#data.width; }\n\n   /**\n    * @returns {number|null} z-index\n    */\n   get zIndex() { return this.#data.zIndex; }\n\n   /**\n    * @param {number|string|null} height -\n    */\n   set height(height)\n   {\n      this.#stores.height.set(height);\n   }\n\n   /**\n    * @param {number|string|null} left -\n    */\n   set left(left)\n   {\n      this.#stores.left.set(left);\n   }\n\n   /**\n    * @param {number|string|null} maxHeight -\n    */\n   set maxHeight(maxHeight)\n   {\n      this.#stores.maxHeight.set(maxHeight);\n   }\n\n   /**\n    * @param {number|string|null} maxWidth -\n    */\n   set maxWidth(maxWidth)\n   {\n      this.#stores.maxWidth.set(maxWidth);\n   }\n\n   /**\n    * @param {number|string|null} minHeight -\n    */\n   set minHeight(minHeight)\n   {\n      this.#stores.minHeight.set(minHeight);\n   }\n\n   /**\n    * @param {number|string|null} minWidth -\n    */\n   set minWidth(minWidth)\n   {\n      this.#stores.minWidth.set(minWidth);\n   }\n\n   /**\n    * @param {number|string|null} rotateX -\n    */\n   set rotateX(rotateX)\n   {\n      this.#stores.rotateX.set(rotateX);\n   }\n\n   /**\n    * @param {number|string|null} rotateY -\n    */\n   set rotateY(rotateY)\n   {\n      this.#stores.rotateY.set(rotateY);\n   }\n\n   /**\n    * @param {number|string|null} rotateZ -\n    */\n   set rotateZ(rotateZ)\n   {\n      this.#stores.rotateZ.set(rotateZ);\n   }\n\n   /**\n    * @param {number|string|null} rotateZ - alias for rotateZ\n    */\n   set rotation(rotateZ)\n   {\n      this.#stores.rotateZ.set(rotateZ);\n   }\n\n   /**\n    * @param {number|string|null} scale -\n    */\n   set scale(scale)\n   {\n      this.#stores.scale.set(scale);\n   }\n\n   /**\n    * @param {number|string|null} top -\n    */\n   set top(top)\n   {\n      this.#stores.top.set(top);\n   }\n\n   /**\n    * @param {import('./').TJSTransformOrigin} transformOrigin -\n    */\n   set transformOrigin(transformOrigin)\n   {\n      if (transformOrigins.includes(transformOrigin)) { this.#stores.transformOrigin.set(transformOrigin); }\n   }\n\n   /**\n    * @param {number|string|null} translateX -\n    */\n   set translateX(translateX)\n   {\n      this.#stores.translateX.set(translateX);\n   }\n\n   /**\n    * @param {number|string|null} translateY -\n    */\n   set translateY(translateY)\n   {\n      this.#stores.translateY.set(translateY);\n   }\n\n   /**\n    * @param {number|string|null} translateZ -\n    */\n   set translateZ(translateZ)\n   {\n      this.#stores.translateZ.set(translateZ);\n   }\n\n   /**\n    * @param {number|string|null} width -\n    */\n   set width(width)\n   {\n      this.#stores.width.set(width);\n   }\n\n   /**\n    * @param {number|string|null} zIndex -\n    */\n   set zIndex(zIndex)\n   {\n      this.#stores.zIndex.set(zIndex);\n   }\n\n   /**\n    * Assigns current position to object passed into method.\n    *\n    * @param {object|TJSPositionData}  [position] - Target to assign current position data.\n    *\n    * @param {import('./').TJSPositionGetOptions}   [options] - Defines options for specific keys and substituting null\n    *        for numeric default values.\n    *\n    * @returns {TJSPositionData} Passed in object with current position data.\n    */\n   get(position = {}, options)\n   {\n      const keys = options?.keys;\n      const excludeKeys = options?.exclude;\n      const numeric = options?.numeric ?? false;\n\n      if (isIterable(keys))\n      {\n         // Replace any null values potentially with numeric default values.\n         if (numeric)\n         {\n            for (const key of keys) { position[key] = this[key] ?? numericDefaults[key]; }\n         }\n         else // Accept current values.\n         {\n            for (const key of keys) { position[key] = this[key]; }\n         }\n\n         // Remove any excluded keys.\n         if (isIterable(excludeKeys))\n         {\n            for (const key of excludeKeys) { delete position[key]; }\n         }\n\n         return position;\n      }\n      else\n      {\n         const data = Object.assign(position, this.#data);\n\n         // Remove any excluded keys.\n         if (isIterable(excludeKeys))\n         {\n            for (const key of excludeKeys) { delete data[key]; }\n         }\n\n         // Potentially set numeric defaults.\n         if (numeric) { setNumericDefaults(data); }\n\n         return data;\n      }\n   }\n\n   /**\n    * @returns {TJSPositionData} Current position data.\n    */\n   toJSON()\n   {\n      return Object.assign({}, this.#data);\n   }\n\n   /**\n    * All calculation and updates of position are implemented in {@link TJSPosition}. This allows position to be fully\n    * reactive and in control of updating inline styles for the application.\n    *\n    * Note: the logic for updating position is improved and changes a few aspects from the default\n    * {@link globalThis.Application.setPosition}. The gate on `popOut` is removed, so to ensure no positional\n    * application occurs popOut applications can set `this.options.positionable` to false ensuring no positional inline\n    * styles are applied.\n    *\n    * The initial set call on an application with a target element will always set width / height as this is\n    * necessary for correct calculations.\n    *\n    * When a target element is present updated styles are applied after validation. To modify the behavior of set\n    * implement one or more validator functions and add them from the application via\n    * `this.position.validators.add(<Function>)`.\n    *\n    * Updates to any target element are decoupled from the underlying TJSPosition data. This method returns this instance\n    * that you can then await on the target element inline style update by using {@link TJSPosition.elementUpdated}.\n    *\n    * @param {import('./').TJSPositionDataExtended} [position] - TJSPosition data to set.\n    *\n    * @returns {TJSPosition} This TJSPosition instance.\n    */\n   set(position = {})\n   {\n      if (!isObject(position)) { throw new TypeError(`Position - set error: 'position' is not an object.`); }\n\n      const parent = this.#parent;\n\n      // An early out to prevent `set` from taking effect if not enabled.\n      if (!this.#enabled)\n      {\n         return this;\n      }\n\n      // An early out to prevent `set` from taking effect if options `positionable` is false.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return this;\n      }\n\n      // Callers can specify to immediately update an associated element. This is useful if set is called from\n      // requestAnimationFrame / rAF. Library integrations like GSAP invoke set from rAF.\n      const immediateElementUpdate = position.immediateElementUpdate === true;\n\n      const data = this.#data;\n      const transforms = this.#transforms;\n\n      // Find the target HTML element and verify that it is connected storing it in `el`.\n      const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n      const el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n      const changeSet = this.#positionChangeSet;\n      const styleCache = this.#styleCache;\n\n      if (el)\n      {\n         // Cache the computed styles of the element.\n         if (!styleCache.hasData(el))\n         {\n            styleCache.update(el);\n\n            // Add will-change property if not already set in inline or computed styles.\n            if (!styleCache.hasWillChange)\n            ;\n\n            // Update all properties / clear queued state.\n            changeSet.set(true);\n            this.#updateElementData.queued = false;\n         }\n\n         // Converts any relative string position data to numeric inputs.\n         convertRelative(position, this);\n\n         position = this.#updatePosition(position, parent, el, styleCache);\n\n         // Check if a validator cancelled the update.\n         if (position === null) { return this; }\n      }\n\n      if (Number.isFinite(position.left))\n      {\n         position.left = Math.round(position.left);\n\n         if (data.left !== position.left) { data.left = position.left; changeSet.left = true; }\n      }\n\n      if (Number.isFinite(position.top))\n      {\n         position.top = Math.round(position.top);\n\n         if (data.top !== position.top) { data.top = position.top; changeSet.top = true; }\n      }\n\n      if (Number.isFinite(position.maxHeight) || position.maxHeight === null)\n      {\n         position.maxHeight = typeof position.maxHeight === 'number' ? Math.round(position.maxHeight) : null;\n\n         if (data.maxHeight !== position.maxHeight) { data.maxHeight = position.maxHeight; changeSet.maxHeight = true; }\n      }\n\n      if (Number.isFinite(position.maxWidth) || position.maxWidth === null)\n      {\n         position.maxWidth = typeof position.maxWidth === 'number' ? Math.round(position.maxWidth) : null;\n\n         if (data.maxWidth !== position.maxWidth) { data.maxWidth = position.maxWidth; changeSet.maxWidth = true; }\n      }\n\n      if (Number.isFinite(position.minHeight) || position.minHeight === null)\n      {\n         position.minHeight = typeof position.minHeight === 'number' ? Math.round(position.minHeight) : null;\n\n         if (data.minHeight !== position.minHeight) { data.minHeight = position.minHeight; changeSet.minHeight = true; }\n      }\n\n      if (Number.isFinite(position.minWidth) || position.minWidth === null)\n      {\n         position.minWidth = typeof position.minWidth === 'number' ? Math.round(position.minWidth) : null;\n\n         if (data.minWidth !== position.minWidth) { data.minWidth = position.minWidth; changeSet.minWidth = true; }\n      }\n\n      if (Number.isFinite(position.rotateX) || position.rotateX === null)\n      {\n         if (data.rotateX !== position.rotateX)\n         {\n            data.rotateX = transforms.rotateX = position.rotateX;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.rotateY) || position.rotateY === null)\n      {\n         if (data.rotateY !== position.rotateY)\n         {\n            data.rotateY = transforms.rotateY = position.rotateY;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.rotateZ) || position.rotateZ === null)\n      {\n         if (data.rotateZ !== position.rotateZ)\n         {\n            data.rotateZ = transforms.rotateZ = position.rotateZ;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.scale) || position.scale === null)\n      {\n         position.scale = typeof position.scale === 'number' ? Math.max(0, Math.min(position.scale, 1000)) : null;\n\n         if (data.scale !== position.scale)\n         {\n            data.scale = transforms.scale = position.scale;\n            changeSet.transform = true;\n         }\n      }\n\n      if ((typeof position.transformOrigin === 'string' && transformOrigins.includes(\n       position.transformOrigin)) || position.transformOrigin === null)\n      {\n         if (data.transformOrigin !== position.transformOrigin)\n         {\n            data.transformOrigin = position.transformOrigin;\n            changeSet.transformOrigin = true;\n         }\n      }\n\n      if (Number.isFinite(position.translateX) || position.translateX === null)\n      {\n         if (data.translateX !== position.translateX)\n         {\n            data.translateX = transforms.translateX = position.translateX;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.translateY) || position.translateY === null)\n      {\n         if (data.translateY !== position.translateY)\n         {\n            data.translateY = transforms.translateY = position.translateY;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.translateZ) || position.translateZ === null)\n      {\n         if (data.translateZ !== position.translateZ)\n         {\n            data.translateZ = transforms.translateZ = position.translateZ;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.zIndex))\n      {\n         position.zIndex = Math.round(position.zIndex);\n\n         if (data.zIndex !== position.zIndex) { data.zIndex = position.zIndex; changeSet.zIndex = true; }\n      }\n\n      if (Number.isFinite(position.width) || position.width === 'auto' || position.width === 'inherit' ||\n       position.width === null)\n      {\n         position.width = typeof position.width === 'number' ? Math.round(position.width) : position.width;\n\n         if (data.width !== position.width) { data.width = position.width; changeSet.width = true; }\n      }\n\n      if (Number.isFinite(position.height) || position.height === 'auto' || position.height === 'inherit' ||\n       position.height === null)\n      {\n         position.height = typeof position.height === 'number' ? Math.round(position.height) : position.height;\n\n         if (data.height !== position.height) { data.height = position.height; changeSet.height = true; }\n      }\n\n      if (el)\n      {\n         const defaultData = this.#state.getDefault();\n\n         // Set default data after first set operation that has a target element.\n         if (!isObject(defaultData)) { this.#state.save({ name: '#defaultData', ...Object.assign({}, data) }); }\n\n         // If `immediateElementUpdate` is true in position data passed to `set` then update the element immediately.\n         // This is for rAF based library integrations like GSAP.\n         if (immediateElementUpdate)\n         {\n            UpdateElementManager.immediate(el, this.#updateElementData);\n            this.#updateElementPromise = Promise.resolve(performance.now());\n         }\n         // Else if not queued then queue an update for the next rAF callback.\n         else if (!this.#updateElementData.queued)\n         {\n            this.#updateElementPromise = UpdateElementManager.add(el, this.#updateElementData);\n         }\n      }\n      else\n      {\n         // Notify main store subscribers.\n         UpdateElementManager.updateSubscribers(this.#updateElementData);\n      }\n\n      return this;\n   }\n\n   /**\n    * @param {import('svelte/store').Subscriber<TJSPositionData>} handler - Callback function that is invoked on\n    *        update / changes. Receives a copy of the TJSPositionData.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\n\n      handler(Object.assign({}, this.#data));                     // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n\n   /**\n    * @param {import('./').TJSPositionDataExtended} opts -\n    *\n    * @param {number|null} opts.left -\n    *\n    * @param {number|null} opts.top -\n    *\n    * @param {number|null} opts.maxHeight -\n    *\n    * @param {number|null} opts.maxWidth -\n    *\n    * @param {number|null} opts.minHeight -\n    *\n    * @param {number|null} opts.minWidth -\n    *\n    * @param {number|'auto'|null} opts.width -\n    *\n    * @param {number|'auto'|null} opts.height -\n    *\n    * @param {number|null} opts.rotateX -\n    *\n    * @param {number|null} opts.rotateY -\n    *\n    * @param {number|null} opts.rotateZ -\n    *\n    * @param {number|null} opts.scale -\n    *\n    * @param {string} opts.transformOrigin -\n    *\n    * @param {number|null} opts.translateX -\n    *\n    * @param {number|null} opts.translateY -\n    *\n    * @param {number|null} opts.translateZ -\n    *\n    * @param {number|null} opts.zIndex -\n    *\n    * @param {number|null} opts.rotation - alias for rotateZ\n    *\n    * @param {*} opts.rest -\n    *\n    * @param {object} parent -\n    *\n    * @param {HTMLElement} el -\n    *\n    * @param {StyleCache} styleCache -\n    *\n    * @returns {null|TJSPositionData} Updated position data or null if validation fails.\n    */\n   #updatePosition({\n      // Directly supported parameters\n      left, top, maxWidth, maxHeight, minWidth, minHeight, width, height, rotateX, rotateY, rotateZ, scale,\n       transformOrigin, translateX, translateY, translateZ, zIndex,\n\n      // Aliased parameters\n      rotation,\n\n      ...rest\n   } = {}, parent, el, styleCache)\n   {\n      let currentPosition = s_DATA_UPDATE.copy(this.#data);\n\n      // Update width if an explicit value is passed, or if no width value is set on the element.\n      if (el.style.width === '' || width !== void 0)\n      {\n         if (width === 'auto' || (currentPosition.width === 'auto' && width !== null))\n         {\n            currentPosition.width = 'auto';\n            width = styleCache.offsetWidth;\n         }\n         else if (width === 'inherit' || (currentPosition.width === 'inherit' && width !== null))\n         {\n            currentPosition.width = 'inherit';\n            width = styleCache.offsetWidth;\n         }\n         else\n         {\n            const newWidth = Number.isFinite(width) ? width : currentPosition.width;\n            currentPosition.width = width = Number.isFinite(newWidth) ? Math.round(newWidth) : styleCache.offsetWidth;\n         }\n      }\n      else\n      {\n         width = Number.isFinite(currentPosition.width) ? currentPosition.width : styleCache.offsetWidth;\n      }\n\n      // Update height if an explicit value is passed, or if no height value is set on the element.\n      if (el.style.height === '' || height !== void 0)\n      {\n         if (height === 'auto' || (currentPosition.height === 'auto' && height !== null))\n         {\n            currentPosition.height = 'auto';\n            height = styleCache.offsetHeight;\n         }\n         else if (height === 'inherit' || (currentPosition.height === 'inherit' && height !== null))\n         {\n            currentPosition.height = 'inherit';\n            height = styleCache.offsetHeight;\n         }\n         else\n         {\n            const newHeight = Number.isFinite(height) ? height : currentPosition.height;\n            currentPosition.height = height = Number.isFinite(newHeight) ? Math.round(newHeight) :\n             styleCache.offsetHeight;\n         }\n      }\n      else\n      {\n         height = Number.isFinite(currentPosition.height) ? currentPosition.height : styleCache.offsetHeight;\n      }\n\n      // Update left\n      if (Number.isFinite(left))\n      {\n         currentPosition.left = left;\n      }\n      else if (!Number.isFinite(currentPosition.left))\n      {\n         // Potentially use any initial position helper if available or set to 0.\n         currentPosition.left = typeof this.#options.initialHelper?.getLeft === 'function' ?\n          this.#options.initialHelper.getLeft(width) : 0;\n      }\n\n      // Update top\n      if (Number.isFinite(top))\n      {\n         currentPosition.top = top;\n      }\n      else if (!Number.isFinite(currentPosition.top))\n      {\n         // Potentially use any initial position helper if available or set to 0.\n         currentPosition.top = typeof this.#options.initialHelper?.getTop === 'function' ?\n          this.#options.initialHelper.getTop(height) : 0;\n      }\n\n      if (Number.isFinite(maxHeight) || maxHeight === null)\n      {\n         currentPosition.maxHeight = Number.isFinite(maxHeight) ? Math.round(maxHeight) : null;\n      }\n\n      if (Number.isFinite(maxWidth) || maxWidth === null)\n      {\n         currentPosition.maxWidth = Number.isFinite(maxWidth) ? Math.round(maxWidth) : null;\n      }\n\n      if (Number.isFinite(minHeight) || minHeight === null)\n      {\n         currentPosition.minHeight = Number.isFinite(minHeight) ? Math.round(minHeight) : null;\n      }\n\n      if (Number.isFinite(minWidth) || minWidth === null)\n      {\n         currentPosition.minWidth = Number.isFinite(minWidth) ? Math.round(minWidth) : null;\n      }\n\n      // Update rotate X/Y/Z, scale, z-index\n      if (Number.isFinite(rotateX) || rotateX === null) { currentPosition.rotateX = rotateX; }\n      if (Number.isFinite(rotateY) || rotateY === null) { currentPosition.rotateY = rotateY; }\n\n      // Handle alias for rotateZ. First check if `rotateZ` is valid and different from the current value. Next check if\n      // `rotation` is valid and use it for `rotateZ`.\n      if (rotateZ !== currentPosition.rotateZ && (Number.isFinite(rotateZ) || rotateZ === null))\n      {\n         currentPosition.rotateZ = rotateZ;\n      }\n      else if (rotation !== currentPosition.rotateZ && (Number.isFinite(rotation) || rotation === null))\n      {\n         currentPosition.rotateZ = rotation;\n      }\n\n      if (Number.isFinite(translateX) || translateX === null) { currentPosition.translateX = translateX; }\n      if (Number.isFinite(translateY) || translateY === null) { currentPosition.translateY = translateY; }\n      if (Number.isFinite(translateZ) || translateZ === null) { currentPosition.translateZ = translateZ; }\n\n      if (Number.isFinite(scale) || scale === null)\n      {\n         currentPosition.scale = typeof scale === 'number' ? Math.max(0, Math.min(scale, 1000)) : null;\n      }\n\n      if (typeof transformOrigin === 'string' || transformOrigin === null)\n      {\n         currentPosition.transformOrigin = transformOrigins.includes(transformOrigin) ? transformOrigin :\n          null;\n      }\n\n      if (Number.isFinite(zIndex) || zIndex === null)\n      {\n         currentPosition.zIndex = typeof zIndex === 'number' ? Math.round(zIndex) : zIndex;\n      }\n\n      const validatorData = this.#validatorData;\n\n      // If there are any validators allow them to potentially modify position data or reject the update.\n      if (this.#validators.enabled && validatorData.length)\n      {\n         s_VALIDATION_DATA.parent = parent;\n\n         s_VALIDATION_DATA.el = el;\n\n         s_VALIDATION_DATA.computed = styleCache.computed;\n\n         s_VALIDATION_DATA.transforms = this.#transforms;\n\n         s_VALIDATION_DATA.height = height;\n\n         s_VALIDATION_DATA.width = width;\n\n         s_VALIDATION_DATA.marginLeft = styleCache.marginLeft;\n\n         s_VALIDATION_DATA.marginTop = styleCache.marginTop;\n\n         s_VALIDATION_DATA.maxHeight = styleCache.maxHeight ?? currentPosition.maxHeight;\n\n         s_VALIDATION_DATA.maxWidth = styleCache.maxWidth ?? currentPosition.maxWidth;\n\n         // Given a parent w/ reactive state and is minimized ignore styleCache min-width/height.\n         const isMinimized = parent?.reactive?.minimized ?? false;\n\n         // Note the use of || for accessing the style cache as the left hand is ignored w/ falsy values such as '0'.\n         s_VALIDATION_DATA.minHeight = isMinimized ? currentPosition.minHeight ?? 0 :\n          styleCache.minHeight || (currentPosition.minHeight ?? 0);\n\n         s_VALIDATION_DATA.minWidth = isMinimized ? currentPosition.minWidth ?? 0 :\n          styleCache.minWidth || (currentPosition.minWidth ?? 0);\n\n         for (let cntr = 0; cntr < validatorData.length; cntr++)\n         {\n            s_VALIDATION_DATA.position = currentPosition;\n            s_VALIDATION_DATA.rest = rest;\n            currentPosition = validatorData[cntr].validator(s_VALIDATION_DATA);\n\n            if (currentPosition === null) { return null; }\n         }\n      }\n\n      // Return the updated position object.\n      return currentPosition;\n   }\n}\n\nconst s_DATA_UPDATE = new TJSPositionData();\n\n/**\n * @type {import('./').ValidationData}\n */\nconst s_VALIDATION_DATA = {\n   position: void 0,\n   parent: void 0,\n   el: void 0,\n   computed: void 0,\n   transforms: void 0,\n   height: void 0,\n   width: void 0,\n   marginLeft: void 0,\n   marginTop: void 0,\n   maxHeight: void 0,\n   maxWidth: void 0,\n   minHeight: void 0,\n   minWidth: void 0,\n   rest: void 0\n};\n\nObject.seal(s_VALIDATION_DATA);\n\n/**\n * Provides an action to apply a TJSPosition instance to a HTMLElement and invoke `position.parent`\n *\n * @param {HTMLElement}       node - The node associated with the action.\n *\n * @param {import('..').TJSPosition}   position - A position instance.\n *\n * @returns {import('svelte/action').ActionReturn<import('..').TJSPosition>} The action lifecycle methods.\n */\nfunction applyPosition(node, position)\n{\n   if (hasSetter(position, 'parent')) { position.parent = node; }\n\n   return {\n      update: (newPosition) =>\n      {\n         // Sanity case to short circuit update if positions are the same instance.\n         if (newPosition === position && newPosition.parent === position.parent) { return; }\n\n         if (hasSetter(position, 'parent')) { position.parent = void 0; }\n\n         position = newPosition;\n\n         if (hasSetter(position, 'parent')) { position.parent = node; }\n      },\n\n      destroy: () => { if (hasSetter(position, 'parent')) { position.parent = void 0; } }\n   };\n}\n\n/**\n * Provides an action to enable pointer dragging of an HTMLElement and invoke `position.set` on a given\n * {@link TJSPosition} instance provided. When the attached boolean store state changes the draggable\n * action is enabled or disabled.\n *\n * @param {HTMLElement}       node - The node associated with the action.\n *\n * @param {object}            params - Required parameters.\n *\n * @param {import('..').TJSPosition}   params.position - A position instance.\n *\n * @param {boolean}           [params.active=true] - A boolean value; attached to a readable store.\n *\n * @param {number}            [params.button=0] - MouseEvent button; {@link https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button}.\n *\n * @param {import('svelte/store').Writable<boolean>} [params.storeDragging] - A writable store that tracks \"dragging\"\n *        state.\n *\n * @param {boolean}           [params.ease=true] - When true easing is enabled.\n *\n * @param {object}            [params.easeOptions] - Gsap `to / `quickTo` vars object.\n *\n * @param {Iterable<string>}  [params.hasTargetClassList] - When defined any event targets that have a class in this\n *        list are allowed.\n *\n * @param {Iterable<string>}  [params.ignoreTargetClassList] - When defined any event targets that have a class in this\n *        list are ignored.\n *\n * @returns {import('svelte/action').ActionReturn<Record<string, any>>} Lifecycle functions.\n */\nfunction draggable(node, { position, active = true, button = 0, storeDragging = void 0, ease = false,\n easeOptions = { duration: 0.1, ease: cubicOut }, hasTargetClassList, ignoreTargetClassList })\n{\n   if (hasTargetClassList !== void 0 && !isIterable(hasTargetClassList))\n   {\n      throw new TypeError(`'hasTargetClassList' is not iterable.`);\n   }\n\n   if (ignoreTargetClassList !== void 0 && !isIterable(ignoreTargetClassList))\n   {\n      throw new TypeError(`'ignoreTargetClassList' is not iterable.`);\n   }\n\n   /**\n    * Used for direct call to `position.set`.\n    *\n    * @type {{top: number, left: number}}\n    */\n   const positionData = { left: 0, top: 0 };\n\n   /**\n    * Duplicate the app / Positionable starting position to track differences.\n    *\n    * @type {object}\n    */\n   let initialPosition = null;\n\n   /**\n    * Stores the initial X / Y on drag down.\n    *\n    * @type {object}\n    */\n   let initialDragPoint = {};\n\n   /**\n    * Stores the current dragging state and gates the move pointer as the dragging store is not\n    * set until the first pointer move.\n    *\n    * @type {boolean}\n    */\n   let dragging = false;\n\n   /**\n    * Stores the quickTo callback to use for optimized tweening when easing is enabled.\n    *\n    * @type {import('#runtime/svelte/store/position').quickToCallback}\n    */\n   let quickTo = position.animate.quickTo(['top', 'left'], easeOptions);\n\n   /**\n    * Remember event handlers associated with this action, so they may be later unregistered.\n    *\n    *  @type {{ [key: string]: [string, Function, boolean] }}\n    */\n   const handlers = {\n      dragDown: ['pointerdown', onDragPointerDown, false],\n      dragMove: ['pointermove', onDragPointerChange, false],\n      dragUp: ['pointerup', onDragPointerUp, false]\n   };\n\n   /**\n    * Activates listeners.\n    */\n   function activateListeners()\n   {\n      // Drag handlers\n      node.addEventListener(...handlers.dragDown);\n      node.classList.add('draggable');\n   }\n\n   /**\n    * Removes listeners.\n    */\n   function removeListeners()\n   {\n      if (typeof storeDragging?.set === 'function') { storeDragging.set(false); }\n\n      // Drag handlers\n      node.removeEventListener(...handlers.dragDown);\n      node.removeEventListener(...handlers.dragMove);\n      node.removeEventListener(...handlers.dragUp);\n      node.classList.remove('draggable');\n   }\n\n   if (active)\n   {\n      activateListeners();\n   }\n\n   /**\n    * Handle the initial pointer down that activates dragging behavior for the positionable.\n    *\n    * @param {PointerEvent} event - The pointer down event.\n    */\n   function onDragPointerDown(event)\n   {\n      if (event.button !== button || !event.isPrimary) { return; }\n\n      // Do not process if the position system is not enabled.\n      if (!position.enabled) { return; }\n\n      // Potentially ignore this event if `ignoreTargetClassList` is defined and the `event.target` has a matching\n      // class.\n      if (ignoreTargetClassList !== void 0 && event.target instanceof HTMLElement)\n      {\n         for (const targetClass of ignoreTargetClassList)\n         {\n            if (event.target.classList.contains(targetClass)) { return; }\n         }\n      }\n\n      // Potentially ignore this event if `hasTargetClassList` is defined and the `event.target` does not have any\n      // matching class from the list.\n      if (hasTargetClassList !== void 0 && event.target instanceof HTMLElement)\n      {\n         let foundTarget = false;\n\n         for (const targetClass of hasTargetClassList)\n         {\n            if (event.target.classList.contains(targetClass))\n            {\n               foundTarget = true;\n               break;\n            }\n         }\n\n         if (!foundTarget) { return; }\n      }\n\n      event.preventDefault();\n\n      dragging = false;\n\n      // Record initial position.\n      initialPosition = position.get();\n      initialDragPoint = { x: event.clientX, y: event.clientY };\n\n      // Add move and pointer up handlers.\n      node.addEventListener(...handlers.dragMove);\n      node.addEventListener(...handlers.dragUp);\n\n      node.setPointerCapture(event.pointerId);\n   }\n\n   /**\n    * Move the positionable.\n    *\n    * @param {PointerEvent} event - The pointer move event.\n    */\n   function onDragPointerChange(event)\n   {\n      // See chorded button presses for pointer events:\n      // https://www.w3.org/TR/pointerevents3/#chorded-button-interactions\n      // TODO: Support different button configurations for PointerEvents.\n      if ((event.buttons & 1) === 0)\n      {\n         onDragPointerUp(event);\n         return;\n      }\n\n      if (event.button !== -1 || !event.isPrimary) { return; }\n\n      event.preventDefault();\n\n      // Only set store dragging on first move event.\n      if (!dragging && typeof storeDragging?.set === 'function')\n      {\n         dragging = true;\n         storeDragging.set(true);\n      }\n\n      /** @type {number} */\n      const newLeft = initialPosition.left + (event.clientX - initialDragPoint.x);\n      /** @type {number} */\n      const newTop = initialPosition.top + (event.clientY - initialDragPoint.y);\n\n      if (ease)\n      {\n         quickTo(newTop, newLeft);\n      }\n      else\n      {\n         positionData.left = newLeft;\n         positionData.top = newTop;\n\n         position.set(positionData);\n      }\n   }\n\n   /**\n    * Finish dragging and set the final position and removing listeners.\n    *\n    * @param {PointerEvent} event - The pointer up event.\n    */\n   function onDragPointerUp(event)\n   {\n      event.preventDefault();\n\n      dragging = false;\n      if (typeof storeDragging?.set === 'function') { storeDragging.set(false); }\n\n      node.removeEventListener(...handlers.dragMove);\n      node.removeEventListener(...handlers.dragUp);\n   }\n\n   return {\n      // The default of active being true won't automatically add listeners twice.\n      update: (options) =>\n      {\n         if (typeof options.active === 'boolean')\n         {\n            active = options.active;\n            if (active) { activateListeners(); }\n            else { removeListeners(); }\n         }\n\n         if (typeof options.button === 'number')\n         {\n            button = options.button;\n         }\n\n         if (options.position !== void 0 && options.position !== position)\n         {\n            position = options.position;\n            quickTo = position.animate.quickTo(['top', 'left'], easeOptions);\n         }\n\n         if (typeof options.ease === 'boolean') { ease = options.ease; }\n\n         if (isObject(options.easeOptions))\n         {\n            easeOptions = options.easeOptions;\n            quickTo.options(easeOptions);\n         }\n\n         if (options.hasTargetClassList !== void 0)\n         {\n            if (!isIterable(options.hasTargetClassList))\n            {\n               throw new TypeError(`'hasTargetClassList' is not iterable.`);\n            }\n            else\n            {\n               hasTargetClassList = options.hasTargetClassList;\n            }\n         }\n\n         if (options.ignoreTargetClassList !== void 0)\n         {\n            if (!isIterable(options.ignoreTargetClassList))\n            {\n               throw new TypeError(`'ignoreTargetClassList' is not iterable.`);\n            }\n            else\n            {\n               ignoreTargetClassList = options.ignoreTargetClassList;\n            }\n         }\n      },\n\n      destroy: () => removeListeners()\n   };\n}\n\nclass DraggableOptions\n{\n   #ease = false;\n\n   /**\n    * @type {{ duration: number, ease: (t: number) => number | string }}\n    */\n   #easeOptions = { duration: 0.1, ease: cubicOut };\n\n   /**\n    * Stores the subscribers.\n    *\n    * @type {import('svelte/store').Subscriber<DraggableOptions>[]}\n    */\n   #subscriptions = [];\n\n   /**\n    *\n    * @param {object} [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.ease] -\n    *\n    * @param {object}   [opts.easeOptions] -\n    */\n   constructor({ ease, easeOptions } = {})\n   {\n      // Define the following getters directly on this instance and make them enumerable. This allows them to be\n      // picked up w/ `Object.assign`.\n      Object.defineProperty(this, 'ease', {\n         get: () => { return this.#ease; },\n         set: (newEase) =>\n         {\n            if (typeof newEase !== 'boolean') { throw new TypeError(`'ease' is not a boolean.`); }\n\n            this.#ease = newEase;\n            this.#updateSubscribers();\n         },\n         enumerable: true\n      });\n\n      Object.defineProperty(this, 'easeOptions', {\n         get: () => { return this.#easeOptions; },\n         set: (newEaseOptions) =>\n         {\n            if (!isObject(newEaseOptions))\n            {\n               throw new TypeError(`'easeOptions' is not an object.`);\n            }\n\n            if (newEaseOptions.duration !== void 0)\n            {\n               if (!Number.isFinite(newEaseOptions.duration))\n               {\n                  throw new TypeError(`'easeOptions.duration' is not a finite number.`);\n               }\n\n               if (newEaseOptions.duration < 0) { throw new Error(`'easeOptions.duration' is less than 0.`); }\n\n               this.#easeOptions.duration = newEaseOptions.duration;\n            }\n\n            if (newEaseOptions.ease !== void 0)\n            {\n               if (typeof newEaseOptions.ease !== 'function' && typeof newEaseOptions.ease !== 'string')\n               {\n                  throw new TypeError(`'easeOptions.ease' is not a function or string.`);\n               }\n\n               this.#easeOptions.ease = newEaseOptions.ease;\n            }\n\n            this.#updateSubscribers();\n         },\n         enumerable: true\n      });\n\n      // Set default options.\n      if (ease !== void 0) { this.ease = ease; }\n      if (easeOptions !== void 0) { this.easeOptions = easeOptions; }\n   }\n\n\n   /**\n    * @returns {number} Get ease duration\n    */\n   get easeDuration() { return this.#easeOptions.duration; }\n\n   /**\n    * @returns {string|Function} Get easing function value.\n    */\n   get easeValue() { return this.#easeOptions.ease; }\n\n\n   /**\n    * @param {number}   duration - Set ease duration.\n    */\n   set easeDuration(duration)\n   {\n      if (!Number.isFinite(duration))\n      {\n         throw new TypeError(`'duration' is not a finite number.`);\n      }\n\n      if (duration < 0) { throw new Error(`'duration' is less than 0.`); }\n\n      this.#easeOptions.duration = duration;\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param {string|Function} value - Get easing function value.\n    */\n   set easeValue(value)\n   {\n      if (typeof value !== 'function' && typeof value !== 'string')\n      {\n         throw new TypeError(`'value' is not a function or string.`);\n      }\n\n      this.#easeOptions.ease = value;\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Resets all options data to default values.\n    */\n   reset()\n   {\n      this.#ease = false;\n      this.#easeOptions = { duration: 0.1, ease: cubicOut };\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Resets easing options to default values.\n    */\n   resetEase()\n   {\n      this.#easeOptions = { duration: 0.1, ease: cubicOut };\n      this.#updateSubscribers();\n   }\n\n   /**\n    *\n    * @param {import('svelte/store').Subscriber<DraggableOptions>} handler - Callback function that is invoked on\n    *        update / changes. Receives the DraggableOptions object / instance.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\n\n      handler(this);                     // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n\n   #updateSubscribers()\n   {\n      const subscriptions = this.#subscriptions;\n\n      // Early out if there are no subscribers.\n      if (subscriptions.length > 0)\n      {\n         for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](this); }\n      }\n   }\n}\n\n/**\n * Define a function to get a DraggableOptions instance.\n *\n * @param {{ ease?: boolean, easeOptions?: object }} options - Draggable options.\n *\n * @returns {DraggableOptions} A new options instance.\n */\ndraggable.options = (options) => new DraggableOptions(options);\n\nexport { TJSPosition, TJSPositionData, applyPosition, draggable };\n//# sourceMappingURL=index.js.map\n","import { isObject } from '@typhonjs-fvtt/runtime/util/object';\nimport { group_outros, transition_out, check_outros } from 'svelte/internal';\n\n/**\n * Provides basic duck typing to determine if the provided object is a HMR ProxyComponent instance or class.\n *\n * @param {*}  comp - Data to check as a HMR proxy component.\n *\n * @returns {boolean} Whether basic duck typing succeeds.\n */\nfunction isHMRProxy(comp)\n{\n   const instanceName = comp?.constructor?.name;\n   if (typeof instanceName === 'string' && (instanceName.startsWith('Proxy<') || instanceName === 'ProxyComponent'))\n   {\n      return true;\n   }\n\n   const prototypeName = comp?.prototype?.constructor?.name;\n   return typeof prototypeName === 'string' && (prototypeName.startsWith('Proxy<') ||\n    prototypeName === 'ProxyComponent');\n}\n\n/**\n * Provides basic duck typing to determine if the provided function is a constructor function for a Svelte component.\n *\n * @param {*}  comp - Data to check as a Svelte component.\n *\n * @returns {boolean} Whether basic duck typing succeeds.\n */\nfunction isSvelteComponent(comp)\n{\n   if (comp === null || comp === void 0 || typeof comp !== 'function') { return false; }\n\n   // When using Vite in a developer build the SvelteComponent is wrapped in a ProxyComponent class.\n   // This class doesn't define methods on the prototype, so we must check if the constructor name\n   // starts with `Proxy<` as it provides the wrapped component as `Proxy<_wrapped component name_>`.\n   const prototypeName = comp?.prototype?.constructor?.name;\n   if (typeof prototypeName === 'string' && (prototypeName.startsWith('Proxy<') || prototypeName === 'ProxyComponent'))\n   {\n      return true;\n   }\n\n   return typeof window !== 'undefined' ?\n    typeof comp.prototype.$destroy === 'function' && typeof comp.prototype.$on === 'function' : // client-side\n     typeof comp.render === 'function'; // server-side\n}\n\n/**\n * Validates `config` argument whether it is a valid {@link TJSSvelteConfig}.\n *\n * @param {*}  config - The potential config object to validate.\n *\n * @param {boolean}  [raiseException=false] - If validation fails raise an exception.\n *\n * @returns {boolean} Is the config a valid TJSSvelteConfig.\n *\n * @throws {TypeError}  Any validation error when `raiseException` is enabled.\n */\nfunction isTJSSvelteConfig(config, raiseException = false)\n{\n   if (!isObject(config))\n   {\n      if (raiseException) { throw new TypeError(`isTJSSvelteConfig error: 'config' is not an object.`); }\n      return false;\n   }\n\n   if (!isSvelteComponent(config.class))\n   {\n      if (raiseException)\n      {\n         throw new TypeError(`isTJSSvelteConfig error: 'config.class' is not a Svelte component constructor.`);\n      }\n      return false;\n   }\n\n   return true;\n}\n\n/* eslint-disable */  // jsdoc/valid-types doesn't like the Google closure constructor function. TODO: verify in future eslint-plugin-jsdoc version\n/**\n * @typedef {object} TJSSvelteConfig Defines the TRL / client side configuration object to load a Svelte component.\n *\n * @property {({\n *    new(options: import('svelte').ComponentConstructorOptions):\n *     import('svelte').SvelteComponent | import('svelte').SvelteComponentTyped\n * })} class The Svelte component class / constructor function.\n *\n * @property {HTMLElement | ShadowRoot}   [target=document.body] A {@link HTMLElement} or {@link ShadowRoot} to\n * render to. By default, `document.body` is used as the target if not otherwise defined.\n *\n * @property {HTMLElement} [anchor] A child of `target` to render the component immediately before.\n *\n * @property {() => Record<string, *> | Record<string, *>} [props] Props to pass to the component.\n *\n * @property {() => (Record<string, *> | Map<string, *>) | Map<string, *> | Record<string, *>} [context] The root-level\n * context to pass to the component.\n *\n * @property {boolean}  [hydrate] See description in main Svelte docs\n * {@link https://svelte.dev/docs/client-side-component-api#creating-a-component | Creating a component.}\n *\n * @property {boolean} [intro] If true, will play transitions on initial render, rather than waiting for subsequent\n * state changes.\n*/\n/* eslint-enable */\n\n/**\n * Runs outro transition then destroys Svelte component.\n *\n * Workaround for https://github.com/sveltejs/svelte/issues/4056\n *\n * @param {*}  instance - A Svelte component.\n */\nasync function outroAndDestroy(instance)\n{\n   return new Promise((resolve) =>\n   {\n      if (instance.$$.fragment && instance.$$.fragment.o)\n      {\n         group_outros();\n         transition_out(instance.$$.fragment, 0, 0, () =>\n         {\n            instance.$destroy();\n            resolve();\n         });\n         check_outros();\n      }\n      else\n      {\n         instance.$destroy();\n         resolve();\n      }\n   });\n}\n\n/**\n * Parses a TyphonJS Svelte config object ensuring that classes specified are Svelte components and props are set\n * correctly.\n *\n * @param {object}   config - Svelte config object.\n *\n * @param {*}        [thisArg] - `This` reference to set for invoking any props function.\n *\n * @returns {object} The processed Svelte config object.\n */\nfunction parseTJSSvelteConfig(config, thisArg = void 0)\n{\n   if (!isObject(config))\n   {\n      throw new TypeError(`parseSvelteConfig - 'config' is not an object:\\n${JSON.stringify(config)}.`);\n   }\n\n   if (!isSvelteComponent(config.class))\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'class' is not a Svelte component constructor for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   if (config.hydrate !== void 0 && typeof config.hydrate !== 'boolean')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'hydrate' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   if (config.intro !== void 0 && typeof config.intro !== 'boolean')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'intro' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   if (config.target !== void 0 && typeof config.target !== 'string' && !(config.target instanceof HTMLElement) &&\n    !(config.target instanceof ShadowRoot) && !(config.target instanceof DocumentFragment))\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'target' is not a string, HTMLElement, ShadowRoot, or DocumentFragment for config:\\n${\n        JSON.stringify(config)}.`);\n   }\n\n   if (config.anchor !== void 0 && typeof config.anchor !== 'string' && !(config.anchor instanceof HTMLElement) &&\n    !(config.anchor instanceof ShadowRoot) && !(config.anchor instanceof DocumentFragment))\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'anchor' is not a string, HTMLElement, ShadowRoot, or DocumentFragment for config:\\n${\n        JSON.stringify(config)}.`);\n   }\n\n   if (config.context !== void 0 && typeof config.context !== 'function' && !(config.context instanceof Map) &&\n    !isObject(config.context))\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'context' is not a Map, function or object for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   // Validate extra TyphonJS options --------------------------------------------------------------------------------\n\n   // `selectorTarget` optionally stores a target element found in main element.\n   if (config.selectorTarget !== void 0 && typeof config.selectorTarget !== 'string')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'selectorTarget' is not a string for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   // `options` stores `injectApp`, `injectEventbus`, and `selectorElement`.\n   if (config.options !== void 0 && !isObject(config.options))\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'options' is not an object for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   // Validate TyphonJS standard options.\n   if (config.options !== void 0)\n   {\n      if (config.options.injectApp !== void 0 && typeof config.options.injectApp !== 'boolean')\n      {\n         throw new TypeError(\n          `parseSvelteConfig - 'options.injectApp' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n      }\n\n      if (config.options.injectEventbus !== void 0 && typeof config.options.injectEventbus !== 'boolean')\n      {\n         throw new TypeError(\n          `parseSvelteConfig - 'options.injectEventbus' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n      }\n\n      // `selectorElement` optionally stores a main element selector to be found in a HTMLElement target.\n      if (config.options.selectorElement !== void 0 && typeof config.options.selectorElement !== 'string')\n      {\n         throw new TypeError(\n          `parseSvelteConfig - 'selectorElement' is not a string for config:\\n${JSON.stringify(config)}.`);\n      }\n   }\n\n   const svelteConfig = { ...config };\n\n   // Delete extra Svelte options.\n   delete svelteConfig.options;\n\n   let externalContext = {};\n\n   // If a context callback function is provided then invoke it with `this` being the Foundry app.\n   // If an object is returned it adds the entries to external context.\n   if (typeof svelteConfig.context === 'function')\n   {\n      const contextFunc = svelteConfig.context;\n      delete svelteConfig.context;\n\n      const result = contextFunc.call(thisArg);\n      if (isObject(result))\n      {\n         externalContext = { ...result };\n      }\n      else\n      {\n         throw new Error(`parseSvelteConfig - 'context' is a function that did not return an object for config:\\n${\n          JSON.stringify(config)}`);\n      }\n   }\n   else if (svelteConfig.context instanceof Map)\n   {\n      externalContext = Object.fromEntries(svelteConfig.context);\n      delete svelteConfig.context;\n   }\n   else if (isObject(svelteConfig.context))\n   {\n      externalContext = svelteConfig.context;\n      delete svelteConfig.context;\n   }\n\n   // If a props is a function then invoke it with `this` being the Foundry app.\n   // If an object is returned set it as the props.\n   svelteConfig.props = s_PROCESS_PROPS(svelteConfig.props, thisArg, config);\n\n   // Process children components attaching to external context.\n   if (Array.isArray(svelteConfig.children))\n   {\n      const children = [];\n\n      for (let cntr = 0; cntr < svelteConfig.children.length; cntr++)\n      {\n         const child = svelteConfig.children[cntr];\n\n         if (!isSvelteComponent(child.class))\n         {\n            throw new Error(`parseSvelteConfig - 'class' is not a Svelte component for child[${cntr}] for config:\\n${\n             JSON.stringify(config)}`);\n         }\n\n         child.props = s_PROCESS_PROPS(child.props, thisArg, config);\n\n         children.push(child);\n      }\n\n      if (children.length > 0)\n      {\n         externalContext.children = children;\n      }\n\n      delete svelteConfig.children;\n   }\n   else if (isObject(svelteConfig.children))\n   {\n      if (!isSvelteComponent(svelteConfig.children.class))\n      {\n         throw new Error(`parseSvelteConfig - 'class' is not a Svelte component for children object for config:\\n${\n          JSON.stringify(config)}`);\n      }\n\n      svelteConfig.children.props = s_PROCESS_PROPS(svelteConfig.children.props, thisArg, config);\n\n      externalContext.children = [svelteConfig.children];\n      delete svelteConfig.children;\n   }\n\n   if (!(svelteConfig.context instanceof Map))\n   {\n      svelteConfig.context = new Map();\n   }\n\n   svelteConfig.context.set('#external', externalContext);\n\n   return svelteConfig;\n}\n\n/**\n * Processes Svelte props. Potentially props can be a function to invoke with `thisArg`.\n *\n * @param {object|Function}   props - Svelte props.\n *\n * @param {*}                 thisArg - `This` reference to set for invoking any props function.\n *\n * @param {object}            config - Svelte config\n *\n * @returns {object|void}     Svelte props.\n */\nfunction s_PROCESS_PROPS(props, thisArg, config)\n{\n   // If a props is a function then invoke it with `this` being the Foundry app.\n   // If an object is returned set it as the props.\n   if (typeof props === 'function')\n   {\n      const result = props.call(thisArg);\n      if (isObject(result))\n      {\n         return result;\n      }\n      else\n      {\n         throw new Error(`parseSvelteConfig - 'props' is a function that did not return an object for config:\\n${\n          JSON.stringify(config)}`);\n      }\n   }\n   else if (isObject(props))\n   {\n      return props;\n   }\n   else if (props !== void 0)\n   {\n      throw new Error(\n       `parseSvelteConfig - 'props' is not a function or an object for config:\\n${JSON.stringify(config)}`);\n   }\n\n   return {};\n}\n\nexport { isHMRProxy, isSvelteComponent, isTJSSvelteConfig, outroAndDestroy, parseTJSSvelteConfig };\n//# sourceMappingURL=index.js.map\n","import { linear }             from 'svelte/easing';\n\nimport { lerp }               from '@typhonjs-fvtt/runtime/math/interpolate';\nimport { isObject }           from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * @template T\n *\n * Provides the ability the save / restore application state for positional and UI state such as minimized status.\n *\n * You can restore a saved state with animation; please see the options of {@link ApplicationState.restore}.\n */\nexport class ApplicationState\n{\n   /** @type {T} */\n   #application;\n\n   /** @type {Map<string, ApplicationStateData>} */\n   #dataSaved = new Map();\n\n   /**\n    * @param {T}   application - The application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n\n      Object.seal(this);\n   }\n\n   /**\n    * Returns current application state along with any extra data passed into method.\n    *\n    * @param {object} [extra] - Extra data to add to application state.\n    *\n    * @returns {ApplicationStateData} Passed in object with current application state.\n    */\n   get(extra = {})\n   {\n      return Object.assign(extra, {\n         position: this.#application?.position?.get(),\n         beforeMinimized: this.#application?.position?.state.get({ name: '#beforeMinimized' }),\n         options: Object.assign({}, this.#application?.options),\n         ui: { minimized: this.#application?.reactive?.minimized }\n      });\n   }\n\n   /**\n    * Returns any stored save state by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Saved data set name.\n    *\n    * @returns {ApplicationStateData} The saved data set.\n    */\n   getSave({ name })\n   {\n      if (typeof name !== 'string')\n      {\n         throw new TypeError(`ApplicationState - getSave error: 'name' is not a string.`);\n      }\n\n      return this.#dataSaved.get(name);\n   }\n\n   /**\n    * Removes and returns any application state by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Name to remove and retrieve.\n    *\n    * @returns {ApplicationStateData} Saved application data.\n    */\n   remove({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`ApplicationState - remove: 'name' is not a string.`); }\n\n      const data = this.#dataSaved.get(name);\n      this.#dataSaved.delete(name);\n\n      return data;\n   }\n\n   /**\n    * Restores a saved application state returning the data. Several optional parameters are available\n    * to control whether the restore action occurs silently (no store / inline styles updates), animates\n    * to the stored data, or simply sets the stored data. Restoring via {@link AnimationAPI.to} allows\n    * specification of the duration, easing, and interpolate functions along with configuring a Promise to be\n    * returned if awaiting the end of the animation.\n    *\n    * @param {object}            params - Parameters\n    *\n    * @param {string}            params.name - Saved data set name.\n    *\n    * @param {boolean}           [params.remove=false] - Remove data set.\n    *\n    * @param {boolean}           [params.async=false] - If animating return a Promise that resolves with any saved data.\n    *\n    * @param {boolean}           [params.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [params.duration=0.1] - Duration in seconds.\n    *\n    * @param {Function}          [params.ease=linear] - Easing function.\n    *\n    * @param {Function}          [params.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {ApplicationStateData|Promise<ApplicationStateData>} Saved application data.\n    */\n   restore({ name, remove = false, async = false, animateTo = false, duration = 0.1, ease = linear,\n    interpolate = lerp })\n   {\n      if (typeof name !== 'string')\n      {\n         throw new TypeError(`ApplicationState - restore error: 'name' is not a string.`);\n      }\n\n      const dataSaved = this.#dataSaved.get(name);\n\n      if (dataSaved)\n      {\n         if (remove) { this.#dataSaved.delete(name); }\n\n         if (async)\n         {\n            return this.set(dataSaved, { async, animateTo, duration, ease, interpolate }).then(() => dataSaved);\n         }\n         else\n         {\n            this.set(dataSaved, { async, animateTo, duration, ease, interpolate });\n         }\n      }\n\n      return dataSaved;\n   }\n\n   /**\n    * Saves current application state with the opportunity to add extra data to the saved state.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - name to index this saved data.\n    *\n    * @param {...*}     [options.extra] - Extra data to add to saved data.\n    *\n    * @returns {ApplicationStateData} Current application data\n    */\n   save({ name, ...extra })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`ApplicationState - save error: 'name' is not a string.`); }\n\n      const data = this.get(extra);\n\n      this.#dataSaved.set(name, data);\n\n      return data;\n   }\n\n   /**\n    * Restores a saved application state returning the data. Several optional parameters are available\n    * to control whether the restore action occurs silently (no store / inline styles updates), animates\n    * to the stored data, or simply sets the stored data. Restoring via {@link AnimationAPI.to} allows\n    * specification of the duration, easing, and interpolate functions along with configuring a Promise to be\n    * returned if awaiting the end of the animation.\n    *\n    * Note: If serializing application state any minimized apps will use the before minimized state on initial render\n    * of the app as it is currently not possible to render apps with Foundry VTT core API in the minimized state.\n    *\n    * TODO: THIS METHOD NEEDS TO BE REFACTORED WHEN TRL IS MADE INTO A STANDALONE FRAMEWORK.\n    *\n    * @param {ApplicationStateData}   data - Saved data set name.\n    *\n    * @param {object}            [opts] - Optional parameters\n    *\n    * @param {boolean}           [opts.async=false] - If animating return a Promise that resolves with any saved data.\n    *\n    * @param {boolean}           [opts.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [opts.duration=0.1] - Duration in seconds.\n    *\n    * @param {Function}          [opts.ease=linear] - Easing function.\n    *\n    * @param {Function}          [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {T | Promise<T>} When synchronous the application or Promise when animating resolving with application.\n    */\n   set(data, { async = false, animateTo = false, duration = 0.1, ease = linear, interpolate = lerp } = {})\n   {\n      if (!isObject(data))\n      {\n         throw new TypeError(`ApplicationState - restore error: 'data' is not an object.`);\n      }\n\n      const application = this.#application;\n\n      if (!isObject(data?.position))\n      {\n         console.warn(`ApplicationState.set warning: 'data.position' is not an object.`);\n         return application;\n      }\n\n      // TODO: TAKE NOTE THAT WE ARE ACCESSING A FOUNDRY APP v1 GETTER HERE TO DETERMINE IF APPLICATION IS RENDERED.\n      // TODO: THIS NEEDS TO BE REFACTORED WHEN CONVERTING TRL TO A GENERIC FRAMEWORK.\n      const rendered = application.rendered;\n\n      if (animateTo && !rendered)\n      {\n         console.warn(`ApplicationState.set warning: Application is not rendered and 'animateTo' is true.`);\n         return application;\n      }\n\n      // Update data directly with no store or inline style updates.\n      if (animateTo)  // Animate to saved data.\n      {\n         // Provide special handling to potentially change transform origin as this parameter is not animated.\n         if (data.position.transformOrigin !== application.position.transformOrigin)\n         {\n            application.position.transformOrigin = data.position.transformOrigin;\n         }\n\n         if (isObject(data?.ui))\n         {\n            const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n            if (application?.reactive?.minimized && !minimized)\n            {\n               application.maximize({ animate: false, duration: 0 });\n            }\n         }\n\n         const promise = application.position.animate.to(data.position,\n          { duration, ease, interpolate }).finished.then((cancelled) =>\n         {\n            if (cancelled) { return application; }\n\n            // Merge in saved options to application.\n            if (isObject(data?.options))\n            {\n               application?.reactive.mergeOptions(data.options);\n            }\n\n            if (isObject(data?.ui))\n            {\n               const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n               // Application is currently minimized and stored state is not, so reset minimized state without\n               // animation.\n               if (!application?.reactive?.minimized && minimized)\n               {\n                  application.minimize({ animate: false, duration: 0 });\n               }\n            }\n\n            if (isObject(data?.beforeMinimized))\n            {\n               application.position.state.set({ name: '#beforeMinimized', ...data.beforeMinimized });\n            }\n\n            return application;\n         });\n\n         // Return a Promise with the application that resolves after animation ends.\n         if (async) { return promise; }\n      }\n      else\n      {\n         if (rendered)\n         {\n            // Merge in saved options to application.\n            if (isObject(data?.options))\n            {\n               application?.reactive.mergeOptions(data.options);\n            }\n\n            if (isObject(data?.ui))\n            {\n               const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n               // Application is currently minimized and stored state is not, so reset minimized state without\n               // animation.\n               if (application?.reactive?.minimized && !minimized)\n               {\n                  application.maximize({ animate: false, duration: 0 });\n               }\n               else if (!application?.reactive?.minimized && minimized)\n               {\n                  application.minimize({ animate: false, duration });\n               }\n            }\n\n            if (isObject(data?.beforeMinimized))\n            {\n               application.position.state.set({ name: '#beforeMinimized', ...data.beforeMinimized });\n            }\n\n            // Default options is to set data for an immediate update.\n            application.position.set(data.position);\n         }\n         else\n         {\n            // When not rendered set position to the 'beforeMinimized' data if it exists otherwise set w/ 'position'.\n            // Currently, w/ Foundry core Application API it is impossible to initially render an app in the minimized\n            // state.\n\n            let positionData = data.position;\n\n            if (isObject(data.beforeMinimized))\n            {\n               // Take before minimized data.\n               positionData = data.beforeMinimized;\n\n               // Apply position left / top to before minimized data. This covers the case when an app is minimized,\n               // but then moved. This allows restoration of the before minimized parameters w/ the last position\n               // location.\n               positionData.left = data.position.left;\n               positionData.top = data.position.top;\n            }\n\n            application.position.set(positionData);\n         }\n      }\n\n      return application;\n   }\n}\n\n/**\n * @typedef {object} ApplicationStateData\n *\n * @property {import('@typhonjs-fvtt/runtime/svelte/store/position').TJSPositionDataExtended}   position Application position.\n *\n * @property {object}         beforeMinimized Any application saved position state for #beforeMinimized\n *\n * @property {object}         options Application options.\n *\n * @property {object}         ui Application UI state.\n */\n","/**\n * Provides a mechanism to retrieve and query all mounted Svelte components including the main application shell.\n */\nexport class GetSvelteData\n{\n   /** @type {import('./types').MountedAppShell[] | null[]} */\n   #applicationShellHolder;\n\n   /** @type {import('./types').SvelteData[]} */\n   #svelteData;\n\n   /**\n    * Keep a direct reference to the SvelteData array in an associated {@link SvelteApplication}.\n    *\n    * @param {import('./types').MountedAppShell[] | null[]}  applicationShellHolder - A reference to the\n    *        MountedAppShell array.\n    *\n    * @param {import('./types').SvelteData[]}  svelteData - A reference to the SvelteData array of mounted components.\n    */\n   constructor(applicationShellHolder, svelteData)\n   {\n      this.#applicationShellHolder = applicationShellHolder;\n      this.#svelteData = svelteData;\n   }\n\n   /**\n    * Returns any mounted {@link MountedAppShell}.\n    *\n    * @returns {import('./types').MountedAppShell | null} Any mounted application shell.\n    */\n   get applicationShell() { return this.#applicationShellHolder[0]; }\n\n   /**\n    * Returns the indexed Svelte component.\n    *\n    * @param {number}   index -\n    *\n    * @returns {object} The loaded Svelte component.\n    */\n   component(index)\n   {\n      const data = this.#svelteData[index];\n      return data?.component ?? void 0;\n   }\n\n   /**\n    * Returns the Svelte component entries iterator.\n    *\n    * @returns {IterableIterator<[number, import('svelte').SvelteComponent]>} Svelte component entries iterator.\n    * @yields\n    */\n   *componentEntries()\n   {\n      for (let cntr = 0; cntr < this.#svelteData.length; cntr++)\n      {\n         yield [cntr, this.#svelteData[cntr].component];\n      }\n   }\n\n   /**\n    * Returns the Svelte component values iterator.\n    *\n    * @returns {IterableIterator<import('svelte').SvelteComponent>} Svelte component values iterator.\n    * @yields\n    */\n   *componentValues()\n   {\n      for (let cntr = 0; cntr < this.#svelteData.length; cntr++)\n      {\n         yield this.#svelteData[cntr].component;\n      }\n   }\n\n   /**\n    * Returns the indexed SvelteData entry.\n    *\n    * @param {number}   index - The index of SvelteData instance to retrieve.\n    *\n    * @returns {import('./types').SvelteData} The loaded Svelte config + component.\n    */\n   data(index)\n   {\n      return this.#svelteData[index];\n   }\n\n   /**\n    * Returns the {@link SvelteData} instance for a given component.\n    *\n    * @param {import('svelte').SvelteComponent} component - Svelte component.\n    *\n    * @returns {import('./types').SvelteData} -  The loaded Svelte config + component.\n    */\n   dataByComponent(component)\n   {\n      for (const data of this.#svelteData)\n      {\n         if (data.component === component) { return data; }\n      }\n\n      return void 0;\n   }\n\n   /**\n    * Returns the SvelteData entries iterator.\n    *\n    * @returns {IterableIterator<[number, import('./types').SvelteData]>} SvelteData entries iterator.\n    */\n   dataEntries()\n   {\n      return this.#svelteData.entries();\n   }\n\n   /**\n    * Returns the SvelteData values iterator.\n    *\n    * @returns {IterableIterator<import('./types').SvelteData>} SvelteData values iterator.\n    */\n   dataValues()\n   {\n      return this.#svelteData.values();\n   }\n\n   /**\n    * Returns the length of the mounted Svelte component list.\n    *\n    * @returns {number} Length of mounted Svelte component list.\n    */\n   get length()\n   {\n      return this.#svelteData.length;\n   }\n}\n","import { writable, get } from 'svelte/store';\n\n/**\n * Generates derived, readable, writable helper functions wrapping the given Storage API provided with any additional\n * customization for data serialization. By default, JSON serialization is used.\n *\n * @param {object}   opts - Generator options.\n *\n * @param {Storage}  storage - The web storage source.\n *\n * @param {(value: any, ...rest: any[]) => string}  [opts.serialize] - Replace with custom serialization;\n *        default: `JSON.stringify`.\n *\n * @param {(value: string, ...rest: any[]) => any}  [opts.deserialize] - Replace with custom deserialization;\n *        default: `JSON.parse`.\n *\n * @returns {StorageStores} A complete set of store helper functions and associated storage API instance and\n *          serialization strategy.\n */\nfunction storeGenerator({ storage, serialize = JSON.stringify, deserialize = JSON.parse }) {\n    function isSimpleDeriver(deriver) {\n        return deriver.length < 2;\n    }\n    function storageReadable(key, value, start) {\n        return {\n            subscribe: storageWritable(key, value, start).subscribe\n        };\n    }\n    function storageWritable(key, value, start) {\n        function wrap_start(ogSet) {\n            return start(function wrap_set(new_value) {\n                if (storage) {\n                    storage.setItem(key, serialize(new_value));\n                }\n                return ogSet(new_value);\n            }, function wrap_update(fn) {\n                set(fn(get(ogStore)));\n            });\n        }\n        if (storage) {\n            const storageValue = storage.getItem(key);\n            try {\n                if (storageValue) {\n                    value = deserialize(storageValue);\n                }\n            }\n            catch (err) { /**/ }\n            storage.setItem(key, serialize(value));\n        }\n        const ogStore = writable(value, start ? wrap_start : void 0);\n        function set(new_value) {\n            if (storage) {\n                storage.setItem(key, serialize(new_value));\n            }\n            ogStore.set(new_value);\n        }\n        function update(fn) {\n            set(fn(get(ogStore)));\n        }\n        function subscribe(run, invalidate) {\n            return ogStore.subscribe(run, invalidate);\n        }\n        return { set, update, subscribe };\n    }\n    function storageDerived(key, stores, fn, initial_value) {\n        const single = !Array.isArray(stores);\n        const stores_array = single ? [stores] : stores;\n        if (storage && storage.getItem(key)) {\n            try {\n                initial_value = deserialize(storage.getItem(key));\n            }\n            catch (err) { /**/ }\n        }\n        return storageReadable(key, initial_value, (set, update) => {\n            let inited = false;\n            const values = [];\n            let pending = 0;\n            let cleanup;\n            const sync = () => {\n                if (pending) {\n                    return;\n                }\n                cleanup?.();\n                const input = single ? values[0] : values;\n                if (isSimpleDeriver(fn)) {\n                    set(fn(input));\n                }\n                else {\n                    const result = fn(input, set, update);\n                    if (typeof result === 'function') {\n                        cleanup = result;\n                    }\n                }\n            };\n            const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n                values[i] = value;\n                pending &= ~(1 << i);\n                if (inited) {\n                    sync();\n                }\n            }, () => { pending |= (1 << i); }));\n            inited = true;\n            sync();\n            return function stop() {\n                // Equivalent to run_all from Svelte internals.\n                unsubscribers.forEach((unsubscriber) => unsubscriber());\n                cleanup?.();\n            };\n        });\n    }\n    return {\n        readable: storageReadable,\n        writable: storageWritable,\n        derived: storageDerived,\n        storage,\n        serialize,\n        deserialize\n    };\n}\n\n/**\n * Provides all Storage API enabled `localStorage` store helper functions. Data is serialized as JSON.\n */\nconst localStores = storeGenerator({ storage: globalThis?.localStorage });\n/**\n * Provides the Storage API enabled derived `localStorage` store helper function. Data is serialized as JSON.\n */\nlocalStores.derived;\n/**\n * Provides the Storage API enabled readable `localStorage` store helper function. Data is serialized as JSON.\n */\nlocalStores.readable;\n/**\n * Provides the Storage API enabled writable `localStorage` store helper function. Data is serialized as JSON.\n */\nlocalStores.writable;\n\n/**\n * Provides all Storage API enabled `sessionStorage` store helper functions. Data is serialized as JSON.\n */\nconst sessionStores = storeGenerator({ storage: globalThis?.sessionStorage });\n/**\n * Provides the Storage API enabled derived `sessionStorage` store helper function. Data is serialized as JSON.\n */\nsessionStores.derived;\n/**\n * Provides the Storage API enabled readable `sessionStorage` store helper function. Data is serialized as JSON.\n */\nsessionStores.readable;\n/**\n * Provides the Storage API enabled writable `sessionStorage` store helper function. Data is serialized as JSON.\n */\nsessionStores.writable;\n\n/**\n * Provides the base Storage API store manager. It is recommended to use {@link TJSLocalStorage} &\n * {@link TJSSessionStorage} for standard browser local and session storage use cases. TJSWebStorage exists\n * to provide additional customization options for custom Storage API compatible storage instances and custom\n * serialization configuration.\n */\nclass TJSWebStorage\n{\n   /** @type {import('./').StorageStores} */\n   #storageStores;\n\n   /**\n    * @type {(Map<string, {\n    *    store: import('svelte/store').Writable,\n    *    deserialize?: (value: string, ...rest: any[]) => any,\n    *    serialize?: (value: any, ...rest: any[]) => string\n    * }>)}\n    */\n   #stores = new Map();\n\n   /**\n    * @param {import('./').StorageStores} storageStores - Provides a complete set of\n    *        storage API store helper functions and the associated storage API instance and serializations strategy.\n    */\n   constructor(storageStores)\n   {\n      this.#storageStores = storageStores;\n   }\n\n\n   /**\n    * @param {string}   key - Storage key.\n    *\n    * @returns {(value: string, ...rest: any[]) => any} Deserialize function.\n    */\n   #getDeserialize(key)\n   {\n      return this.#stores.get(key)?.deserialize ?? this.#storageStores.deserialize;\n   }\n\n\n   /**\n    * @param {string}   key - Storage key.\n    *\n    * @returns {(value: any, ...rest: any[]) => string} Serialize function.\n    */\n   #getSerialize(key)\n   {\n      return this.#stores.get(key)?.serialize ?? this.#storageStores.serialize;\n   }\n\n   /**\n    * Creates a new store for the given key.\n    *\n    * @template T\n    *\n    * @param {string}   key - Key to lookup in stores map.\n    *\n    * @param {T}        [defaultValue] - A default value to set for the store.\n    *\n    * @param {import('./').StorageStores} [storageStores] - Additional store creation options.\n    *\n    * @returns {import('svelte/store').Writable<T>} The new store.\n    */\n   #createStore(key, defaultValue = void 0, storageStores)\n   {\n      try\n      {\n         const value = this.#storageStores.storage.getItem(key);\n         if (value !== null)\n         {\n            const deserialize = storageStores?.deserialize ?? this.#storageStores.deserialize;\n            defaultValue = deserialize(value);\n         }\n      }\n      catch (err) { /**/ }\n\n      const writable = storageStores?.writable ?? this.#storageStores.writable;\n\n      return writable(key, defaultValue);\n   }\n\n   /**\n    * Gets a store from the `stores` Map or creates a new store for the key and a given default value.\n    *\n    * @template T\n    *\n    * @param {string}   key - Key to lookup in stores map.\n    *\n    * @param {T}        [defaultValue] - A default value to set for the store.\n    *\n    * @param {import('./').StorageStores} [storageStores] - Additional store creation options.\n    *\n    * @returns {import('svelte/store').Writable<T>} The store for the given key.\n    */\n   #getStore(key, defaultValue = void 0, storageStores)\n   {\n      const storeEntry = this.#stores.get(key);\n      if (storeEntry) { return storeEntry.store; }\n\n      const store = this.#createStore(key, defaultValue, storageStores);\n\n      // Set any key specific storage helper details.\n      this.#stores.set(key, {\n         store,\n         deserialize: storageStores?.deserialize,\n         serialize: storageStores?.serialize\n      });\n\n      return store;\n   }\n\n   /**\n    * Get value from the storage API.\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    *\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {*} Value from session storage or if not defined any default value provided.\n    */\n   getItem(key, defaultValue)\n   {\n      let value = defaultValue;\n\n      const storageValue = this.#storageStores.storage.getItem(key);\n\n      if (storageValue !== null)\n      {\n         try\n         {\n            value = this.#getDeserialize(key)(storageValue);\n         }\n         catch (err)\n         {\n            value = defaultValue;\n         }\n      }\n      else if (defaultValue !== void 0)\n      {\n         try\n         {\n            const newValue = this.#getSerialize(key)(defaultValue);\n\n            // If there is no existing storage value and defaultValue is defined the storage value needs to be set.\n            this.#storageStores.storage.setItem(key, newValue);\n         }\n         catch (err) { /* */ }\n      }\n\n      return value;\n   }\n\n   /**\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\n    * is not already set.\n    *\n    * @template T\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    *\n    * @param {T}        [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @param {import('./').StorageStores} [storageStores] - Additional store creation options.\n    *\n    * @returns {import('svelte/store').Writable<T>} The Svelte store for this key.\n    */\n   getStore(key, defaultValue, storageStores)\n   {\n      return this.#getStore(key, defaultValue, storageStores);\n   }\n\n   /**\n    * Sets the value for the given key in storage API.\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    *\n    * @param {*}        value - A value to set for this key.\n    */\n   setItem(key, value)\n   {\n      const store = this.#getStore(key);\n      store.set(value);\n   }\n\n   /**\n    * Convenience method to swap a boolean value stored in storage API.\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    *\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {boolean} The boolean swap for the given key.\n    */\n   swapItemBoolean(key, defaultValue)\n   {\n      const store = this.#getStore(key, defaultValue);\n\n      let currentValue = false;\n\n      try\n      {\n         currentValue = !!this.#getDeserialize(key)(this.#storageStores.storage.getItem(key));\n      }\n      catch (err) { /**/ }\n\n      const newValue = typeof currentValue === 'boolean' ? !currentValue : false;\n\n      store.set(newValue);\n      return newValue;\n   }\n}\n\n/**\n * Provides a {@link TJSWebStorage} instance for standard browser local storage use cases.\n */\nclass TJSLocalStorage extends TJSWebStorage\n{\n   constructor()\n   {\n      super(localStores);\n   }\n}\n\n/**\n * Provides a {@link TJSWebStorage} instance for standard browser session storage use cases.\n */\nclass TJSSessionStorage extends TJSWebStorage\n{\n   constructor()\n   {\n      super(sessionStores);\n   }\n}\n\nexport { TJSLocalStorage, TJSSessionStorage, TJSWebStorage, localStores, sessionStores, storeGenerator };\n//# sourceMappingURL=index.js.map\n","import { derived, writable }     from 'svelte/store';\n\nimport {\n   TJSSessionStorage,\n   TJSWebStorage }               from '@typhonjs-fvtt/runtime/svelte/store/web-storage';\n\nimport { propertyStore }         from '@typhonjs-fvtt/runtime/svelte/store/writable-derived';\n\nimport {\n   deepMerge,\n   safeAccess,\n   safeSet }                     from '@typhonjs-fvtt/runtime/util/object';\n\nimport { subscribeIgnoreFirst }  from '@typhonjs-fvtt/runtime/util/store';\n\n/**\n * Contains the reactive functionality / Svelte stores associated with SvelteApplication and retrievable by\n * {@link SvelteApplication.reactive}.\n *\n * There are several reactive getters for UI state such and for two-way bindings / stores see\n * {@link SvelteReactive.storeUIState}:\n * - {@link SvelteReactive.dragging}\n * - {@link SvelteReactive.minimized}\n * - {@link SvelteReactive.resizing}\n *\n * There are also reactive getters / setters for {@link SvelteApplicationOptions} and Foundry\n * {@link ApplicationOptions}. You can use the following as one way bindings and update the associated stores. For\n * two-way bindings / stores see {@link SvelteReactive.storeAppOptions}.\n *\n * - {@link SvelteReactive.draggable}\n * - {@link SvelteReactive.focusAuto}\n * - {@link SvelteReactive.focusKeep}\n * - {@link SvelteReactive.focusTrap}\n * - {@link SvelteReactive.headerButtonNoClose}\n * - {@link SvelteReactive.headerButtonNoLabel}\n * - {@link SvelteReactive.headerIcon}\n * - {@link SvelteReactive.headerNoTitleMinimized}\n * - {@link SvelteReactive.minimizable}\n * - {@link SvelteReactive.popOut}\n * - {@link SvelteReactive.positionable}\n * - {@link SvelteReactive.resizable}\n * - {@link SvelteReactive.title}\n *\n * An instance of TJSWebStorage (session) / TJSSessionStorage is accessible via {@link SvelteReactive.sessionStorage}.\n * Optionally you can pass in an existing TJSWebStorage instance that can be shared across multiple SvelteApplications\n * by setting {@link SvelteApplicationOptions.sessionStorage}.\n *\n * -------------------------------------------------------------------------------------------------------------------\n *\n * This API is not sealed, and it is recommended that you extend it with accessors to get / set data that is reactive\n * in your application. An example of setting an exported prop `document` from the main mounted application shell.\n *\n * @example\n * import { hasSetter } from '@typhonjs-fvtt/runtime/svelte/util';\n *\n * // Note: make a normal comment.\n * //  * @member {object} document - Adds accessors to SvelteReactive to get / set the document associated with\n * //  *                             Document with the mounted application shell Svelte component.\n * //  *\n * //  * @memberof SvelteReactive#\n * //  *\n * Object.defineProperty(this.reactive, 'document', {\n *    get: () => this.svelte?.applicationShell?.document,\n *    set: (document) =>\n *    {\n *       const component = this.svelte?.applicationShell;\n *       if (hasSetter(component, 'document')) { component.document = document; }\n *    }\n * });\n */\nexport class SvelteReactive\n{\n   /**\n    * @type {import('../SvelteApplication').SvelteApplication}\n    */\n   #application;\n\n   /**\n    * @type {boolean}\n    */\n   #initialized = false;\n\n   /** @type {import('@typhonjs-fvtt/runtime/svelte/store/web-storage').TJSWebStorage} */\n   #sessionStorage;\n\n   /**\n    * The Application option store which is injected into mounted Svelte component context under the `external` key.\n    *\n    * @type {import('./types').StoreAppOptions}\n    */\n   #storeAppOptions;\n\n   /**\n    * Stores the update function for `#storeAppOptions`.\n    *\n    * @type {(this: void, updater: import('svelte/store').Updater<object>) => void}\n    */\n   #storeAppOptionsUpdate;\n\n   /**\n    * Stores the UI state data to make it accessible via getters.\n    *\n    * @type {object}\n    */\n   #dataUIState;\n\n   /**\n    * The UI option store which is injected into mounted Svelte component context under the `external` key.\n    *\n    * @type {import('./types').StoreUIOptions}\n    */\n   #storeUIState;\n\n   /**\n    * Stores the update function for `#storeUIState`.\n    *\n    * @type {(this: void, updater: import('svelte/store').Updater<object>) => void}\n    */\n   #storeUIStateUpdate;\n\n   /**\n    * Stores the unsubscribe functions from local store subscriptions.\n    *\n    * @type {import('svelte/store').Unsubscriber[]}\n    */\n   #storeUnsubscribe = [];\n\n   /**\n    * @param {import('../SvelteApplication').SvelteApplication} application - The host Foundry application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n      const optionsSessionStorage = application?.options?.sessionStorage;\n\n      if (optionsSessionStorage !== void 0 && !(optionsSessionStorage instanceof TJSWebStorage))\n      {\n         throw new TypeError(`'options.sessionStorage' is not an instance of TJSWebStorage.`);\n      }\n\n      // If no external web storage API instance is available then create a TJSSessionStorage instance.\n      this.#sessionStorage = optionsSessionStorage !== void 0 ? optionsSessionStorage : new TJSSessionStorage();\n   }\n\n   /**\n    * Initializes reactive support. Package private for internal use.\n    *\n    * @returns {SvelteReactiveStores | undefined} Internal methods to interact with Svelte stores.\n    * @package\n    * @internal\n    */\n   initialize()\n   {\n      if (this.#initialized) { return; }\n\n      this.#initialized = true;\n\n      this.#storesInitialize();\n\n      return {\n         appOptionsUpdate: this.#storeAppOptionsUpdate,\n         uiStateUpdate: this.#storeUIStateUpdate,\n         subscribe: this.#storesSubscribe.bind(this),\n         unsubscribe: this.#storesUnsubscribe.bind(this)\n      };\n   }\n\n// Store getters -----------------------------------------------------------------------------------------------------\n\n   /**\n    * @returns {import('@typhonjs-fvtt/runtime/svelte/store/web-storage').TJSWebStorage} Returns TJSWebStorage (session) instance.\n    */\n   get sessionStorage()\n   {\n      return this.#sessionStorage;\n   }\n\n   /**\n    * Returns the store for app options.\n    *\n    * @returns {import('./types').StoreAppOptions} App options store.\n    */\n   get storeAppOptions() { return this.#storeAppOptions; }\n\n   /**\n    * Returns the store for UI options.\n    *\n    * @returns {import('./types').StoreUIOptions} UI options store.\n    */\n   get storeUIState() { return this.#storeUIState; }\n\n// Only reactive getters ---------------------------------------------------------------------------------------------\n\n   /**\n    * Returns the current dragging UI state.\n    *\n    * @returns {boolean} Dragging UI state.\n    */\n   get dragging() { return this.#dataUIState.dragging; }\n\n   /**\n    * Returns the current minimized UI state.\n    *\n    * @returns {boolean} Minimized UI state.\n    */\n   get minimized() { return this.#dataUIState.minimized; }\n\n   /**\n    * Returns the current resizing UI state.\n    *\n    * @returns {boolean} Resizing UI state.\n    */\n   get resizing() { return this.#dataUIState.resizing; }\n\n// Reactive getter / setters -----------------------------------------------------------------------------------------\n\n   /**\n    * Returns the draggable app option.\n    *\n    * @returns {boolean} Draggable app option.\n    */\n   get draggable() { return this.#application?.options?.draggable; }\n\n   /**\n    * Returns the focusAuto app option.\n    *\n    * @returns {boolean} When true auto-management of app focus is enabled.\n    */\n   get focusAuto() { return this.#application?.options?.focusAuto; }\n\n   /**\n    * Returns the focusKeep app option.\n    *\n    * @returns {boolean} When `focusAuto` and `focusKeep` is true; keeps internal focus.\n    */\n   get focusKeep() { return this.#application?.options?.focusKeep; }\n\n   /**\n    * Returns the focusTrap app option.\n    *\n    * @returns {boolean} When true focus trapping / wrapping is enabled keeping focus inside app.\n    */\n   get focusTrap() { return this.#application?.options?.focusTrap; }\n\n   /**\n    * Returns the headerButtonNoClose app option.\n    *\n    * @returns {boolean} Remove the close the button in header app option.\n    */\n   get headerButtonNoClose() { return this.#application?.options?.headerButtonNoClose; }\n\n   /**\n    * Returns the headerButtonNoLabel app option.\n    *\n    * @returns {boolean} Remove the labels from buttons in header app option.\n    */\n   get headerButtonNoLabel() { return this.#application?.options?.headerButtonNoLabel; }\n\n   /**\n    * Returns the headerIcon app option.\n    *\n    * @returns {string|void} URL for header app icon.\n    */\n   get headerIcon() { return this.#application?.options?.headerIcon; }\n\n   /**\n    * Returns the headerNoTitleMinimized app option.\n    *\n    * @returns {boolean} When true removes the header title when minimized.\n    */\n   get headerNoTitleMinimized() { return this.#application?.options?.headerNoTitleMinimized; }\n\n   /**\n    * Returns the minimizable app option.\n    *\n    * @returns {boolean} Minimizable app option.\n    */\n   get minimizable() { return this.#application?.options?.minimizable; }\n\n   /**\n    * Returns the Foundry popOut state; {@link Application.popOut}\n    *\n    * @returns {boolean} Positionable app option.\n    */\n   get popOut() { return this.#application.popOut; }\n\n   /**\n    * Returns the positionable app option; {@link SvelteApplicationOptions.positionable}\n    *\n    * @returns {boolean} Positionable app option.\n    */\n   get positionable() { return this.#application?.options?.positionable; }\n\n   /**\n    * Returns the resizable option.\n    *\n    * @returns {boolean} Resizable app option.\n    */\n   get resizable() { return this.#application?.options?.resizable; }\n\n   /**\n    * Returns the title accessor from the parent Application class; {@link Application.title}\n    * TODO: Application v2; note that super.title localizes `this.options.title`; IMHO it shouldn't.\n    *\n    * @returns {string} Title.\n    */\n   get title() { return this.#application.title; }\n\n   /**\n    * Sets `this.options.draggable` which is reactive for application shells.\n    *\n    * @param {boolean}  draggable - Sets the draggable option.\n    */\n   set draggable(draggable)\n   {\n      if (typeof draggable === 'boolean') { this.setOptions('draggable', draggable); }\n   }\n\n   /**\n    * Sets `this.options.focusAuto` which is reactive for application shells.\n    *\n    * @param {boolean}  focusAuto - Sets the focusAuto option.\n    */\n   set focusAuto(focusAuto)\n   {\n      if (typeof focusAuto === 'boolean') { this.setOptions('focusAuto', focusAuto); }\n   }\n\n   /**\n    * Sets `this.options.focusKeep` which is reactive for application shells.\n    *\n    * @param {boolean}  focusKeep - Sets the focusKeep option.\n    */\n   set focusKeep(focusKeep)\n   {\n      if (typeof focusKeep === 'boolean') { this.setOptions('focusKeep', focusKeep); }\n   }\n\n   /**\n    * Sets `this.options.focusTrap` which is reactive for application shells.\n    *\n    * @param {boolean}  focusTrap - Sets the focusTrap option.\n    */\n   set focusTrap(focusTrap)\n   {\n      if (typeof focusTrap === 'boolean') { this.setOptions('focusTrap', focusTrap); }\n   }\n\n   /**\n    * Sets `this.options.headerButtonNoClose` which is reactive for application shells.\n    *\n    * @param {boolean}  headerButtonNoClose - Sets the headerButtonNoClose option.\n    */\n   set headerButtonNoClose(headerButtonNoClose)\n   {\n      if (typeof headerButtonNoClose === 'boolean') { this.setOptions('headerButtonNoClose', headerButtonNoClose); }\n   }\n\n   /**\n    * Sets `this.options.headerButtonNoLabel` which is reactive for application shells.\n    *\n    * @param {boolean}  headerButtonNoLabel - Sets the headerButtonNoLabel option.\n    */\n   set headerButtonNoLabel(headerButtonNoLabel)\n   {\n      if (typeof headerButtonNoLabel === 'boolean') { this.setOptions('headerButtonNoLabel', headerButtonNoLabel); }\n   }\n\n   /**\n    * Sets `this.options.headerIcon` which is reactive for application shells.\n    *\n    * @param {string | undefined}  headerIcon - Sets the headerButtonNoLabel option.\n    */\n   set headerIcon(headerIcon)\n   {\n      if (headerIcon === void 0 || typeof headerIcon === 'string') { this.setOptions('headerIcon', headerIcon); }\n   }\n\n   /**\n    * Sets `this.options.headerNoTitleMinimized` which is reactive for application shells.\n    *\n    * @param {boolean}  headerNoTitleMinimized - Sets the headerNoTitleMinimized option.\n    */\n   set headerNoTitleMinimized(headerNoTitleMinimized)\n   {\n      if (typeof headerNoTitleMinimized === 'boolean')\n      {\n         this.setOptions('headerNoTitleMinimized', headerNoTitleMinimized);\n      }\n   }\n\n   /**\n    * Sets `this.options.minimizable` which is reactive for application shells that are also pop out.\n    *\n    * @param {boolean}  minimizable - Sets the minimizable option.\n    */\n   set minimizable(minimizable)\n   {\n      if (typeof minimizable === 'boolean') { this.setOptions('minimizable', minimizable); }\n   }\n\n   /**\n    * Sets `this.options.popOut` which is reactive for application shells. This will add / remove this application\n    * from `ui.windows`.\n    *\n    * @param {boolean}  popOut - Sets the popOut option.\n    */\n   set popOut(popOut)\n   {\n      if (typeof popOut === 'boolean') { this.setOptions('popOut', popOut); }\n   }\n\n   /**\n    * Sets `this.options.positionable` enabling / disabling {@link SvelteApplication.position}.\n    *\n    * @param {boolean}  positionable - Sets the positionable option.\n    */\n   set positionable(positionable)\n   {\n      if (typeof positionable === 'boolean') { this.setOptions('positionable', positionable); }\n   }\n\n   /**\n    * Sets `this.options.resizable` which is reactive for application shells.\n    *\n    * @param {boolean}  resizable - Sets the resizable option.\n    */\n   set resizable(resizable)\n   {\n      if (typeof resizable === 'boolean') { this.setOptions('resizable', resizable); }\n   }\n\n   /**\n    * Sets `this.options.title` which is reactive for application shells.\n    *\n    * Note: Will set empty string if title is undefined or null.\n    *\n    * @param {string | undefined | null}   title - Application title; will be localized, so a translation key is fine.\n    */\n   set title(title)\n   {\n      if (typeof title === 'string')\n      {\n         this.setOptions('title', title);\n      }\n      else if (title === void 0 || title === null)\n      {\n         this.setOptions('title', '');\n      }\n   }\n\n   // Reactive Options API -------------------------------------------------------------------------------------------\n\n   /**\n    * Provides a way to safely get this applications options given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * // TODO DOCUMENT the accessor in more detail.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {*}        [defaultValue] - A default value returned if the accessor is not found.\n    *\n    * @returns {*} Value at the accessor.\n    */\n   getOptions(accessor, defaultValue)\n   {\n      return safeAccess(this.#application.options, accessor, defaultValue);\n   }\n\n   /**\n    * Provides a way to merge `options` into this applications options and update the appOptions store.\n    *\n    * @param {object}   options - The options object to merge with `this.options`.\n    */\n   mergeOptions(options)\n   {\n      this.#storeAppOptionsUpdate((instanceOptions) => deepMerge(instanceOptions, options));\n   }\n\n   /**\n    * Provides a way to safely set this applications options given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * Additionally if an application shell Svelte component is mounted and exports the `appOptions` property then\n    * the application options is set to `appOptions` potentially updating the application shell / Svelte component.\n    *\n    * // TODO DOCUMENT the accessor in more detail.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {any}      value - Value to set.\n    */\n   setOptions(accessor, value)\n   {\n      const success = safeSet(this.#application.options, accessor, value);\n\n      // If `this.options` modified then update the app options store.\n      if (success)\n      {\n         this.#storeAppOptionsUpdate(() => this.#application.options);\n      }\n   }\n\n   /**\n    * Initializes the Svelte stores and derived stores for the application options and UI state.\n    *\n    * While writable stores are created the update method is stored in private variables locally and derived Readable\n    * stores are provided for essential options which are commonly used.\n    *\n    * These stores are injected into all Svelte components mounted under the `external` context: `storeAppOptions` and\n    * `storeUIState`.\n    */\n   #storesInitialize()\n   {\n      const writableAppOptions = writable(this.#application.options);\n\n      // Keep the update function locally, but make the store essentially readable.\n      this.#storeAppOptionsUpdate = writableAppOptions.update;\n\n      /**\n       * Create custom store. The main subscribe method for all app options changes is provided along with derived\n       * writable stores for all reactive options.\n       *\n       * @type {import('./types').StoreAppOptions}\n       */\n      const storeAppOptions = {\n         subscribe: writableAppOptions.subscribe,\n\n         draggable: propertyStore(writableAppOptions, 'draggable'),\n         focusAuto: propertyStore(writableAppOptions, 'focusAuto'),\n         focusKeep: propertyStore(writableAppOptions, 'focusKeep'),\n         focusTrap: propertyStore(writableAppOptions, 'focusTrap'),\n         headerButtonNoClose: propertyStore(writableAppOptions, 'headerButtonNoClose'),\n         headerButtonNoLabel: propertyStore(writableAppOptions, 'headerButtonNoLabel'),\n         headerIcon: propertyStore(writableAppOptions, 'headerIcon'),\n         headerNoTitleMinimized: propertyStore(writableAppOptions, 'headerNoTitleMinimized'),\n         minimizable: propertyStore(writableAppOptions, 'minimizable'),\n         popOut: propertyStore(writableAppOptions, 'popOut'),\n         positionable: propertyStore(writableAppOptions, 'positionable'),\n         resizable: propertyStore(writableAppOptions, 'resizable'),\n         title: propertyStore(writableAppOptions, 'title')\n      };\n\n      Object.freeze(storeAppOptions);\n\n      this.#storeAppOptions = storeAppOptions;\n\n      this.#dataUIState = {\n         dragging: false,\n         headerButtons: [],\n         minimized: this.#application._minimized,\n         resizing: false\n      };\n\n      // Create a store for UI state data.\n      const writableUIOptions = writable(this.#dataUIState);\n\n      // Keep the update function locally, but make the store essentially readable.\n      this.#storeUIStateUpdate = writableUIOptions.update;\n\n      /**\n       * @type {import('./types').StoreUIOptions}\n       */\n      const storeUIState = {\n         subscribe: writableUIOptions.subscribe,\n\n         dragging: propertyStore(writableUIOptions, 'dragging'),\n         headerButtons: derived(writableUIOptions, ($options, set) => set($options.headerButtons)),\n         minimized: derived(writableUIOptions, ($options, set) => set($options.minimized)),\n         resizing: propertyStore(writableUIOptions, 'resizing')\n      };\n\n      Object.freeze(storeUIState);\n\n      // Initialize the store with options set in the Application constructor.\n      this.#storeUIState = storeUIState;\n   }\n\n   /**\n    * Registers local store subscriptions for app options. `popOut` controls registering this app with `ui.windows`.\n    *\n    * @see SvelteApplication._injectHTML\n    */\n   #storesSubscribe()\n   {\n      // Register local subscriptions.\n\n      // Handles updating header buttons to add / remove the close button.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.headerButtonNoClose, (value) =>\n      {\n         this.updateHeaderButtons({ headerButtonNoClose: value });\n      }));\n\n      // Handles updating header buttons to add / remove button labels.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.headerButtonNoLabel, (value) =>\n      {\n         this.updateHeaderButtons({ headerButtonNoLabel: value });\n      }));\n\n      // Handles adding / removing this application from `ui.windows` when popOut changes.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.popOut, (value) =>\n      {\n         if (value && this.#application.rendered)\n         {\n            globalThis.ui.windows[this.#application.appId] = this.#application;\n         }\n         else\n         {\n            delete globalThis.ui.windows[this.#application.appId];\n         }\n      }));\n   }\n\n   /**\n    * Unsubscribes from any locally monitored stores.\n    *\n    * @see SvelteApplication.close\n    */\n   #storesUnsubscribe()\n   {\n      this.#storeUnsubscribe.forEach((unsubscribe) => unsubscribe());\n      this.#storeUnsubscribe = [];\n   }\n\n   /**\n    * Updates the UI Options store with the current header buttons. You may dynamically add / remove header buttons\n    * if using an application shell Svelte component. In either overriding `_getHeaderButtons` or responding to the\n    * Hooks fired return a new button array and the uiOptions store is updated and the application shell will render\n    * the new buttons.\n    *\n    * Optionally you can set in the SvelteApplication app options {@link SvelteApplicationOptions.headerButtonNoClose}\n    * to remove the close button and {@link SvelteApplicationOptions.headerButtonNoLabel} to true and labels will be\n    * removed from the header buttons.\n    *\n    * @param {object} [opts] - Optional parameters (for internal use)\n    *\n    * @param {boolean} [opts.headerButtonNoClose] - The value for `headerButtonNoClose`.\n    *\n    * @param {boolean} [opts.headerButtonNoLabel] - The value for `headerButtonNoLabel`.\n    */\n   updateHeaderButtons({ headerButtonNoClose = this.#application.options.headerButtonNoClose,\n    headerButtonNoLabel = this.#application.options.headerButtonNoLabel } = {})\n   {\n      let buttons = this.#application._getHeaderButtons();\n\n      // Remove close button if this.options.headerButtonNoClose is true;\n      if (typeof headerButtonNoClose === 'boolean' && headerButtonNoClose)\n      {\n         buttons = buttons.filter((button) => button.class !== 'close');\n      }\n\n      // Remove labels if this.options.headerButtonNoLabel is true;\n      if (typeof headerButtonNoLabel === 'boolean' && headerButtonNoLabel)\n      {\n         for (const button of buttons) { button.label = void 0; }\n      }\n\n      this.#storeUIStateUpdate((options) =>\n      {\n         options.headerButtons = buttons;\n         return options;\n      });\n   }\n}\n\n/**\n * @typedef {object} SvelteReactiveStores\n *\n * @property {(this: void, updater: import('svelte/store').Updater<object>) => void} appOptionsUpdate Update function\n * for app options store.\n *\n * @property {Function} subscribe Subscribes to local stores.\n *\n * @property {(this: void, updater: import('svelte/store').Updater<object>) => void} uiStateUpdate Update function\n * for UI state stores.\n *\n * @property {Function} unsubscribe Unsubscribes from local stores.\n */\n","/**\n * Defines the application shell contract. If Svelte components export getter / setters for the following properties\n * then that component is considered an application shell.\n *\n * @type {string[]}\n */\nconst applicationShellContract = ['elementRoot'];\n\nObject.freeze(applicationShellContract);\n\nexport { applicationShellContract };\n","import { applicationShellContract } from './applicationShellContract.js';\n\n/**\n * Provides a method to determine if the passed in object / Svelte component follows the application shell contract.\n * This involves ensuring that the accessors defined in `applicationShellContract`.\n *\n * Note: A caveat is that when using Vite in a developer build components are wrapped in a proxy / ProxyComponent that\n * defines instance accessors versus on the prototype, so the check below ensures that all accessors in the contract are\n * either available on the prototype or directly on the instance.\n *\n * @param {*}  component - Object / component to test.\n *\n * @returns {boolean} Whether the component is a ApplicationShell or TJSApplicationShell.\n */\nexport function isApplicationShell(component)\n{\n   if (component === null || component === void 0) { return false; }\n\n   let compHasContract = true;\n   let protoHasContract = true;\n\n   // Check for accessors on the instance.\n   for (const accessor of applicationShellContract)\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(component, accessor);\n      if (descriptor === void 0 || descriptor.get === void 0 || descriptor.set === void 0) { compHasContract = false; }\n   }\n\n   // Get the prototype which is the parent SvelteComponent that has any getter / setters.\n   const prototype = Object.getPrototypeOf(component);\n\n   // Verify the application shell contract. If the accessors (getters / setters) are defined for\n   // `applicationShellContract`.\n   for (const accessor of applicationShellContract)\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(prototype, accessor);\n      if (descriptor === void 0 || descriptor.get === void 0 || descriptor.set === void 0) { protoHasContract = false; }\n   }\n\n   return compHasContract || protoHasContract;\n}\n","import { parseTJSSvelteConfig }  from '@typhonjs-fvtt/runtime/svelte/util';\n\nimport { isApplicationShell }    from './isApplicationShell.js';\n\nimport { isObject }              from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Instantiates and attaches a Svelte component to the main inserted HTML.\n *\n * @param {object}            [opts] - Optional parameters.\n *\n * @param {object}            [opts.app] - The target application\n *\n * @param {HTMLElement}       [opts.template] - Any HTML template.\n *\n * @param {import('@typhonjs-fvtt/runtime/svelte/util').TJSSvelteConfig}  [opts.config] - Svelte component options\n *\n * @param {Function}          [opts.elementRootUpdate] - A callback to assign to the external context.\n *\n * @returns {import('@typhonjs-fvtt/runtime/svelte/application').SvelteData} The config + instantiated Svelte component.\n */\nexport function loadSvelteConfig({ app, template, config, elementRootUpdate } = {})\n{\n   const svelteOptions = isObject(config.options) ? config.options : {};\n\n   let target;\n\n   // A specific HTMLElement to append Svelte component.\n   if (config.target instanceof HTMLElement)\n   {\n      target = config.target;\n   }\n   // A string target defines a selector to find in existing HTML.\n   else if (template instanceof HTMLElement && typeof config.target === 'string')\n   {\n      target = template.querySelector(config.target);\n   }\n   else                                            // No target defined, create a document fragment.\n   {\n      target = document.createDocumentFragment();\n   }\n\n   if (target === void 0)\n   {\n      console.log(\n       `%c[TRL] loadSvelteConfig error - could not find target selector, '${config.target}', for config:\\n`,\n       'background: rgb(57,34,34)', config);\n\n      throw new Error();\n   }\n\n   const NewSvelteComponent = config.class;\n\n   const svelteConfig = parseTJSSvelteConfig({ ...config, target }, app);\n\n   const externalContext = svelteConfig.context.get('#external');\n\n   // Inject the Foundry application instance and `elementRootUpdate` to the external context.\n   externalContext.application = app;\n   externalContext.elementRootUpdate = elementRootUpdate;\n   externalContext.sessionStorage = app.reactive.sessionStorage;\n\n   let eventbus;\n\n   // Potentially inject any TyphonJS eventbus and track the proxy in the SvelteData instance.\n   if (isObject(app._eventbus) && typeof app._eventbus.createProxy === 'function')\n   {\n      eventbus = app._eventbus.createProxy();\n      externalContext.eventbus = eventbus;\n   }\n\n   // Seal external context so that it can't be extended.\n   Object.seal(externalContext);\n\n   // TODO: Remove deprecation warning in the future -----------------------------------------------------------------\n\n   svelteConfig.context.set('external', new Proxy({}, {\n      get(targetUnused, prop)\n      {\n         console.warn(`[TRL] Deprecation warning: Please change getContext('external') to getContext('#external').`);\n         return externalContext[prop];\n      }\n   }));\n\n   // TODO: Remove deprecation warning in the future -----------------------------------------------------------------\n\n   // Create the Svelte component.\n   /**\n    * @type {import('svelte').SvelteComponent}\n    */\n   const component = new NewSvelteComponent(svelteConfig);\n\n   // Set any eventbus to the config.\n   svelteConfig.eventbus = eventbus;\n\n   /**\n    * @type {HTMLElement}\n    */\n   let element;\n\n   // We can directly get the root element from components which follow the application store contract.\n   if (isApplicationShell(component))\n   {\n      element = component.elementRoot;\n   }\n\n   // Detect if target is a synthesized DocumentFragment with a child element. Child elements will be present\n   // if the Svelte component mounts and renders initial content into the document fragment.\n   if (target instanceof DocumentFragment && target.firstElementChild)\n   {\n      if (element === void 0) { element = target.firstElementChild; }\n      template.append(target);\n   }\n   else if (config.target instanceof HTMLElement && element === void 0)\n   {\n      if (config.target instanceof HTMLElement && typeof svelteOptions.selectorElement !== 'string')\n      {\n         console.log(\n          `%c[TRL] loadSvelteConfig error - HTMLElement target with no 'selectorElement' defined.\\n` +\n          `\\nNote: If configuring an application shell and directly targeting a HTMLElement did you bind an` +\n          `'elementRoot' and include '<svelte:options accessors={true}/>'?\\n` +\n          `\\nOffending config:\\n`, 'background: rgb(57,34,34)', config);\n\n         throw new Error();\n      }\n\n      // The target is an HTMLElement so find the Application element from `selectorElement` option.\n      element = target.querySelector(svelteOptions.selectorElement);\n\n      if (element === null || element === void 0)\n      {\n         console.log(\n          `%c[TRL] loadSvelteConfig error - HTMLElement target with 'selectorElement', '${\n           svelteOptions.selectorElement}', not found for config:\\n`,\n          'background: rgb(57,34,34)', config);\n\n         throw new Error();\n      }\n   }\n\n   // If the configuration / original target is an HTML element then do not inject HTML.\n   const injectHTML = !(config.target instanceof HTMLElement);\n\n   return { config: svelteConfig, component, element, injectHTML };\n}\n","/**\n * Provides an index of all visible rendered {@link SvelteApplication} instances in a given Svelte runtime. This allows\n * bulk operations to be performed across all apps.\n */\nexport class TJSAppIndex\n{\n   /**\n    * Stores all visible / rendered apps.\n    *\n    * @type {Map<string, import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplication>}\n    */\n   static #visibleApps = new Map();\n\n   /**\n    * Adds a SvelteApplication to all visible apps tracked.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplication} app - A SvelteApplication\n    *\n    * @package\n    */\n   static add(app)\n   {\n      this.#visibleApps.set(app.id, app);\n   }\n\n   /**\n    * Removes a SvelteApplication from all visible apps tracked.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplication} app - A SvelteApplication\n    *\n    * @package\n    */\n   static delete(app)\n   {\n      this.#visibleApps.delete(app.id);\n   }\n\n   /**\n    * Gets a particular app by ID.\n    *\n    * @param {string}   key - App ID.\n    *\n    * @returns {import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplication} Associated app.\n    */\n   static get(key)\n   {\n      return this.#visibleApps.get(key);\n   }\n\n   /**\n    * Returns whether an associated app by ID is being tracked.\n    *\n    * @param {string}   key - App ID.\n    *\n    * @returns {boolean} The given App ID is visible.\n    */\n   static has(key)\n   {\n      return this.#visibleApps.has(key);\n   }\n\n   /**\n    * @returns {IterableIterator<string>} All visible app IDs.\n    */\n   static keys()\n   {\n      return this.#visibleApps.keys();\n   }\n\n   /**\n    * @returns {IterableIterator<import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplication>} All visible apps.\n    */\n   static values()\n   {\n      return this.#visibleApps.values();\n   }\n}\n","import { TJSPosition }  from '@typhonjs-fvtt/runtime/svelte/store/position';\n\nimport {\n   isHMRProxy,\n   outroAndDestroy }    from '@typhonjs-fvtt/runtime/svelte/util';\n\nimport { A11yHelper }   from '@typhonjs-fvtt/runtime/util/browser';\n\nimport {\n   deepMerge,\n   hasGetter,\n   isIterable,\n   isObject }           from '@typhonjs-fvtt/runtime/util/object';\n\nimport {\n   ApplicationState,\n   GetSvelteData,\n   loadSvelteConfig,\n   isApplicationShell,\n   SvelteReactive,\n   TJSAppIndex }        from './internal/index.js';\n\n/**\n * Provides a Svelte aware extension to the Foundry {@link Application} class to manage the app lifecycle\n * appropriately. You can declaratively load one or more components from `defaultOptions` using a\n * {@link TJSSvelteConfig} object in the SvelteApplicationOptions `options` {@link SvelteApplicationOptions.svelte}\n * property.\n */\nexport class SvelteApplication extends Application\n{\n   /**\n    * Stores the first mounted component which follows the application shell contract.\n    *\n    * @type {import('./internal/state-svelte/types').MountedAppShell[]|null[]} Application shell.\n    */\n   #applicationShellHolder = [null];\n\n   /**\n    * Stores and manages application state for saving / restoring / serializing.\n    *\n    * @type {ApplicationState<SvelteApplication>}\n    */\n   #applicationState;\n\n   /**\n    * Stores the target element which may not necessarily be the main element.\n    *\n    * @type {HTMLElement}\n    */\n   #elementTarget = null;\n\n   /**\n    * Stores the content element which is set for application shells.\n    *\n    * @type {HTMLElement}\n    */\n   #elementContent = null;\n\n   /**\n    * Stores initial z-index from `_renderOuter` to set to target element / Svelte component.\n    *\n    * @type {number}\n    */\n   #initialZIndex = 95;\n\n   /**\n    * Stores on mount state which is checked in _render to trigger onSvelteMount callback.\n    *\n    * @type {boolean}\n    */\n   #onMount = false;\n\n   /**\n    * The position store.\n    *\n    * @type {TJSPosition}\n    */\n   #position;\n\n   /**\n    * Contains the Svelte stores and reactive accessors.\n    *\n    * @type {SvelteReactive}\n    */\n   #reactive;\n\n   /**\n    * Stores SvelteData entries with instantiated Svelte components.\n    *\n    * @type {import('./internal/state-svelte/types').SvelteData[]}\n    */\n   #svelteData = [];\n\n   /**\n    * Provides a helper class that combines multiple methods for interacting with the mounted components tracked in\n    * #svelteData.\n    *\n    * @type {GetSvelteData}\n    */\n   #getSvelteData = new GetSvelteData(this.#applicationShellHolder, this.#svelteData);\n\n   /**\n    * Contains methods to interact with the Svelte stores.\n    *\n    * @type {import('./internal/state-reactive/SvelteReactive').SvelteReactiveStores}\n    */\n   #stores;\n\n   /**\n    * @param {import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplicationOptions} options - The options for the application.\n    *\n    * @inheritDoc\n    */\n   constructor(options = {})\n   {\n      super(options);\n\n      /** @type {ApplicationState<SvelteApplication>} */\n      this.#applicationState = new ApplicationState(this);\n\n      // Initialize TJSPosition with the position object set by Application.\n      this.#position = new TJSPosition(this, {\n         ...this.position,\n         ...this.options,\n         initial: this.options.positionInitial,\n         ortho: this.options.positionOrtho,\n         validator: this.options.positionValidator\n      });\n\n      // Remove old position field.\n      delete this.position;\n\n      /**\n       * Define accessors to retrieve TJSPosition by `this.position`.\n       *\n       * @member {TJSPosition} position - Adds accessors to SvelteApplication to get / set the position data.\n       *\n       * @memberof SvelteApplication#\n       */\n      Object.defineProperty(this, 'position', {\n         get: () => this.#position,\n         set: (position) => { if (isObject(position)) { this.#position.set(position); } }\n      });\n\n      this.#reactive = new SvelteReactive(this);\n\n      this.#stores = this.#reactive.initialize();\n   }\n\n   /**\n    * Specifies the default options that SvelteApplication supports.\n    *\n    * @returns {import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplicationOptions} options - Application options.\n    * @see https://foundryvtt.com/api/interfaces/client.ApplicationOptions.html\n    *\n    * @internal\n    */\n   static get defaultOptions()\n   {\n      return deepMerge(super.defaultOptions, {\n         defaultCloseAnimation: true,     // If false the default slide close animation is not run.\n         draggable: true,                 // If true then application shells are draggable.\n         focusAuto: true,                 // When true auto-management of app focus is enabled.\n         focusKeep: false,                // When `focusAuto` and `focusKeep` is true; keeps internal focus.\n         focusSource: void 0,             // Stores any A11yFocusSource data that is applied when app is closed.\n         focusTrap: true,                 // When true focus trapping / wrapping is enabled keeping focus inside app.\n         headerButtonNoClose: false,      // If true then the close header button is removed.\n         headerButtonNoLabel: false,      // If true then header button labels are removed for application shells.\n         headerIcon: void 0,              // Sets a header icon given an image URL.\n         headerNoTitleMinimized: false,   // If true then header title is hidden when application is minimized.\n         minHeight: globalThis.MIN_WINDOW_HEIGHT,  // Assigned to position. Number specifying minimum window height.\n         minWidth: globalThis.MIN_WINDOW_WIDTH,    // Assigned to position. Number specifying minimum window width.\n         positionable: true,              // If false then `position.set` does not take effect.\n         positionInitial: TJSPosition.Initial.browserCentered,      // A helper for initial position placement.\n         positionOrtho: true,             // When true TJSPosition is optimized for orthographic use.\n         positionValidator: TJSPosition.Validators.transformWindow, // A function providing the default validator.\n         sessionStorage: void 0,          // An instance of TJSWebStorage (session) to share across SvelteApplications.\n         svelte: void 0,                  // A Svelte configuration object.\n         transformOrigin: 'top left'      // By default, 'top / left' respects rotation when minimizing.\n      });\n   }\n\n   /**\n    * Returns the content element if an application shell is mounted.\n    *\n    * @returns {HTMLElement} Content element.\n    */\n   get elementContent() { return this.#elementContent; }\n\n   /**\n    * Returns the target element or main element if no target defined.\n    *\n    * @returns {HTMLElement} Target element.\n    */\n   get elementTarget() { return this.#elementTarget; }\n\n   /**\n    * Returns the reactive accessors & Svelte stores for SvelteApplication.\n    *\n    * @returns {import('./internal/state-reactive/types').SvelteReactive} The reactive accessors & Svelte stores.\n    */\n   get reactive() { return this.#reactive; }\n\n   /**\n    * Returns the application state manager.\n    *\n    * @returns {import('./internal/state-app/types').ApplicationState<SvelteApplication>} The application state manager.\n    */\n   get state() { return this.#applicationState; }\n\n   /**\n    * Returns the Svelte helper class w/ various methods to access mounted Svelte components.\n    *\n    * @returns {import('./internal/state-svelte/types').GetSvelteData} GetSvelteData\n    */\n   get svelte() { return this.#getSvelteData; }\n\n   /**\n    * In this case of when a template is defined in app options `html` references the inner HTML / template. However,\n    * to activate classic v1 tabs for a Svelte component the element target is passed as an array simulating JQuery as\n    * the element is retrieved immediately and the core listeners use standard DOM queries.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   _activateCoreListeners(html)\n   {\n      super._activateCoreListeners(typeof this.options.template === 'string' ? html :\n       [this.popOut ? this.#elementTarget?.firstChild : this.#elementTarget]);\n   }\n\n   /**\n    * Provide an override to set this application as the active window regardless of z-index. Changes behaviour from\n    * Foundry core. This is important / used for instance in dialog key handling for left / right button selection.\n    *\n    * @param {object} [opts] - Optional parameters.\n    *\n    * @param {boolean} [opts.force=false] - Force bring to top; will increment z-index by popOut order.\n    *\n    * @ignore\n    * @internal\n    */\n   bringToTop({ force = false } = {})\n   {\n      if (force || this.popOut) { super.bringToTop(); }\n\n      // If the activeElement is not `document.body` and not contained in this app via elementTarget then blur the\n      // current active element and make `document.body`focused. This allows <esc> key to close all open apps / windows.\n      if (document.activeElement !== document.body && !this.elementTarget.contains(document.activeElement))\n      {\n         // Blur current active element.\n         if (document.activeElement instanceof HTMLElement) { document.activeElement.blur(); }\n\n         // Make document body focused.\n         document.body.focus();\n      }\n\n      globalThis.ui.activeWindow = this;\n   }\n\n   /**\n    * Note: This method is fully overridden and duplicated as Svelte components need to be destroyed manually and the\n    * best visual result is to destroy them after the default slide up animation occurs, but before the element\n    * is removed from the DOM.\n    *\n    * If you destroy the Svelte components before the slide up animation the Svelte elements are removed immediately\n    * from the DOM. The purpose of overriding ensures the slide up animation is always completed before\n    * the Svelte components are destroyed and then the element is removed from the DOM.\n    *\n    * Close the application and un-register references to it within UI mappings.\n    * This function returns a Promise which resolves once the window closing animation concludes\n    *\n    * @param {object}   [options] - Optional parameters.\n    *\n    * @param {boolean}  [options.force] - Force close regardless of render state.\n    *\n    * @returns {Promise<void>}    A Promise which resolves once the application is closed.\n    *\n    * @ignore\n    * @internal\n    */\n   async close(options = {})\n   {\n      const states = Application.RENDER_STATES;\n      if (!options.force && ![states.RENDERED, states.ERROR].includes(this._state)) { return; }\n\n      // Unsubscribe from any local stores.\n      this.#stores.unsubscribe();\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._state = states.CLOSING;\n\n      /**\n       * Get the element.\n       *\n       * @type {HTMLElement}\n       */\n      const el = this.#elementTarget;\n      if (!el) { return this._state = states.CLOSED; }\n\n      // Make any window content overflow hidden to avoid any scrollbars appearing in default or Svelte outro\n      // transitions.\n      const content = el.querySelector('.window-content');\n      if (content)\n      {\n         content.style.overflow = 'hidden';\n\n         // Set all children of content to overflow hidden as if there is going to be additional scrolling elements\n         // they are likely one level deep.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = 'hidden';\n         }\n      }\n\n      // Dispatch Hooks for closing the base and subclass applications\n      for (const cls of this.constructor._getInheritanceChain())\n      {\n         /**\n          * A hook event that fires whenever this Application is closed.\n          *\n          * Note: JQuery wrapping as Foundry event arguments uses JQuery.\n          */\n         Hooks.call(`close${cls.name}`, this, $(el));\n      }\n\n      // If options `defaultCloseAnimation` is false then do not execute the standard slide up animation.\n      // This allows Svelte components to provide any out transition. Application shells will automatically set\n      // `defaultCloseAnimation` based on any out transition set or unset.\n      const animate = typeof this.options.defaultCloseAnimation === 'boolean' ? this.options.defaultCloseAnimation :\n       true;\n\n      if (animate)\n      {\n         // Set min height for full slide.\n         el.style.minHeight = '0';\n\n         const { paddingBottom, paddingTop } = globalThis.getComputedStyle(el);\n\n         // Slide-up application.\n         await el.animate([\n            { maxHeight: `${el.clientHeight}px`, paddingTop, paddingBottom },\n            { maxHeight: 0, paddingTop: 0, paddingBottom: 0 }\n         ], { duration: 250, easing: 'ease-in', fill: 'forwards' }).finished;\n      }\n\n      // Stores the Promises returned from running outro transitions and destroying each Svelte component.\n      const svelteDestroyPromises = [];\n\n      // Manually invoke the destroy callbacks for all Svelte components.\n      for (const entry of this.#svelteData)\n      {\n         // Use `outroAndDestroy` to run outro transitions before destroying.\n         svelteDestroyPromises.push(outroAndDestroy(entry.component));\n\n         // If any proxy eventbus has been added then remove all event registrations from the component.\n         const eventbus = entry.config.eventbus;\n         if (isObject(eventbus) && typeof eventbus.off === 'function')\n         {\n            eventbus.off();\n            entry.config.eventbus = void 0;\n         }\n      }\n\n      // Await all Svelte components to destroy.\n      await Promise.all(svelteDestroyPromises);\n\n      // Remove from all visible apps tracked.\n      TJSAppIndex.delete(this);\n\n      // Reset SvelteData like this to maintain reference to GetSvelteData / `this.svelte`.\n      this.#svelteData.length = 0;\n\n      // Remove element from the DOM. Most SvelteComponents have already removed it.\n      el.remove();\n\n      // Silently restore any width / height state before minimized as applicable.\n      this.position.state.restore({\n         name: '#beforeMinimized',\n         properties: ['width', 'height'],\n         silent: true,\n         remove: true\n      });\n\n      // Clean up data\n      this.#applicationShellHolder[0] = null;\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._element = null;\n      this.#elementContent = null;\n      this.#elementTarget = null;\n\n      delete globalThis.ui.windows[this.appId];\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._minimized = false;\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._scrollPositions = null;\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._state = states.CLOSED;\n\n      this.#onMount = false;\n\n      // Update the minimized UI store state.\n      this.#stores.uiStateUpdate((storeOptions) => deepMerge(storeOptions, { minimized: this._minimized }));\n\n      // Apply any stored focus options and then remove them from options.\n      A11yHelper.applyFocusSource(this.options.focusSource);\n\n      delete this.options.focusSource;\n   }\n\n   /**\n    * Inject the Svelte components defined in `this.options.svelte`. The Svelte component can attach to the existing\n    * pop-out of Application or provide no template and render into a document fragment which is then attached to the\n    * DOM.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   _injectHTML(html)\n   {\n      if (this.popOut && html.length === 0 && isIterable(this.options.svelte))\n      {\n         throw new Error(\n          'SvelteApplication - _injectHTML - A popout app with no template can only support one Svelte component.');\n      }\n\n      // Make sure the store is updated with the latest header buttons. Also allows filtering buttons before display.\n      this.reactive.updateHeaderButtons();\n\n      // Create a function to generate a callback for Svelte components to invoke to update the tracked elements for\n      // application shells in the rare cases that the main element root changes. The update is only trigged on\n      // successive changes of `elementRoot`. Returns a boolean to indicate the element roots are updated.\n      const elementRootUpdate = () =>\n      {\n         let cntr = 0;\n\n         return (elementRoot) =>\n         {\n            if (elementRoot !== null && elementRoot !== void 0 && cntr++ > 0)\n            {\n               this.#updateApplicationShell();\n               return true;\n            }\n\n            return false;\n         };\n      };\n\n      if (isIterable(this.options.svelte))\n      {\n         for (const svelteConfig of this.options.svelte)\n         {\n            const svelteData = loadSvelteConfig({\n               app: this,\n               template: html[0],\n               config: svelteConfig,\n               elementRootUpdate\n            });\n\n            if (isApplicationShell(svelteData.component))\n            {\n               if (this.svelte.applicationShell !== null)\n               {\n                  throw new Error(\n                   `SvelteApplication - _injectHTML - An application shell is already mounted; offending config:\n                    ${JSON.stringify(svelteConfig)}`);\n               }\n\n               this.#applicationShellHolder[0] = svelteData.component;\n\n               // If Vite / HMR / svelte_hmr is enabled then add a hook to receive callbacks when the ProxyComponent\n               // refreshes. Update the element root accordingly and force an update to TJSPosition.\n               // See this issue for info about `on_hmr`:\n               // https://github.com/sveltejs/svelte-hmr/issues/57\n               if (isHMRProxy(svelteData.component) && Array.isArray(svelteData.component?.$$?.on_hmr))\n               {\n                  svelteData.component.$$.on_hmr.push(() => () => this.#updateApplicationShell());\n               }\n            }\n\n            this.#svelteData.push(svelteData);\n         }\n      }\n      else if (isObject(this.options.svelte))\n      {\n         const svelteData = loadSvelteConfig({\n            app: this,\n            template: html[0],\n            config: this.options.svelte,\n            elementRootUpdate\n         });\n\n         if (isApplicationShell(svelteData.component))\n         {\n            // A sanity check as shouldn't hit this case as only one component is being mounted.\n            if (this.svelte.applicationShell !== null)\n            {\n               throw new Error(\n                `SvelteApplication - _injectHTML - An application shell is already mounted; offending config:\n                 ${JSON.stringify(this.options.svelte)}`);\n            }\n\n            this.#applicationShellHolder[0] = svelteData.component;\n\n            // If Vite / HMR / svelte_hmr is enabled then add a hook to receive callbacks when the ProxyComponent\n            // refreshes. Update the element root accordingly and force an update to TJSPosition.\n            // See this issue for info about `on_hmr`:\n            // https://github.com/sveltejs/svelte-hmr/issues/57\n            if (isHMRProxy(svelteData.component) && Array.isArray(svelteData.component?.$$?.on_hmr))\n            {\n               svelteData.component.$$.on_hmr.push(() => () => this.#updateApplicationShell());\n            }\n         }\n\n         this.#svelteData.push(svelteData);\n      }\n\n      // Detect if this is a synthesized DocumentFragment.\n      const isDocumentFragment = html.length && html[0] instanceof DocumentFragment;\n\n      // If any of the Svelte components mounted directly targets an HTMLElement then do not inject HTML.\n      let injectHTML = true;\n      for (const svelteData of this.#svelteData)\n      {\n         if (!svelteData.injectHTML) { injectHTML = false; break; }\n      }\n      if (injectHTML) { super._injectHTML(html); }\n\n      if (this.svelte.applicationShell !== null)\n      {\n         this._element = $(this.svelte.applicationShell.elementRoot);\n\n         // Detect if the application shell exports an `elementContent` accessor.\n         this.#elementContent = hasGetter(this.svelte.applicationShell, 'elementContent') ?\n          this.svelte.applicationShell.elementContent : null;\n\n         // Detect if the application shell exports an `elementTarget` accessor.\n         this.#elementTarget = hasGetter(this.svelte.applicationShell, 'elementTarget') ?\n          this.svelte.applicationShell.elementTarget : null;\n      }\n      else if (isDocumentFragment) // Set the element of the app to the first child element in order of Svelte components mounted.\n      {\n         for (const svelteData of this.#svelteData)\n         {\n            if (svelteData.element instanceof HTMLElement)\n            {\n               this._element = $(svelteData.element);\n               break;\n            }\n         }\n      }\n\n      // Potentially retrieve a specific target element if `selectorTarget` is defined otherwise make the target the\n      // main element.\n      if (this.#elementTarget === null)\n      {\n         this.#elementTarget = typeof this.options.selectorTarget === 'string' ?\n          this._element[0].querySelector(this.options.selectorTarget) : this._element[0];\n      }\n\n      if (this.#elementTarget === null || this.#elementTarget === void 0)\n      {\n         throw new Error(`SvelteApplication - _injectHTML: Target element '${this.options.selectorTarget}' not found.`);\n      }\n\n      // The initial zIndex may be set in application options or for popOut applications is stored by `_renderOuter`\n      // in `this.#initialZIndex`.\n      if (typeof this.options.positionable === 'boolean' && this.options.positionable)\n      {\n         this.#elementTarget.style.zIndex = typeof this.options.zIndex === 'number' ? this.options.zIndex :\n          this.#initialZIndex ?? 95;\n      }\n\n      // Subscribe to local store handling.\n      this.#stores.subscribe();\n   }\n\n   /**\n    * Provides a mechanism to update the UI options store for maximized.\n    *\n    * Note: the sanity check is duplicated from {@link Application.maximize} the store is updated _before_\n    * performing the rest of animations. This allows application shells to remove / show any resize handlers\n    * correctly. Extra constraint data is stored in a saved position state in {@link SvelteApplication.minimize}\n    * to animate the content area.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.animate=true] - When true perform default maximizing animation.\n    *\n    * @param {number}   [opts.duration=0.1] - Controls content area animation duration in seconds.\n    */\n   async maximize({ animate = true, duration = 0.1 } = {})\n   {\n      if (!this.popOut || [false, null].includes(this._minimized)) { return; }\n\n      this._minimized = null;\n\n      const durationMS = duration * 1000; // For WAAPI.\n\n      // Get content\n      const element = this.elementTarget;\n      const header = element.querySelector('.window-header');\n      const content = element.querySelector('.window-content');\n\n      // Get the complete position before minimized. Used to reset min width & height to initial values later.\n      const positionBefore = this.position.state.get({ name: '#beforeMinimized' });\n\n      // First animate / restore width / async.\n      if (animate)\n      {\n         await this.position.state.restore({\n            name: '#beforeMinimized',\n            async: true,\n            animateTo: true,\n            properties: ['width'],\n            duration: 0.1\n         });\n      }\n\n      element.classList.remove('minimized');\n\n      // Reset display none on all children of header.\n      for (let cntr = header.children.length; --cntr >= 0;) { header.children[cntr].style.display = null; }\n\n      content.style.display = null;\n\n      let constraints;\n\n      if (animate)\n      {\n         // Next animate / restore height synchronously and remove key. Retrieve constraints data for slide up animation\n         // below.\n         ({ constraints } = this.position.state.restore({\n            name: '#beforeMinimized',\n            animateTo: true,\n            properties: ['height'],\n            remove: true,\n            duration\n         }));\n      }\n      else\n      {\n         ({ constraints } = this.position.state.remove({ name: '#beforeMinimized' }));\n      }\n\n      // Slide down content with stored constraints.\n      await content.animate([\n         { maxHeight: 0, paddingTop: 0, paddingBottom: 0, offset: 0 },\n         { ...constraints, offset: 1 },\n         { maxHeight: '100%', offset: 1 },\n      ], { duration: durationMS, fill: 'forwards' }).finished; // WAAPI in ms.\n\n      // Restore previous min width & height from saved data, app options, or default Foundry values.\n      this.position.set({\n         minHeight: positionBefore.minHeight ?? this.options?.minHeight ?? MIN_WINDOW_HEIGHT,\n         minWidth: positionBefore.minWidth ?? this.options?.minWidth ?? MIN_WINDOW_WIDTH,\n      });\n\n      // Remove inline styles that override any styles assigned to the app.\n      element.style.minWidth = null;\n      element.style.minHeight = null;\n\n      this._minimized = false;\n\n      // Using a 50ms timeout prevents any instantaneous display of scrollbars with the above maximize animation.\n      setTimeout(() =>\n      {\n         content.style.overflow = null;\n\n         // Reset all children of content removing overflow hidden.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = null;\n         }\n      }, 50);\n\n      this.#stores.uiStateUpdate((options) => deepMerge(options, { minimized: false }));\n   }\n\n   /**\n    * Provides a mechanism to update the UI options store for minimized.\n    *\n    * Note: the sanity check is duplicated from {@link Application.minimize} the store is updated _before_\n    * performing the rest of animations. This allows application shells to remove / show any resize handlers\n    * correctly. Extra constraint data is stored in a saved position state in {@link SvelteApplication.minimize}\n    * to animate the content area.\n    *\n    * @param {object}   [opts] - Optional parameters\n    *\n    * @param {boolean}  [opts.animate=true] - When true perform default minimizing animation.\n    *\n    * @param {number}   [opts.duration=0.1] - Controls content area animation duration in seconds.\n    */\n   async minimize({ animate = true, duration = 0.1 } = {})\n   {\n      if (!this.rendered || !this.popOut || [true, null].includes(this._minimized)) { return; }\n\n      this.#stores.uiStateUpdate((options) => deepMerge(options, { minimized: true }));\n\n      this._minimized = null;\n\n      const durationMS = duration * 1000; // For WAAPI.\n\n      const element = this.elementTarget;\n\n      // Get content\n      const header = element.querySelector('.window-header');\n      const content = element.querySelector('.window-content');\n\n      // Save current max / min height & width.\n      const beforeMinWidth = this.position.minWidth;\n      const beforeMinHeight = this.position.minHeight;\n\n      // Set minimized min width & height for header bar.\n      this.position.set({ minWidth: 100, minHeight: 30 });\n\n      // Also set inline styles to override any styles scoped to the app.\n      element.style.minWidth = '100px';\n      element.style.minHeight = '30px';\n\n      if (content)\n      {\n         content.style.overflow = 'hidden';\n\n         // Set all children of content to overflow hidden as if there is going to be additional scrolling elements\n         // they are likely one level deep.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = 'hidden';\n         }\n      }\n\n      const { paddingBottom, paddingTop } = globalThis.getComputedStyle(content);\n\n      // Extra data that is saved with the current position. Used during `maximize`.\n      const constraints = {\n         maxHeight: `${content.clientHeight}px`,\n         paddingTop,\n         paddingBottom\n      };\n\n      // Slide-up content\n      if (animate)\n      {\n         const animation = content.animate([\n            constraints,\n            { maxHeight: 0, paddingTop: 0, paddingBottom: 0 }\n         ], { duration: durationMS, fill: 'forwards' }); // WAAPI in ms.\n\n         // Set display style to none when animation finishes.\n         animation.finished.then(() => content.style.display = 'none');\n      }\n      else\n      {\n         setTimeout(() => content.style.display = 'none', durationMS);\n      }\n\n      // Save current position state and add the constraint data to use in `maximize`.\n      const saved = this.position.state.save({ name: '#beforeMinimized', constraints });\n\n      // Set the initial before min width & height.\n      saved.minWidth = beforeMinWidth;\n      saved.minHeight = beforeMinHeight;\n\n      const headerOffsetHeight = header.offsetHeight;\n\n      // minHeight needs to be adjusted to header height.\n      this.position.minHeight = headerOffsetHeight;\n\n      if (animate)\n      {\n         // First await animation of height upward.\n         await this.position.animate.to({ height: headerOffsetHeight }, { duration }).finished;\n      }\n\n      // Set all header buttons besides close and the window title to display none.\n      for (let cntr = header.children.length; --cntr >= 0;)\n      {\n         const className = header.children[cntr].className;\n\n         if (className.includes('window-title') || className.includes('close')) { continue; }\n\n         // v10+ of Foundry core styles automatically hides anything besides the window title and close button, so\n         // explicitly set display to block.\n         if (className.includes('keep-minimized'))\n         {\n            header.children[cntr].style.display = 'block';\n            continue;\n         }\n\n         header.children[cntr].style.display = 'none';\n      }\n\n      if (animate)\n      {\n         // Await animation of width to the left / minimum width.\n         await this.position.animate.to({ width: MIN_WINDOW_WIDTH }, { duration: 0.1 }).finished;\n      }\n\n      element.classList.add('minimized');\n\n      this._minimized = true;\n   }\n\n   /**\n    * Provides a callback after all Svelte components are initialized.\n    *\n    * @param {import('./internal/state-svelte/types').MountedAppShell} [mountedAppShell] - The mounted app shell\n    *        elements.\n    */\n   onSvelteMount(mountedAppShell) {} // eslint-disable-line no-unused-vars\n\n   /**\n    * Provides a callback after the main application shell is remounted. This may occur during HMR / hot module\n    * replacement or directly invoked from the `elementRootUpdate` callback passed to the application shell component\n    * context.\n    *\n    * @param {import('./internal/state-svelte/types').MountedAppShell} [mountedAppShell] - The mounted app shell\n    *        elements.\n    */\n   onSvelteRemount(mountedAppShell) {} // eslint-disable-line no-unused-vars\n\n   /**\n    * Override replacing HTML as Svelte components control the rendering process. Only potentially change the outer\n    * application frame / title for pop-out applications.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   _replaceHTML(element, html)  // eslint-disable-line no-unused-vars\n   {\n      if (!element.length) { return; }\n\n      this.reactive.updateHeaderButtons();\n   }\n\n   /**\n    * Provides an override verifying that a new Application being rendered for the first time doesn't have a\n    * corresponding DOM element already loaded. This is a check that only occurs when `this._state` is\n    * `Application.RENDER_STATES.NONE`. It is useful in particular when SvelteApplication has a static ID\n    * explicitly set in `this.options.id` and long intro / outro transitions are assigned. If a new application\n    * sharing this static ID attempts to open / render for the first time while an existing DOM element sharing\n    * this static ID exists then the initial render is cancelled below rather than crashing later in the render\n    * cycle {@link TJSPosition.set}.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   async _render(force = false, options = {})\n   {\n      // Store any focusSource instance.\n      if (isObject(options?.focusSource)) { this.options.focusSource = options.focusSource; }\n\n      if (this._state === Application.RENDER_STATES.NONE &&\n       document.querySelector(`#${this.id}`) instanceof HTMLElement)\n      {\n         console.warn(`SvelteApplication - _render: A DOM element already exists for CSS ID '${this.id\n         }'. Cancelling initial render for new application with appId '${this.appId}'.`);\n\n         return;\n      }\n\n      await super._render(force, options);\n\n      // It is necessary to directly invoke `position.set` as TJSPosition uses accessors and is not a bare object, so\n      // the merging that occurs is `Application._render` does not take effect.\n      if (!this._minimized) { this.#position.set(options); }\n\n      if (!this.#onMount)\n      {\n         // Add to visible apps tracked.\n         TJSAppIndex.add(this);\n\n         this.onSvelteMount({ element: this._element[0], elementContent: this.#elementContent, elementTarget:\n          this.#elementTarget });\n\n         this.#onMount = true;\n      }\n   }\n\n   /**\n    * Render the inner application content. Only render a template if one is defined otherwise provide an empty\n    * JQuery element per the core Foundry API.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   async _renderInner(data)\n   {\n      const html = typeof this.template === 'string' ? await renderTemplate(this.template, data) :\n       document.createDocumentFragment();\n\n      return $(html);\n   }\n\n   /**\n    * Stores the initial z-index set in `_renderOuter` which is used in `_injectHTML` to set the target element\n    * z-index after the Svelte component is mounted.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   async _renderOuter()\n   {\n      const html = await super._renderOuter();\n      this.#initialZIndex = html[0].style.zIndex;\n      return html;\n   }\n\n   /**\n    * All calculation and updates of position are implemented in {@link TJSPosition.set}. This allows position to be fully\n    * reactive and in control of updating inline styles for the application.\n    *\n    * This method remains for backward compatibility with Foundry. If you have a custom override quite likely you need\n    * to update to using the {@link TJSPosition.validators} functionality.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/store/position').TJSPositionDataExtended}   [position] - TJSPosition data.\n    *\n    * @returns {TJSPosition} The updated position object for the application containing the new values.\n    * @ignore\n    */\n   setPosition(position)\n   {\n      return this.position.set(position);\n   }\n\n   /**\n    * This method is invoked by the `elementRootUpdate` callback that is added to the external context passed to\n    * Svelte components. When invoked it updates the local element roots tracked by SvelteApplication.\n    *\n    * This method may also be invoked by HMR / hot module replacement via `svelte-hmr`.\n    */\n   #updateApplicationShell()\n   {\n      const applicationShell = this.svelte.applicationShell;\n\n      if (applicationShell !== null)\n      {\n         this._element = $(applicationShell.elementRoot);\n\n         // Detect if the application shell exports an `elementContent` accessor.\n         this.#elementContent = hasGetter(applicationShell, 'elementContent') ?\n          applicationShell.elementContent : null;\n\n         // Detect if the application shell exports an `elementTarget` accessor.\n         this.#elementTarget = hasGetter(applicationShell, 'elementTarget') ?\n          applicationShell.elementTarget : null;\n\n         if (this.#elementTarget === null)\n         {\n            this.#elementTarget = typeof this.options.selectorTarget === 'string' ?\n             this._element[0].querySelector(this.options.selectorTarget) : this._element[0];\n         }\n\n         // The initial zIndex may be set in application options or for popOut applications is stored by `_renderOuter`\n         // in `this.#initialZIndex`.\n         if (typeof this.options.positionable === 'boolean' && this.options.positionable)\n         {\n            this.#elementTarget.style.zIndex = typeof this.options.zIndex === 'number' ? this.options.zIndex :\n             this.#initialZIndex ?? 95;\n\n            super.bringToTop();\n\n            // Ensure that new root element has inline position styles set.\n            this.position.set(this.position.get());\n         }\n\n         super._activateCoreListeners([this.popOut ? this.#elementTarget?.firstChild : this.#elementTarget]);\n\n         this.onSvelteRemount({ element: this._element[0], elementContent: this.#elementContent, elementTarget:\n          this.#elementTarget });\n      }\n   }\n}\n","import { TJSStyleManager } from '@typhonjs-fvtt/runtime/util/browser';\n\nexport const cssVariables = new TJSStyleManager({ docKey: '#__trl-root-styles', version: 1 });\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","class Hashing\n{\n   static #regexUuidv = /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i;\n\n   /**\n    * Provides a solid string hashing algorithm.\n    *\n    * Sourced from: https://stackoverflow.com/a/52171480\n    *\n    * @param {string}   str - String to hash.\n    *\n    * @param {number}   seed - A seed value altering the hash.\n    *\n    * @returns {number} Hash code.\n    */\n   static hashCode(str, seed = 0)\n   {\n      if (typeof str !== 'string') { return 0; }\n\n      let h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\n\n      for (let ch, i = 0; i < str.length; i++)\n      {\n         ch = str.charCodeAt(i);\n         h1 = Math.imul(h1 ^ ch, 2654435761);\n         h2 = Math.imul(h2 ^ ch, 1597334677);\n      }\n\n      h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^ Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n      h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^ Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n\n      return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n   }\n\n   /**\n    * Validates that the given string is formatted as a UUIDv4 string.\n    *\n    * @param {string}   uuid - UUID string to test.\n    *\n    * @returns {boolean} Is UUIDv4 string.\n    */\n   static isUuidv4(uuid)\n   {\n      return this.#regexUuidv.test(uuid);\n   }\n\n   /**\n    * Generates a UUID v4 compliant ID. Please use a complete UUID generation package for guaranteed compliance.\n    *\n    * This code is an evolution of the following Gist.\n    * https://gist.github.com/jed/982883\n    *\n    * There is a public domain / free copy license attached to it that is not a standard OSS license...\n    * https://gist.github.com/jed/982883#file-license-txt\n    *\n    * @returns {string} UUIDv4\n    */\n   static uuidv4()\n   {\n      return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\n       (c ^ (globalThis.crypto ?? globalThis.msCrypto).getRandomValues(\n        new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\n   }\n}\n\n/**\n * Provides utility functions for strings.\n */\nclass Strings\n{\n   /**\n    * Escape a given input string prefacing special characters with backslashes for use in a regular expression.\n    *\n    * @param {string}   string - An un-escaped input string.\n    *\n    * @returns {string} The escaped string suitable for use in a regular expression.\n    */\n   static escape(string)\n   {\n      return string.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n   }\n\n   /**\n    * Normalizes a string.\n    *\n    * @param {string}   string - A string to normalize for comparisons.\n    *\n    * @returns {string} Cleaned string.\n    *\n    * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n    */\n   static normalize(string)\n   {\n      return string.trim().normalize('NFD').replace(/[\\x00-\\x1F]/gm, ''); // eslint-disable-line no-control-regex\n   }\n}\n\n/**\n * Provides timing related higher-order functions.\n */\nclass Timing\n{\n   /**\n    * Wraps a callback in a debounced timeout.\n    *\n    * Delay execution of the callback function until the function has not been called for the given delay in milliseconds.\n    *\n    * @param {Function} callback - A function to execute once the debounced threshold has been passed.\n    *\n    * @param {number}   delay - An amount of time in milliseconds to delay.\n    *\n    * @returns {Function} A wrapped function that can be called to debounce execution.\n    */\n   static debounce(callback, delay)\n   {\n      let timeoutId;\n\n      return function(...args)\n      {\n         globalThis.clearTimeout(timeoutId);\n         timeoutId = globalThis.setTimeout(() => { callback.apply(this, args); }, delay);\n      };\n   }\n\n   /**\n    * @param {object}   opts - Optional parameters.\n    *\n    * @param {Function} opts.single - Single click callback.\n    *\n    * @param {Function} opts.double - Double click callback.\n    *\n    * @param {number}   [opts.delay=400] - Double click delay.\n    *\n    * @returns {(event: Event) => void} The gated double-click handler.\n    */\n   static doubleClick({ single, double, delay = 400 })\n   {\n      let clicks = 0;\n      let timeoutId;\n\n      return (event) =>\n      {\n         clicks++;\n\n         if (clicks === 1)\n         {\n            timeoutId = globalThis.setTimeout(() =>\n            {\n               if (typeof single === 'function') { single(event); }\n               clicks = 0;\n            }, delay);\n         }\n         else\n         {\n            globalThis.clearTimeout(timeoutId);\n            if (typeof double === 'function') { double(event); }\n            clicks = 0;\n         }\n      };\n   }\n}\n\nexport { Hashing, Strings, Timing };\n//# sourceMappingURL=index.js.map\n","import { Timing } from '@typhonjs-fvtt/runtime/util';\nimport { isUpdatableStore, isWritableStore } from '@typhonjs-fvtt/runtime/util/store';\nimport { StyleParse } from '@typhonjs-fvtt/runtime/util/browser';\nimport { isObject } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Provides an action to always blur the element when any pointer up event occurs on the element.\n *\n * @param {HTMLElement}   node - The node to handle always blur on pointer up.\n *\n * @returns {import('svelte/action').ActionReturn} Lifecycle functions.\n */\nfunction alwaysBlur(node)\n{\n   /**\n    * Blurs node if active element.\n    */\n   function blurNode()\n   {\n      setTimeout(() => { if (document.activeElement === node) { node.blur(); } }, 0);\n   }\n\n   node.addEventListener('pointerup', blurNode);\n\n   return {\n      destroy: () => node.removeEventListener('pointerup', blurNode)\n   };\n}\n\n/**\n * Provides an action to monitor the given HTMLElement node with `ResizeObserver` posting width / height changes\n * to the target in various ways depending on the shape of the target. The target can be one of the following and the\n * precedence order is listed from top to bottom:\n *\n * - has a `resizeObserved` function as attribute; offset then content width / height are passed as parameters.\n * - has a `setContentBounds` function as attribute; content width / height are passed as parameters.\n * - has a `setDimension` function as attribute; offset width / height are passed as parameters.\n * - target is an object; offset and content width / height attributes directly set on target.\n * - target is a function; the function invoked with offset then content width / height parameters.\n * - has a writable store `resizeObserved` as an attribute; updated with offset & content width / height.\n * - has an object 'stores' that has a writable store `resizeObserved` as an attribute; updated with offset &\n *   content width / height.\n *\n * Note: Svelte currently uses an archaic IFrame based workaround to monitor offset / client width & height changes.\n * A more up to date way to do this is with ResizeObserver. To track when Svelte receives ResizeObserver support\n * monitor this issue: {@link https://github.com/sveltejs/svelte/issues/4233}\n *\n * Can-I-Use: {@link https://caniuse.com/resizeobserver}\n *\n * @param {HTMLElement}          node - The node associated with the action.\n *\n * @param {ResizeObserverTarget} target - An object or function to update with observed width & height changes.\n *\n * @returns {import('svelte/action').ActionReturn<ResizeObserverTarget>} The action lifecycle methods.\n * @see {@link https://github.com/sveltejs/svelte/issues/4233}\n */\nfunction resizeObserver(node, target)\n{\n   ResizeObserverManager.add(node, target);\n\n   return {\n      /**\n       * @param {ResizeObserverTarget} newTarget - An object or function to update with observed width & height changes.\n       */\n      update: (newTarget) =>\n      {\n         ResizeObserverManager.remove(node, target);\n         target = newTarget;\n         ResizeObserverManager.add(node, target);\n      },\n\n      destroy: () =>\n      {\n         ResizeObserverManager.remove(node, target);\n      }\n   };\n}\n\n/**\n * Provides a function that when invoked with an element updates the cached styles for each subscriber of the element.\n *\n * The style attributes cached to calculate offset height / width include border & padding dimensions. You only need\n * to update the cache if you change border or padding attributes of the element.\n *\n * @param {HTMLElement} el - An HTML element.\n */\nresizeObserver.updateCache = function(el)\n{\n   if (!(el instanceof HTMLElement)) { throw new TypeError(`resizeObserverUpdate error: 'el' is not an HTMLElement.`); }\n\n   const subscribers = s_MAP.get(el);\n\n   if (Array.isArray(subscribers))\n   {\n      const computed = globalThis.getComputedStyle(el);\n\n      // Cache styles first from any inline styles then computed styles defaulting to 0 otherwise.\n      // Used to create the offset width & height values from the context box ResizeObserver provides.\n      const borderBottom = StyleParse.pixels(el.style.borderBottom) ?? StyleParse.pixels(computed.borderBottom) ?? 0;\n      const borderLeft = StyleParse.pixels(el.style.borderLeft) ?? StyleParse.pixels(computed.borderLeft) ?? 0;\n      const borderRight = StyleParse.pixels(el.style.borderRight) ?? StyleParse.pixels(computed.borderRight) ?? 0;\n      const borderTop = StyleParse.pixels(el.style.borderTop) ?? StyleParse.pixels(computed.borderTop) ?? 0;\n      const paddingBottom = StyleParse.pixels(el.style.paddingBottom) ?? StyleParse.pixels(computed.paddingBottom) ?? 0;\n      const paddingLeft = StyleParse.pixels(el.style.paddingLeft) ?? StyleParse.pixels(computed.paddingLeft) ?? 0;\n      const paddingRight = StyleParse.pixels(el.style.paddingRight) ?? StyleParse.pixels(computed.paddingRight) ?? 0;\n      const paddingTop = StyleParse.pixels(el.style.paddingTop) ?? StyleParse.pixels(computed.paddingTop) ?? 0;\n\n      const additionalWidth = borderLeft + borderRight + paddingLeft + paddingRight;\n      const additionalHeight = borderTop + borderBottom + paddingTop + paddingBottom;\n\n      for (const subscriber of subscribers)\n      {\n         subscriber.styles.additionalWidth = additionalWidth;\n         subscriber.styles.additionalHeight = additionalHeight;\n         s_UPDATE_SUBSCRIBER(subscriber, subscriber.contentWidth, subscriber.contentHeight);\n      }\n   }\n};\n\n// Below is the static ResizeObserverManager ------------------------------------------------------------------------\n\nconst s_MAP = new Map();\n\n/**\n * Provides a static / single instance of ResizeObserver that can notify listeners in different ways.\n *\n * The action, {@link resizeObserver}, utilizes ResizeObserverManager for automatic registration and removal\n * via Svelte.\n */\nclass ResizeObserverManager\n{\n   /**\n    * Add an HTMLElement and ResizeObserverTarget instance for monitoring. Create cached style attributes for the\n    * given element include border & padding dimensions for offset width / height calculations.\n    *\n    * @param {HTMLElement}    el - The element to observe.\n    *\n    * @param {ResizeObserverTarget} target - A target that contains one of several mechanisms for updating resize data.\n    */\n   static add(el, target)\n   {\n      const updateType = s_GET_UPDATE_TYPE(target);\n\n      if (updateType === 0)\n      {\n         throw new Error(`'target' does not match supported ResizeObserverManager update mechanisms.`);\n      }\n\n      const computed = globalThis.getComputedStyle(el);\n\n      // Cache styles first from any inline styles then computed styles defaulting to 0 otherwise.\n      // Used to create the offset width & height values from the context box ResizeObserver provides.\n      const borderBottom = StyleParse.pixels(el.style.borderBottom) ?? StyleParse.pixels(computed.borderBottom) ?? 0;\n      const borderLeft = StyleParse.pixels(el.style.borderLeft) ?? StyleParse.pixels(computed.borderLeft) ?? 0;\n      const borderRight = StyleParse.pixels(el.style.borderRight) ?? StyleParse.pixels(computed.borderRight) ?? 0;\n      const borderTop = StyleParse.pixels(el.style.borderTop) ?? StyleParse.pixels(computed.borderTop) ?? 0;\n      const paddingBottom = StyleParse.pixels(el.style.paddingBottom) ?? StyleParse.pixels(computed.paddingBottom) ?? 0;\n      const paddingLeft = StyleParse.pixels(el.style.paddingLeft) ?? StyleParse.pixels(computed.paddingLeft) ?? 0;\n      const paddingRight = StyleParse.pixels(el.style.paddingRight) ?? StyleParse.pixels(computed.paddingRight) ?? 0;\n      const paddingTop = StyleParse.pixels(el.style.paddingTop) ?? StyleParse.pixels(computed.paddingTop) ?? 0;\n\n      const data = {\n         updateType,\n         target,\n\n         // Stores most recent contentRect.width and contentRect.height values from ResizeObserver.\n         contentWidth: 0,\n         contentHeight: 0,\n\n         // Convenience data for total border & padding for offset width & height calculations.\n         styles: {\n            additionalWidth: borderLeft + borderRight + paddingLeft + paddingRight,\n            additionalHeight: borderTop + borderBottom + paddingTop + paddingBottom\n         }\n      };\n\n      if (s_MAP.has(el))\n      {\n         const subscribers = s_MAP.get(el);\n         subscribers.push(data);\n      }\n      else\n      {\n         s_MAP.set(el, [data]);\n      }\n\n      s_RESIZE_OBSERVER.observe(el);\n   }\n\n   /**\n    * Removes all targets from monitoring when just an element is provided otherwise removes a specific target\n    * from the monitoring map. If no more targets remain then the element is removed from monitoring.\n    *\n    * @param {HTMLElement}          el - Element to remove from monitoring.\n    *\n    * @param {ResizeObserverTarget} [target] - A specific target to remove from monitoring.\n    */\n   static remove(el, target = void 0)\n   {\n      const subscribers = s_MAP.get(el);\n      if (Array.isArray(subscribers))\n      {\n         const index = subscribers.findIndex((entry) => entry.target === target);\n         if (index >= 0)\n         {\n            // Update target subscriber with undefined values.\n            s_UPDATE_SUBSCRIBER(subscribers[index], void 0, void 0);\n\n            subscribers.splice(index, 1);\n         }\n\n         // Remove element monitoring if last target removed.\n         if (subscribers.length === 0)\n         {\n            s_MAP.delete(el);\n            s_RESIZE_OBSERVER.unobserve(el);\n         }\n      }\n   }\n}\n\n/**\n * Defines the various shape / update type of the given target.\n *\n * @type {Record<string, number>}\n */\nconst s_UPDATE_TYPES = {\n   none: 0,\n   attribute: 1,\n   function: 2,\n   resizeObserved: 3,\n   setContentBounds: 4,\n   setDimension: 5,\n   storeObject: 6,\n   storesObject: 7\n};\n\nconst s_RESIZE_OBSERVER = new ResizeObserver((entries) =>\n{\n   for (const entry of entries)\n   {\n      const subscribers = s_MAP.get(entry?.target);\n\n      if (Array.isArray(subscribers))\n      {\n         const contentWidth = entry.contentRect.width;\n         const contentHeight = entry.contentRect.height;\n\n         for (const subscriber of subscribers)\n         {\n            s_UPDATE_SUBSCRIBER(subscriber, contentWidth, contentHeight);\n         }\n      }\n   }\n});\n\n/**\n * Determines the shape of the target instance regarding valid update mechanisms to set width & height changes.\n *\n * @param {*}  target - The target instance.\n *\n * @returns {number} Update type value.\n */\nfunction s_GET_UPDATE_TYPE(target)\n{\n   if (target?.resizeObserved instanceof Function) { return s_UPDATE_TYPES.resizeObserved; }\n   if (target?.setDimension instanceof Function) { return s_UPDATE_TYPES.setDimension; }\n   if (target?.setContentBounds instanceof Function) { return s_UPDATE_TYPES.setContentBounds; }\n\n   const targetType = typeof target;\n\n   // Does the target have resizeObserved writable store?\n   if (targetType !== null && (targetType === 'object' || targetType === 'function'))\n   {\n      if (isUpdatableStore(target.resizeObserved))\n      {\n         return s_UPDATE_TYPES.storeObject;\n      }\n\n      // Now check for a child stores object which is a common TRL pattern for exposing stores.\n      const stores = target?.stores;\n      if (isObject(stores) || typeof stores === 'function')\n      {\n         if (isUpdatableStore(stores.resizeObserved))\n         {\n            return s_UPDATE_TYPES.storesObject;\n         }\n      }\n   }\n\n   if (targetType !== null && targetType === 'object') { return s_UPDATE_TYPES.attribute; }\n\n   if (targetType === 'function') { return s_UPDATE_TYPES.function; }\n\n   return s_UPDATE_TYPES.none;\n}\n\n/**\n * Updates a subscriber target with given content width & height values. Offset width & height is calculated from\n * the content values + cached styles.\n *\n * @param {object}            subscriber - Internal data about subscriber.\n *\n * @param {number|undefined}  contentWidth - ResizeObserver contentRect.width value or undefined.\n *\n * @param {number|undefined}  contentHeight - ResizeObserver contentRect.height value or undefined.\n */\nfunction s_UPDATE_SUBSCRIBER(subscriber, contentWidth, contentHeight)\n{\n   const styles = subscriber.styles;\n\n   subscriber.contentWidth = contentWidth;\n   subscriber.contentHeight = contentHeight;\n\n   const offsetWidth = Number.isFinite(contentWidth) ? contentWidth + styles.additionalWidth : void 0;\n   const offsetHeight = Number.isFinite(contentHeight) ? contentHeight + styles.additionalHeight : void 0;\n\n   const target = subscriber.target;\n\n   switch (subscriber.updateType)\n   {\n      case s_UPDATE_TYPES.attribute:\n         target.contentWidth = contentWidth;\n         target.contentHeight = contentHeight;\n         target.offsetWidth = offsetWidth;\n         target.offsetHeight = offsetHeight;\n         break;\n\n      case s_UPDATE_TYPES.function:\n         target?.(offsetWidth, offsetHeight, contentWidth, contentHeight);\n         break;\n\n      case s_UPDATE_TYPES.resizeObserved:\n         target.resizeObserved?.(offsetWidth, offsetHeight, contentWidth, contentHeight);\n         break;\n\n      case s_UPDATE_TYPES.setContentBounds:\n         target.setContentBounds?.(contentWidth, contentHeight);\n         break;\n\n      case s_UPDATE_TYPES.setDimension:\n         target.setDimension?.(offsetWidth, offsetHeight);\n         break;\n\n      case s_UPDATE_TYPES.storeObject:\n         target.resizeObserved.update((object) =>\n         {\n            object.contentHeight = contentHeight;\n            object.contentWidth = contentWidth;\n            object.offsetHeight = offsetHeight;\n            object.offsetWidth = offsetWidth;\n\n            return object;\n         });\n         break;\n\n      case s_UPDATE_TYPES.storesObject:\n         target.stores.resizeObserved.update((object) =>\n         {\n            object.contentHeight = contentHeight;\n            object.contentWidth = contentWidth;\n            object.offsetHeight = offsetHeight;\n            object.offsetWidth = offsetWidth;\n\n            return object;\n         });\n         break;\n   }\n}\n\n/**\n * @typedef {(\n *    offsetWidth: number,\n *    offsetHeight: number,\n *    contentWidth: number,\n *    contentHeight: number\n * ) => void } ResizeObserverFunction A function that receives offset / content height & width.\n */\n\n/**\n * @typedef {ResizeObserverObject | ResizeObserverObjectExtended | ResizeObserverFunction} ResizeObserverTarget The\n *          receiving target for observed resize data.\n */\n\n/**\n * @typedef {object} ResizeObserverObject A direct object to update observed resize updates.\n *\n * @property {number} [contentHeight] Direct attribute to store contentHeight.\n *\n * @property {number} [contentWidth] Direct attribute to store contentWidth.\n *\n * @property {number} [offsetHeight] Direct attribute to store offsetHeight.\n *\n * @property {number} [offsetWidth] Direct attribute to store offsetWidth.\n */\n\n/**\n * @typedef {object} ResizeObserverObjectExtended Provides extended attributes supported for observed resize updates.\n *\n * @property {import('svelte/store').Writable<ResizeObserverObject> | ResizeObserverFunction} [resizedObserver] Either\n *           a function or a writable store.\n *\n * @property {(contentWidth: number, contentHeight: number) => void} [setContentBounds] - A function that is invoked\n *           with content width & height changes.\n *\n * @property {(offsetWidth: number, offsetHeight: number) => void} [setDimension] - A function that is invoked with\n *           offset width & height changes.\n *\n * @property {{resizedObserver: import('svelte/store').Writable<ResizeObserverObject>}} [stores] - An object with a\n *           `stores` attribute and subsequent `resizedObserver` writable store.\n */\n\n/**\n * Provides an action to save `scrollTop` of an element with a vertical scrollbar. This action should be used on the\n * scrollable element and must include a writable store that holds the active store for the current `scrollTop` value.\n * You may switch the stores externally and this action will set the `scrollTop` based on the newly set store. This is\n * useful for instance providing a select box that controls the scrollable container.\n *\n * @param {HTMLElement} element - The target scrollable HTML element.\n *\n * @param {import('svelte/store').Writable<number>}   store - A writable store that stores the element scrollTop.\n *\n * @returns {import('svelte/action').ActionReturn<import('svelte/store').Writable<number>>} Lifecycle functions.\n */\nfunction applyScrolltop(element, store)\n{\n   if (!isWritableStore(store))\n   {\n      throw new TypeError(`applyScrolltop error: 'store' must be a writable Svelte store.`);\n   }\n\n   /**\n    * Updates element `scrollTop`.\n    *\n    * @param {number}   value -\n    */\n   function storeUpdate(value)\n   {\n      if (!Number.isFinite(value)) { return; }\n\n      // For some reason for scrollTop to take on first update from a new element setTimeout is necessary.\n      setTimeout(() => element.scrollTop = value, 0);\n   }\n\n   let unsubscribe = store.subscribe(storeUpdate);\n\n   const resizeControl = resizeObserver(element, Timing.debounce(() =>\n   {\n      if (element.isConnected) { store.set(element.scrollTop); }\n   }, 500));\n\n   /**\n    * Save target `scrollTop` to the current set store.\n    *\n    * @param {Event} event -\n    */\n   function onScroll(event)\n   {\n      store.set(event.target.scrollTop);\n   }\n\n   const debounceFn = Timing.debounce((e) => onScroll(e), 500);\n\n   element.addEventListener('scroll', debounceFn);\n\n   return {\n      /**\n       * @param {import('svelte/store').Writable<number>} newStore - A writable store that stores the element scrollTop.\n       */\n      update: (newStore) =>\n      {\n         unsubscribe();\n         store = newStore;\n\n         if (!isWritableStore(store))\n         {\n            throw new TypeError(`applyScrolltop.update error: 'store' must be a writable Svelte store.`);\n         }\n\n         unsubscribe = store.subscribe(storeUpdate);\n      },\n\n      destroy: () =>\n      {\n         element.removeEventListener('scroll', debounceFn);\n         unsubscribe();\n         resizeControl.destroy();\n      }\n   };\n}\n\n/**\n * Provides an action to apply style properties provided as an object.\n *\n * @param {HTMLElement} node - Target element\n *\n * @param {Record<string, string>}  properties - Key / value object of properties to set.\n *\n * @returns {import('svelte/action').ActionReturn<Record<string, string>>} Lifecycle functions.\n */\nfunction applyStyles(node, properties)\n{\n   /** Sets properties on node. */\n   function setProperties()\n   {\n      if (!isObject(properties)) { return; }\n\n      for (const prop of Object.keys(properties))\n      {\n         node.style.setProperty(`${prop}`, properties[prop]);\n      }\n   }\n\n   setProperties();\n\n   return {\n      /**\n       * @param {Record<string, string>}  newProperties - Key / value object of properties to set.\n       */\n      update: (newProperties) =>\n      {\n         properties = newProperties;\n         setProperties();\n      }\n   };\n}\n\n/**\n * Provides an action to blur the element when any pointer down event occurs outside the element. This can be useful\n * for input elements including select to blur / unfocus the element when any pointer down occurs outside the element.\n *\n * @param {HTMLElement}   node - The node to handle automatic blur on focus loss.\n *\n * @returns {import('svelte/action').ActionReturn} Lifecycle functions.\n */\nfunction autoBlur(node)\n{\n   /**\n    * Removes listener on blur.\n    */\n   function onBlur() { document.body.removeEventListener('pointerdown', onPointerDown); }\n\n   /**\n    * Adds listener on focus.\n    */\n   function onFocus() { document.body.addEventListener('pointerdown', onPointerDown); }\n\n   /**\n    * Blur the node if a pointer down event happens outside the node.\n    *\n    * @param {PointerEvent} event -\n    */\n   function onPointerDown(event)\n   {\n      if (event.target === node || node.contains(event.target)) { return; }\n\n      if (document.activeElement === node) { node.blur(); }\n   }\n\n   node.addEventListener('blur', onBlur);\n   node.addEventListener('focus', onFocus);\n\n   return {\n      destroy: () =>\n      {\n         document.body.removeEventListener('pointerdown', onPointerDown);\n         node.removeEventListener('blur', onBlur);\n         node.removeEventListener('focus', onFocus);\n      }\n   };\n}\n\n/**\n * Provides an action to monitor focus state of a given element and set an associated store with current focus state.\n *\n * This action is usable with any writable store.\n *\n * @param {HTMLElement} node - Target element.\n *\n * @param {import('svelte/store').Writable<boolean>}  storeFocused - Update store for focus changes.\n *\n * @returns {import('svelte/action').ActionReturn<import('svelte/store').Writable<boolean>>} Lifecycle functions.\n */\nfunction isFocused(node, storeFocused)\n{\n   let localFocused = false;\n\n   /**\n    * Updates `storeFocused` w/ current focused state.\n    *\n    * @param {boolean}  current - current focused state.\n    */\n   function setFocused(current)\n   {\n      localFocused = current;\n\n      if (isWritableStore(storeFocused)) { storeFocused.set(localFocused); }\n   }\n\n   /**\n    * Focus event listener.\n    */\n   function onFocus()\n   {\n      setFocused(true);\n   }\n\n   /**\n    * Blur event listener.\n    */\n   function onBlur()\n   {\n      setFocused(false);\n   }\n\n   /**\n    * Activate listeners.\n    */\n   function activateListeners()\n   {\n      node.addEventListener('focus', onFocus);\n      node.addEventListener('blur', onBlur);\n   }\n\n   /**\n    * Remove listeners.\n    */\n   function removeListeners()\n   {\n      node.removeEventListener('focus', onFocus);\n      node.removeEventListener('blur', onBlur);\n   }\n\n   activateListeners();\n\n   return {\n      /**\n       * @param {import('svelte/store').Writable<boolean>}  newStoreFocused - Update store for focus changes.\n       */\n      update: (newStoreFocused) =>\n      {\n         storeFocused = newStoreFocused;\n         setFocused(localFocused);\n      },\n\n      destroy: () => removeListeners()\n   };\n}\n\nexport { alwaysBlur, applyScrolltop, applyStyles, autoBlur, isFocused, resizeObserver };\n//# sourceMappingURL=index.js.map\n","import { cubicOut, cubicInOut, linear } from '../easing/index.js';\nimport { assign, split_css_unit, is_function } from '../internal/index.js';\n\n/**\n * Animates a `blur` filter alongside an element's opacity.\n *\n * https://svelte.dev/docs/svelte-transition#blur\n * @param {Element} node\n * @param {import('./public').BlurParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function blur(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst f = style.filter === 'none' ? '' : style.filter;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [value, unit] = split_css_unit(amount);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `opacity: ${target_opacity - od * u}; filter: ${f} blur(${u * value}${unit});`\n\t};\n}\n\n/**\n * Animates the opacity of an element from 0 to the current opacity for `in` transitions and from the current opacity to 0 for `out` transitions.\n *\n * https://svelte.dev/docs/svelte-transition#fade\n * @param {Element} node\n * @param {import('./public').FadeParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n\tconst o = +getComputedStyle(node).opacity;\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) => `opacity: ${t * o}`\n\t};\n}\n\n/**\n * Animates the x and y positions and the opacity of an element. `in` transitions animate from the provided values, passed as parameters to the element's default values. `out` transitions animate from the element's default values to the provided values.\n *\n * https://svelte.dev/docs/svelte-transition#fly\n * @param {Element} node\n * @param {import('./public').FlyParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function fly(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [xValue, xUnit] = split_css_unit(x);\n\tconst [yValue, yUnit] = split_css_unit(y);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * xValue}${xUnit}, ${(1 - t) * yValue}${yUnit});\n\t\t\topacity: ${target_opacity - od * u}`\n\t};\n}\n\n/**\n * Slides an element in and out.\n *\n * https://svelte.dev/docs/svelte-transition#slide\n * @param {Element} node\n * @param {import('./public').SlideParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function slide(node, { delay = 0, duration = 400, easing = cubicOut, axis = 'y' } = {}) {\n\tconst style = getComputedStyle(node);\n\tconst opacity = +style.opacity;\n\tconst primary_property = axis === 'y' ? 'height' : 'width';\n\tconst primary_property_value = parseFloat(style[primary_property]);\n\tconst secondary_properties = axis === 'y' ? ['top', 'bottom'] : ['left', 'right'];\n\tconst capitalized_secondary_properties = secondary_properties.map(\n\t\t(e) => `${e[0].toUpperCase()}${e.slice(1)}`\n\t);\n\tconst padding_start_value = parseFloat(style[`padding${capitalized_secondary_properties[0]}`]);\n\tconst padding_end_value = parseFloat(style[`padding${capitalized_secondary_properties[1]}`]);\n\tconst margin_start_value = parseFloat(style[`margin${capitalized_secondary_properties[0]}`]);\n\tconst margin_end_value = parseFloat(style[`margin${capitalized_secondary_properties[1]}`]);\n\tconst border_width_start_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[0]}Width`]\n\t);\n\tconst border_width_end_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[1]}Width`]\n\t);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) =>\n\t\t\t'overflow: hidden;' +\n\t\t\t`opacity: ${Math.min(t * 20, 1) * opacity};` +\n\t\t\t`${primary_property}: ${t * primary_property_value}px;` +\n\t\t\t`padding-${secondary_properties[0]}: ${t * padding_start_value}px;` +\n\t\t\t`padding-${secondary_properties[1]}: ${t * padding_end_value}px;` +\n\t\t\t`margin-${secondary_properties[0]}: ${t * margin_start_value}px;` +\n\t\t\t`margin-${secondary_properties[1]}: ${t * margin_end_value}px;` +\n\t\t\t`border-${secondary_properties[0]}-width: ${t * border_width_start_value}px;` +\n\t\t\t`border-${secondary_properties[1]}-width: ${t * border_width_end_value}px;`\n\t};\n}\n\n/**\n * Animates the opacity and scale of an element. `in` transitions animate from an element's current (default) values to the provided values, passed as parameters. `out` transitions animate from the provided values to an element's default values.\n *\n * https://svelte.dev/docs/svelte-transition#scale\n * @param {Element} node\n * @param {import('./public').ScaleParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function scale(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst sd = 1 - start;\n\tconst od = target_opacity * (1 - opacity);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - sd * u});\n\t\t\topacity: ${target_opacity - od * u}\n\t\t`\n\t};\n}\n\n/**\n * Animates the stroke of an SVG element, like a snake in a tube. `in` transitions begin with the path invisible and draw the path to the screen over time. `out` transitions start in a visible state and gradually erase the path. `draw` only works with elements that have a `getTotalLength` method, like `<path>` and `<polyline>`.\n *\n * https://svelte.dev/docs/svelte-transition#draw\n * @param {SVGElement & { getTotalLength(): number }} node\n * @param {import('./public').DrawParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n\tlet len = node.getTotalLength();\n\tconst style = getComputedStyle(node);\n\tif (style.strokeLinecap !== 'butt') {\n\t\tlen += parseInt(style.strokeWidth);\n\t}\n\tif (duration === undefined) {\n\t\tif (speed === undefined) {\n\t\t\tduration = 800;\n\t\t} else {\n\t\t\tduration = len / speed;\n\t\t}\n\t} else if (typeof duration === 'function') {\n\t\tduration = duration(len);\n\t}\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_, u) => `\n\t\t\tstroke-dasharray: ${len};\n\t\t\tstroke-dashoffset: ${u * len};\n\t\t`\n\t};\n}\n\n/**\n * The `crossfade` function creates a pair of [transitions](/docs#template-syntax-element-directives-transition-fn) called `send` and `receive`. When an element is 'sent', it looks for a corresponding element being 'received', and generates a transition that transforms the element to its counterpart's position and fades it out. When an element is 'received', the reverse happens. If there is no counterpart, the `fallback` transition is used.\n *\n * https://svelte.dev/docs/svelte-transition#crossfade\n * @param {import('./public').CrossfadeParams & {\n * \tfallback?: (node: Element, params: import('./public').CrossfadeParams, intro: boolean) => import('./public').TransitionConfig;\n * }} params\n * @returns {[(node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig, (node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig]}\n */\nexport function crossfade({ fallback, ...defaults }) {\n\t/** @type {Map<any, Element>} */\n\tconst to_receive = new Map();\n\t/** @type {Map<any, Element>} */\n\tconst to_send = new Map();\n\t/**\n\t * @param {Element} from_node\n\t * @param {Element} node\n\t * @param {import('./public').CrossfadeParams} params\n\t * @returns {import('./public').TransitionConfig}\n\t */\n\tfunction crossfade(from_node, node, params) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = (d) => Math.sqrt(d) * 30,\n\t\t\teasing = cubicOut\n\t\t} = assign(assign({}, defaults), params);\n\t\tconst from = from_node.getBoundingClientRect();\n\t\tconst to = node.getBoundingClientRect();\n\t\tconst dx = from.left - to.left;\n\t\tconst dy = from.top - to.top;\n\t\tconst dw = from.width / to.width;\n\t\tconst dh = from.height / to.height;\n\t\tconst d = Math.sqrt(dx * dx + dy * dy);\n\t\tconst style = getComputedStyle(node);\n\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\t\tconst opacity = +style.opacity;\n\t\treturn {\n\t\t\tdelay,\n\t\t\tduration: is_function(duration) ? duration(d) : duration,\n\t\t\teasing,\n\t\t\tcss: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${\n\t\t\t\tt + (1 - t) * dh\n\t\t\t});\n\t\t\t`\n\t\t};\n\t}\n\n\t/**\n\t * @param {Map<any, Element>} items\n\t * @param {Map<any, Element>} counterparts\n\t * @param {boolean} intro\n\t * @returns {(node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig}\n\t */\n\tfunction transition(items, counterparts, intro) {\n\t\treturn (node, params) => {\n\t\t\titems.set(params.key, node);\n\t\t\treturn () => {\n\t\t\t\tif (counterparts.has(params.key)) {\n\t\t\t\t\tconst other_node = counterparts.get(params.key);\n\t\t\t\t\tcounterparts.delete(params.key);\n\t\t\t\t\treturn crossfade(other_node, node, params);\n\t\t\t\t}\n\t\t\t\t// if the node is disappearing altogether\n\t\t\t\t// (i.e. wasn't claimed by the other list)\n\t\t\t\t// then we need to supply an outro\n\t\t\t\titems.delete(params.key);\n\t\t\t\treturn fallback && fallback(node, params, intro);\n\t\t\t};\n\t\t};\n\t}\n\treturn [transition(to_send, to_receive, false), transition(to_receive, to_send, true)];\n}\n","import { linear } from 'svelte/easing';\nimport { lerp } from '@typhonjs-fvtt/runtime/math/interpolate';\nimport { fade, slide } from 'svelte/transition';\n\n/**\n * Provides a rotate transition. For options `easing` is applied to the rotate transition. The default easing is\n * linear.\n *\n * Note: that when reversing the transition that time goes from `1 - 0`, so if specific options are applied for\n * rotating out transition then `end` and `initial` are swapped.\n *\n * @param {HTMLElement} node - The transition node.\n *\n * @param {object}      [options] - Optional parameters.\n *\n * @param {number}      [options.delay] - Delay in ms before start of transition.\n *\n * @param {number}      [options.duration] - Total transition length in ms.\n *\n * @param {import('svelte/transition').EasingFunction}   [options.easing=linear] - The easing function to apply to the\n *        rotate transition.\n *\n * @param {number}      [options.end=0] - End rotation in degrees.\n *\n * @param {number}      [options.initial=0] - Initial rotation in degrees.\n *\n * @returns {import('svelte/transition').TransitionConfig} Transition config.\n */\nfunction rotate(node, options)\n{\n   const easingRotate = options.easing ?? linear;\n\n   const initialDeg = options.initial ?? 0;\n   const endDeg = options.end ?? 0;\n\n   return {\n      delay: options.delay ?? 0,\n      duration: options.duration ?? 500,\n      easing: linear,\n      css: (t) =>\n      {\n         const rotateT = easingRotate(t);\n         return `transform: rotate(${lerp(initialDeg, endDeg, rotateT)}deg)`;\n      }\n   };\n}\n\n/**\n * Combines rotate & fade transitions into a single transition. For options `easing` this is applied to both transitions,\n * however if provided `easingRotate` and / or `easingFade` will take precedence. The default easing is linear.\n *\n * Note: that when reversing the transition that time goes from `1 - 0`, so if specific options are applied for\n * rotating out transition then `end` and `initial` are swapped.\n *\n * @param {HTMLElement} node - The transition node.\n *\n * @param {object}      [options] - Optional parameters.\n *\n * @param {number}      [options.delay] - Delay in ms before start of transition.\n *\n * @param {number}      [options.duration] - Total transition length in ms.\n *\n * @param {import('svelte/transition').EasingFunction}   [options.easing=linear] - The easing function to apply to both\n *        slide & fade transitions.\n *\n * @param {import('svelte/transition').EasingFunction}   [options.easingFade=linear] - The easing function to apply to\n *        the fade transition.\n *\n * @param {import('svelte/transition').EasingFunction}   [options.easingRotate=linear] - The easing function to apply\n *        to the rotate transition.\n *\n * @param {number}      [options.end=0] - End rotation in degrees.\n *\n * @param {number}      [options.initial=0] - Initial rotation in degrees.\n *\n * @returns {import('svelte/transition').TransitionConfig} Transition config.\n */\nfunction rotateFade(node, options)\n{\n   const easingFade = options.easingFade || options.easing || linear;\n   const easingRotate = options.easingRotate || options.easing || linear;\n\n   const fadeTransition = fade(node);\n\n   const initialDeg = options.initial ?? 0;\n   const endDeg = options.end ?? 0;\n\n   return {\n      delay: options.delay ?? 0,\n      duration: options.duration ?? 500,\n      easing: linear,\n      css: (t) =>\n      {\n         const fadeT = easingFade(t);\n         const rotateT = easingRotate(t);\n\n         return `transform: rotate(${lerp(initialDeg, endDeg, rotateT)}deg); ${fadeTransition.css(fadeT, 1 - fadeT)}`;\n      }\n   };\n}\n\n/**\n * Combines slide & fade transitions into a single transition. For options `easing` this is applied to both transitions,\n * however if provided `easingSlide` and / or `easingFade` will take precedence. The default easing is linear.\n *\n * @param {HTMLElement} node - The transition node.\n *\n * @param {object}      [options] - Optional parameters.\n *\n * @param {number}      [options.delay] - Delay in ms before start of transition.\n *\n * @param {number}      [options.duration] - Total transition length in ms.\n *\n * @param {import('svelte/transition').EasingFunction}   [options.easing=linear] - The easing function to apply to both\n *        slide & fade transitions.\n *\n * @param {import('svelte/transition').EasingFunction}   [options.easingFade=linear] - The easing function to apply to\n *        the fade transition.\n *\n * @param {import('svelte/transition').EasingFunction}   [options.easingSlide=linear] - The easing function to apply to\n *        the slide transition.\n *\n * @returns {import('svelte/transition').TransitionConfig} Transition config.\n */\nfunction slideFade(node, options)\n{\n   const fadeEasing = options.easingFade || options.easing || linear;\n   const slideEasing = options.easingSlide || options.easing || linear;\n\n   const fadeTransition = fade(node);\n   const slideTransition = slide(node);\n\n   return {\n      delay: options.delay || 0,\n      duration: options.duration || 500,\n      easing: linear,\n      css: (t) =>\n      {\n         const fadeT = fadeEasing(t);\n         const slideT = slideEasing(t);\n         return `${slideTransition.css(slideT, 1 - slideT)}; ${fadeTransition.css(fadeT, 1 - fadeT)}`;\n      }\n   };\n}\n\n/**\n * Converts a Svelte transition to an animation. Both transitions & animations use the same CSS / styles solution and\n * resulting data so wrap the transition function with the signature of an animation.\n *\n * @param {(node: Element, ...rest: any[]) => import('svelte/transition').TransitionConfig} fn -\n *        A Svelte transition function.\n *\n * @returns {(\n *    node: Element,\n *    data: { from: DOMRect, to: DOMRect },\n *    ...rest: any\n * ) => import('svelte/animation').AnimationConfig} - Transition function converted to an animation.\n */\nfunction toAnimation(fn)\n{\n   return (node, animations, ...rest) => fn(node, ...rest);\n}\n\n/**\n * Provides static data useful for handling custom props / options to components that allow dynamic configuration of\n * transitions. This is used in all application shells and components that have configurable transitions.\n *\n * @ignore\n */\nclass TJSDefaultTransition\n{\n   static #options = {};\n\n   /**\n    * @returns {{}}\n    */\n   static get options() { return this.#options; }\n}\n\nexport { TJSDefaultTransition, rotate, rotateFade, slideFade, toAnimation };\n//# sourceMappingURL=index.js.map\n","<script>\n   import { applyStyles }              from '@typhonjs-fvtt/runtime/svelte/action/dom';\n   import { TJSDefaultTransition }     from '@typhonjs-fvtt/runtime/svelte/transition';\n   import { isObject }                 from '@typhonjs-fvtt/runtime/util/object';\n\n   /** @type {string} */\n   export let background = '#50505080';\n\n   /** @type {boolean} */\n   export let captureInput = true;\n\n   /** @type {string} */\n   export let id = void 0;\n\n   /** @type {boolean} */\n   export let slotSeparate = void 0;\n\n   /** @type {Record<string, string>} */\n   export let styles = void 0;\n\n   /** @type {number} */\n   export let zIndex = Number.MAX_SAFE_INTEGER;\n\n   /** @type {HTMLDivElement} */\n   let backgroundEl, containerEl, glassPaneEl;\n\n   $: slotSeparate = typeof slotSeparate === 'boolean' ? slotSeparate : false;\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   // The following block is somewhat complex, but allows transition options to be updated reactively during\n   // runtime execution.\n\n   // Exports properties to set a transition w/ in / out options.\n   export let transition = void 0;\n   export let inTransition = void 0;\n   export let outTransition = void 0;\n\n   // Exports properties to set options for any transitions.\n   export let transitionOptions = void 0;\n   export let inTransitionOptions = TJSDefaultTransition.options;\n   export let outTransitionOptions = TJSDefaultTransition.options;\n\n   // Tracks last transition state.\n   let oldTransition = void 0;\n   let oldTransitionOptions = void 0\n\n   // Run this reactive block when the last transition state is not equal to the current state.\n   $: if (oldTransition !== transition)\n   {\n      // If transition is defined and not the default transition then set it to both in and out transition otherwise\n      // set the default transition to both in & out transitions.\n      const newTransition = typeof transition === 'function' ? transition : void 0;\n\n      inTransition = newTransition;\n      outTransition = newTransition;\n\n      oldTransition = newTransition;\n   }\n\n   // Run this reactive block when the last transition options state is not equal to the current options state.\n   $: if (oldTransitionOptions !== transitionOptions)\n   {\n      const newOptions = transitionOptions !== TJSDefaultTransition.options && isObject(transitionOptions) ?\n       transitionOptions : TJSDefaultTransition.options;\n\n      inTransitionOptions = newOptions;\n      outTransitionOptions = newOptions;\n\n      oldTransitionOptions = newOptions;\n   }\n\n   // Handle cases if inTransition is unset; assign noop default transition function.\n   $: if (typeof inTransition !== 'function') { inTransition = void 0; }\n\n   // Handle cases if outTransition is unset; assign noop default transition function.\n   $: if (typeof outTransition !== 'function') { outTransition = void 0; }\n\n   // Handle cases if inTransitionOptions is unset; assign empty default transition options.\n   $: if (!isObject(inTransitionOptions)) { inTransitionOptions = TJSDefaultTransition.options; }\n\n   // Handle cases if outTransitionOptions is unset; assign empty default transition options.\n   $: if (!isObject(outTransitionOptions)) { outTransitionOptions = TJSDefaultTransition.options; }\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   /**\n    * Swallows / stops propagation for all events where the event target is not contained by the glass pane element.\n    *\n    * @param {Event} event - The event to swallow.\n    */\n   function swallow(event)\n   {\n      const targetEl = event.target;\n\n      if (targetEl !== glassPaneEl && targetEl !== backgroundEl  && targetEl !== containerEl &&\n        glassPaneEl.contains(targetEl))\n      {\n         return;\n      }\n\n      if (captureInput)\n      {\n         event.preventDefault();\n         event.stopImmediatePropagation();\n      }\n   }\n</script>\n\n<!-- Capture all input -->\n<svelte:window\n        on:contextmenu|capture={swallow}\n        on:dblclick|capture={swallow}\n        on:keydown|capture={swallow}\n        on:keyup|capture={swallow}\n        on:mousedown|capture={swallow}\n        on:mousemove|capture={swallow}\n        on:mouseup|capture={swallow}\n        on:pointerdown|capture={swallow}\n        on:pointermove|capture={swallow}\n        on:pointerup|capture={swallow}\n        on:touchend|capture={swallow}\n        on:touchmove|capture={swallow}\n        on:touchstart|capture={swallow}\n        on:wheel|capture={swallow}\n/>\n\n<div id={id}\n     bind:this={glassPaneEl}\n     class=tjs-glass-pane\n     style:z-index={zIndex}>\n\n   {#if slotSeparate}\n      <div class=tjs-glass-pane-background\n           bind:this={backgroundEl}\n           style:background={background}\n           in:inTransition|global={inTransitionOptions}\n           out:outTransition|global={outTransitionOptions}\n           use:applyStyles={styles} />\n\n      <div class=tjs-glass-pane-container bind:this={containerEl}>\n         <slot />\n      </div>\n   {:else}\n      <div class=tjs-glass-pane-background\n           bind:this={backgroundEl}\n           style:background={background}\n           in:inTransition|global={inTransitionOptions}\n           out:outTransition|global={outTransitionOptions}\n           use:applyStyles={styles} >\n         <slot />\n      </div>\n   {/if}\n</div>\n\n<style>\n   .tjs-glass-pane, .tjs-glass-pane-background , .tjs-glass-pane-container {\n      position: absolute;\n      overflow: hidden;\n\n      height: 100%;\n      width: 100%;\n      max-height: 100%;\n      max-width: 100%;\n   }\n</style>\n","import { writable } from 'svelte/store';\n\n/**\n * Provides the internal context to all application shells.\n */\nexport class AppShellContextInternal\n{\n   /** @type {InternalAppStores} */\n   #stores;\n\n   constructor()\n   {\n      this.#stores = {\n         elementContent: writable(void 0),\n         elementRoot: writable(void 0)\n      };\n\n      Object.freeze(this.#stores);\n      Object.seal(this);\n   }\n\n   /**\n    * @returns {InternalAppStores} The internal context stores for elementContent / elementRoot\n    */\n   get stores()\n   {\n      return this.#stores;\n   }\n}\n\n/**\n * @typedef {object} InternalAppStores\n *\n * @property {import('svelte/store').Writable<HTMLElement>} elementContent The window content element.\n *\n * @property {import('svelte/store').Writable<HTMLElement>} elementRoot The window root element.\n */\n","import { isObject } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * A helper to create a set of radio checkbox input elements in a named set.\n * The provided keys are the possible radio values while the provided values are human readable labels.\n *\n * @param {string} name         The radio checkbox field name\n *\n * @param {object} choices      A mapping of radio checkbox values to human readable labels\n *\n * @param {object} options      Options which customize the radio boxes creation\n *\n * @param {string} options.checked    Which key is currently checked?\n *\n * @param {boolean} options.localize  Pass each label through string localization?\n *\n * @returns {string} HTML for radio boxes.\n *\n * @example <caption>The provided input data</caption>\n * let groupName = \"importantChoice\";\n * let choices = {a: \"Choice A\", b: \"Choice B\"};\n * let chosen = \"a\";\n *\n * @example <caption>The template HTML structure</caption>\n * <div class=\"form-group\">\n *   <label>Radio Group Label</label>\n *   <div class=\"form-fields\">\n *     {@html radioBoxes(groupName, choices, { checked: chosen, localize: true})}\n *   </div>\n * </div>\n */\nfunction radioBoxes(name, choices, options)\n{\n   const checked = options['checked'] || null;\n\n   const localize = options['localize'] || false;\n\n   let html = '';\n\n   for (let [key, label] of Object.entries(choices)) // eslint-disable-line prefer-const\n   {\n      if (localize) { label = globalThis.game.i18n.localize(label); }\n      const isChecked = checked === key;\n      html += `<label class=\"checkbox\"><input type=\"radio\" name=\"${name}\" value=\"${key}\" ${isChecked ? \"checked\" : \"\"}> ${label}</label>`;\n   }\n\n   return new globalThis.Handlebars.SafeString(html);\n}\n\n/**\n * Converts the `selectOptions` Handlebars helper to be Svelte compatible. This is useful when initially converting\n * over an app to Svelte and for essential usage to several dialogs that mirror the core Foundry experience. For\n * an example of usage see {@link TJSDocumentOwnership}.\n *\n * A helper to create a set of <option> elements in a <select> block based on a provided dictionary.\n * The provided keys are the option values while the provided values are human-readable labels.\n * This helper supports both single-select and multi-select input fields.\n *\n * @param {object} choices                     A mapping of radio checkbox values to human-readable labels\n *\n * @param {object} options                     Helper options\n *\n * @param {string|string[]} [options.selected] Which key or array of keys that are currently selected?\n *\n * @param {boolean} [options.localize=false]   Pass each label through string localization?\n *\n * @param {string} [options.blank]             Add a blank option as the first option with this label\n *\n * @param {string} [options.nameAttr]          Look up a property in the choice object values to use as the option value\n *\n * @param {string} [options.labelAttr]         Look up a property in the choice object values to use as the option label\n *\n * @param {boolean} [options.inverted=false]   Use the choice object value as the option value, and the key as the label\n *                                             instead of vice-versa\n *\n * @param {boolean} [options.sort=false]       When true sort by label name.\n *\n * @returns {string} The <options> HTML element(s).\n *\n * @example <caption>The provided input data</caption>\n * let choices = {a: 'Choice A', b: 'Choice B'};\n * let value = 'a';\n *\n * @example <caption>The template HTML structure</caption>\n * <select name=\"importantChoice\">\n *   {@html selectOptions(choices { selected: value, localize: true })}\n * </select>\n *\n * @example <caption>The resulting HTML</caption>\n * <select name=\"importantChoice\">\n *   <option value=\"a\" selected>Choice A</option>\n *   <option value=\"b\">Choice B</option>\n * </select>\n *\n * @example <caption>Using inverted</caption>\n * let choices = {'Choice A': 'a', 'Choice B': 'b'};\n * let value = 'a';\n *\n * @example <caption>The template HTML structure</caption>\n * <select name=\"importantChoice\">\n *   {@html selectOptions(choices, { selected: value, inverted: true })}\n * </select>\n *\n * @example <caption>Using nameAttr and labelAttr with objects</caption>\n * let choices = {foo: {key: 'a', label: 'Choice A'}, bar: {key: 'b', label: 'Choice B'}};\n * let value = 'b';\n *\n * @example <caption>The template HTML structure</caption>\n * <select name=\"importantChoice\">\n *   {@html selectOptions(choices, { selected: value, nameAttr: 'key', labelAttr: 'label' })}\n * </select>\n *\n * @example <caption>Using nameAttr and labelAttr with arrays</caption>\n * let choices = [{key: 'a', label: 'Choice A'}, {key: 'b', label: 'Choice B'}];\n * let value = 'b';\n *\n * @example <caption>The template HTML structure</caption>\n * <select name=\"importantChoice\">\n *   {@html selectOptions(choices, { selected: value, nameAttr: 'key', labelAttr: 'label' })}\n * </select>\n */\nfunction selectOptions(choices, options)\n{\n   const { localize = false, blank = null, sort = false, nameAttr, labelAttr, inverted } = options;\n   let { selected = null } = options;\n\n   selected = selected instanceof Array ? selected.map(String) : [String(selected)];\n\n   // Prepare the choices as an array of objects\n   const selectChoices = [];\n\n   if (choices instanceof Array)\n   {\n      for (const choice of choices)\n      {\n         const name = String(choice[nameAttr]);\n         let label = choice[labelAttr];\n         if (localize) { label = globalThis.game.i18n.localize(label); }\n         selectChoices.push({ name, label });\n      }\n   }\n   else\n   {\n      for (const choice of Object.entries(choices))\n      {\n         const [key, value] = inverted ? choice.reverse() : choice;\n         const name = String(nameAttr ? value[nameAttr] : key);\n         let label = labelAttr ? value[labelAttr] : value;\n         if (localize) { label = globalThis.game.i18n.localize(label); }\n         selectChoices.push({ name, label });\n      }\n   }\n\n   // Sort the array of options\n   if (sort) { selectChoices.sort((a, b) => a.label.localeCompare(b.label)); }\n\n   // Prepend a blank option\n   if (blank !== null)\n   {\n      const label = localize ? globalThis.game.i18n.localize(blank) : blank;\n      selectChoices.unshift({ name: '', label });\n   }\n\n   // Create the HTML\n   let html = '';\n   for (const option of selectChoices)\n   {\n      const label = globalThis.Handlebars.escapeExpression(option.label);\n      const isSelected = selected.includes(option.name);\n      html += `<option value=\"${option.name}\" ${isSelected ? \"selected\" : \"\"}>${label}</option>`;\n   }\n\n   return new globalThis.Handlebars.SafeString(html);\n}\n\n/**\n * Localize a string including variable formatting for input arguments. Provide a string ID which defines the localized\n * template. Variables can be included in the template enclosed in braces and will be substituted using those named\n * keys.\n *\n * @param {string}   stringId - The string ID to translate.\n *\n * @param {object}   [data] - Provided input data.\n *\n * @returns {string} The translated and formatted string\n */\nfunction localize(stringId, data)\n{\n   const result = !isObject(data) ? globalThis.game.i18n.localize(stringId) :\n    globalThis.game.i18n.format(stringId, data);\n\n   return result !== void 0 ? result : '';\n}\n\nexport { localize, radioBoxes, selectOptions };\n//# sourceMappingURL=index.js.map\n","<script>\n   /**\n    * Provides an app header button conforming to the Foundry {@link ApplicationHeaderButton} type. Additionally, a\n    * `title` field is supported to give a tool tip for the button. For backward compatibility `onclick` is supported,\n    * but for uniformity across TRL defining an `onPress` function is recommended. If defined it is invoked when\n    * the button is clicked or `Enter` key pressed and state is updated accordingly.\n    *\n    * TRL also supports the following extra button data:\n    * - {keyCode='Enter'}           keyCode: A string conforming to `KeyboardEvent.code` to activate `onPress` callback.\n    * - {keepMinimized=false}       keepMinimized: When true the button is not removed when app minimized.\n    * - {Function}                  onContextMenu: Invoked when right mouse button or contextmenu key is pressed.\n    * - {Function}                  onPress: Invoked when left mouse button or `keyCode` key is pressed.\n    * - {Record<string, string>}    styles: Additional inline styles to apply to button.\n    * - {string}                    title: Tooltip title.\n    */\n   import { applyStyles }   from '@typhonjs-fvtt/runtime/svelte/action/dom';\n   import { isObject }      from '@typhonjs-fvtt/runtime/util/object';\n\n   import { localize }      from '@typhonjs-fvtt/runtime/svelte/helper';\n\n   export let button = void 0;\n\n   const s_REGEX_HTML = /^\\s*<.*>$/;\n\n   $: title = isObject(button) && typeof button.title === 'string' ? localize(button.title) : '';\n\n   // Handle icon and treat bare strings as the icon class; otherwise assume the icon is fully formed HTML.\n   $: icon = isObject(button) && typeof button.icon !== 'string' ? void 0 : s_REGEX_HTML.test(button.icon) ?\n    button.icon : `<i class=\"${button.icon}\" title=\"${title}\"></i>`;\n\n   $: label = isObject(button) && typeof button.label === 'string' ? localize(button.label) : void 0;\n\n   $: keepMinimized = isObject(button) && typeof button.keepMinimized === 'boolean' ? button.keepMinimized : false;\n\n   $: keyCode = isObject(button) && typeof button.keyCode === 'string' ? button.keyCode : 'Enter';\n\n   $: styles = isObject(button) && isObject(button.styles) ? button.styles : void 0;\n\n   function onClick(event)\n   {\n      // Accept `onPress or `onclick` as the function / data to invoke.\n      const invoke = button?.onPress ?? button?.onclick;\n\n      if (typeof invoke === 'function')\n      {\n         invoke.call(button, event);\n         button = button; // This provides a reactive update if button data changes.\n      }\n   }\n\n   function onContextMenu(event)\n   {\n      // Accept `onContextMenu` as the function / data to invoke.\n      const invoke = button?.onContextMenu;\n\n      if (typeof invoke === 'function')\n      {\n         invoke.call(button, event);\n         button = button; // This provides a reactive update if button data changes.\n      }\n   }\n\n   /**\n    * Consume / stop propagation of key down when key codes match.\n    *\n    * @param {KeyboardEvent}    event -\n    */\n   function onKeydown(event)\n   {\n      if (event.code === keyCode)\n      {\n         event.preventDefault();\n         event.stopPropagation();\n      }\n   }\n\n   /**\n    * Handle press event if key codes match.\n    *\n    * @param {KeyboardEvent}    event -\n    */\n   function onKeyup(event)\n   {\n      if (event.code === keyCode)\n      {\n         const invoke = button.onPress ?? button.onclick;\n\n         if (typeof invoke === 'function')\n         {\n            invoke.call(button, event);\n            button = button; // This provides a reactive update if button data changes.\n         }\n\n         event.preventDefault();\n         event.stopPropagation();\n      }\n   }\n</script>\n\n<svelte:options accessors={true}/>\n\n<!-- svelte-ignore a11y-missing-attribute -->\n<a on:click|preventDefault|stopPropagation={onClick}\n   on:contextmenu|preventDefault|stopPropagation={onContextMenu}\n   on:keydown={onKeydown}\n   on:keyup={onKeyup}\n   use:applyStyles={styles}\n   class=\"header-button {button.class}\"\n   class:keep-minimized={keepMinimized}\n   aria-label={label}\n   tabindex=0\n   role=button>\n    {@html icon}{#if label}<span class:has-icon={icon !== void 0}>{label}</span>{/if}\n</a>\n\n<style>\n   a {\n      padding: var(--tjs-app-header-button-padding, 0 3px);\n   }\n\n   a :global(i) {\n      padding: var(--tjs-app-header-button-icon-padding, 0);\n   }\n\n   a:hover {\n      text-shadow: var(--tjs-app-header-button-text-shadow-hover, var(--tjs-default-text-shadow-focus-hover, inherit));\n   }\n\n   a:focus-visible {\n      box-shadow: var(--tjs-app-header-button-box-shadow-focus-visible, var(--tjs-default-box-shadow-focus-visible));\n      outline: var(--tjs-app-header-button-outline-focus-visible, var(--tjs-default-outline-focus-visible, revert));\n      transition: var(--tjs-app-header-button-transition-focus-visible, var(--tjs-default-transition-focus-visible));\n      text-shadow: var(--tjs-app-header-button-text-shadow-focus-visible, var(--tjs-default-text-shadow-focus-hover, inherit));\n   }\n\n   span {\n      padding: var(--tjs-app-header-button-label-padding, 0);\n   }\n\n   span.has-icon {\n      padding: var(--tjs-app-header-button-label-padding, 0 0 0 3px);\n   }\n</style>\n","<script>\n   import { getContext }            from 'svelte';\n   import { cubicOut }              from 'svelte/easing';\n\n   import { isSvelteComponent }     from '@typhonjs-fvtt/runtime/svelte/util';\n   import { isObject }              from '@typhonjs-fvtt/runtime/util/object';\n\n   import { localize }              from '@typhonjs-fvtt/runtime/svelte/helper';\n\n   import {\n      draggable as dragDefault }    from '@typhonjs-fvtt/runtime/svelte/store/position';\n\n   import TJSHeaderButton           from './TJSHeaderButton.svelte';\n\n   export let draggable = void 0;\n   export let draggableOptions = void 0;\n\n   const { application } = getContext('#external');\n\n   // Focus related app options stores.\n   const { focusAuto, focusKeep } = application.reactive.storeAppOptions;\n\n   const { elementRoot } = getContext('#internal').stores;\n\n   const storeTitle = application.reactive.storeAppOptions.title;\n   const storeDraggable = application.reactive.storeAppOptions.draggable;\n   const storeDragging = application.reactive.storeUIState.dragging;\n   const storeHeaderButtons = application.reactive.storeUIState.headerButtons;\n   const storeHeaderIcon = application.reactive.storeAppOptions.headerIcon;\n   const storeHeaderNoTitleMinimized = application.reactive.storeAppOptions.headerNoTitleMinimized;\n   const storeMinimizable = application.reactive.storeAppOptions.minimizable;\n   const storeMinimized = application.reactive.storeUIState.minimized;\n\n   // These classes in the window header allow dragging.\n   const s_DRAG_TARGET_CLASSLIST = Object.freeze(['tjs-app-icon', 'tjs-window-header-spacer',\n    'window-header', 'window-title']);\n\n   let dragOptions;\n\n   $: draggable = typeof draggable === 'function' ? draggable : dragDefault;\n\n   // Combines external options with defaults for TJSApplicationHeader. By default, easing is turned on w/ duration of\n   // 0.08 seconds and cubicOut, but can be overridden by any provided `draggableOptions`. `position`, `active`, and\n   // `storeDragging` are always overridden by application position / stores.\n   $: dragOptions = Object.assign({}, { ease: true, easeOptions: { duration: 0.08, ease: cubicOut } },\n    isObject(draggableOptions) ? draggableOptions : {}, { position: application.position, active:\n     $storeDraggable, storeDragging, hasTargetClassList: s_DRAG_TARGET_CLASSLIST });\n\n   let displayHeaderTitle;\n\n   $: displayHeaderTitle = $storeHeaderNoTitleMinimized && $storeMinimized ? 'none' : null;\n\n   let buttonsLeft;\n   let buttonsRight;\n\n   $:\n   {\n      buttonsLeft = [];\n      buttonsRight = [];\n\n      for (const button of $storeHeaderButtons)\n      {\n         const buttonsList = typeof button?.alignLeft === 'boolean' && button?.alignLeft ? buttonsLeft : buttonsRight;\n\n         // If the button is a Svelte component set it as the class otherwise use `TJSHeaderButton` w/ button as props.\n         buttonsList.push(isSvelteComponent(button) ? { class: button, props: {} } :\n          { class: TJSHeaderButton, props: { button } });\n      }\n   }\n\n   function minimizable(node, booleanStore)\n   {\n      const callback = (event) =>\n      {\n         // Only toggle minimize state if window title or header is the event target. Also allow toggle state if the\n         // event target has 'keep-minimized' class.\n         if (event.target.classList.contains('window-title') || event.target.classList.contains('window-header') ||\n           event.target.classList.contains('keep-minimized'))\n         {\n            application._onToggleMinimize(event);\n         }\n      }\n\n      function activateListeners() { node.addEventListener('dblclick', callback); }\n      function removeListeners() { node.removeEventListener('dblclick', callback); }\n\n      if (booleanStore) { activateListeners(); }\n\n      return {\n         update: (booleanStore) =>  // eslint-disable-line no-shadow\n         {\n            if (booleanStore) { activateListeners(); }\n            else { removeListeners(); }\n         },\n\n         destroy: () => removeListeners()\n      };\n   }\n\n   /**\n    * Explicitly focus `elementRoot` if pointer event is not consumed by header buttons / components. This allows\n    * keyboard tab navigation to select header buttons.\n    *\n    * Note: if `focusKeep` app option store is set to true `elementRoot` is only focused if the current browser wide\n    * active element is not contained inside the app element.\n    */\n   function onPointerdown(event)\n   {\n      const rootEl = $elementRoot;\n\n      if ($focusAuto && rootEl instanceof HTMLElement && rootEl?.isConnected)\n      {\n         if ($focusKeep)\n         {\n            const focusOutside = document.activeElement instanceof HTMLElement &&\n             !rootEl.contains(document.activeElement);\n\n            // Only focus the content element if the active element is outside the app; maintaining internal focused\n            // element.\n            if (focusOutside)\n            {\n               rootEl.focus();\n            }\n            else\n            {\n               event.preventDefault();\n            }\n         }\n         else\n         {\n            rootEl.focus();\n         }\n      }\n   }\n</script>\n\n{#key draggable}\n   <header class=\"window-header flexrow\"\n           use:draggable={dragOptions}\n           use:minimizable={$storeMinimizable}\n           on:pointerdown={onPointerdown}>\n      {#if typeof $storeHeaderIcon === 'string'}\n         <img class=\"tjs-app-icon keep-minimized\" src={$storeHeaderIcon} alt=icon>\n      {/if}\n      <h4 class=window-title style:display={displayHeaderTitle}>\n         {localize($storeTitle)}\n      </h4>\n      {#each buttonsLeft as button}\n         <svelte:component this={button.class} {...button.props} />\n      {/each}\n      <span class=\"tjs-window-header-spacer keep-minimized\" />\n      {#each buttonsRight as button}\n         <svelte:component this={button.class} {...button.props} />\n      {/each}\n   </header>\n{/key}\n\n<style>\n   /**\n    * Provides a zero space element that expands to the right creating the gap between window title and left aligned\n    * buttons and right aligned buttons. Note the use of a negative left margin to remove the gap between elements.\n    */\n   .tjs-window-header-spacer {\n      flex: 0;\n      margin-left: calc(-1 * var(--tjs-app-header-gap, 5px));\n      margin-right: auto;\n   }\n\n   .window-header {\n      flex: var(--tjs-app-header-flex, 0 0 30px);\n      gap: var(--tjs-app-header-gap, 5px);\n      padding: var(--tjs-app-header-padding, 0 4px);\n   }\n\n   .window-header .tjs-app-icon {\n      align-self: center;\n      border-radius: var(--tjs-app-header-icon-border-radius, 4px);\n      flex: 0 0 var(--tjs-app-header-icon-width, 24px);\n      height: var(--tjs-app-header-icon-height, 24px);\n   }\n\n   .window-title {\n      gap: var(--tjs-app-header-gap, 5px);\n      max-width: fit-content;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n   }\n</style>\n","<script>\n   import { A11yHelper }    from '@typhonjs-fvtt/runtime/util/browser';\n\n   /** @type {HTMLElement} */\n   export let elementRoot = void 0;\n\n   /** @type {boolean} */\n   export let enabled = true;\n\n   let ignoreElements, wrapEl;\n\n   $: if (wrapEl) { ignoreElements = new Set([wrapEl]); }\n\n   function onFocus()\n   {\n      // Early out if not enabled.\n      if (!enabled) { return; }\n\n      if (elementRoot instanceof HTMLElement)\n      {\n         const firstFocusEl = A11yHelper.getFirstFocusableElement(elementRoot, ignoreElements);\n\n         if (firstFocusEl instanceof HTMLElement && firstFocusEl !== wrapEl)\n         {\n            firstFocusEl.focus();\n         }\n         else\n         {\n            // No focus target found, so focus elementRoot.\n            elementRoot.focus();\n         }\n      }\n   }\n</script>\n\n<!-- svelte-ignore a11y-no-noninteractive-tabindex -->\n<div bind:this={wrapEl} class=tjs-focus-wrap tabindex=0 on:focus={onFocus} />\n\n<style>\n    div {\n        width: 0;\n        height: 0;\n        flex: 0;\n    }\n\n    div:focus {\n        outline: none;\n    }\n</style>\n","<script>\n   import { getContext }         from 'svelte';\n\n   export let isResizable = false;\n\n   const application = getContext('#external').application;\n\n   // Allows retrieval of the element root at runtime.\n   const storeElementRoot = getContext('#internal').stores.elementRoot;\n\n   const storeResizable = application.reactive.storeAppOptions.resizable;\n\n   const storeMinimized = application.reactive.storeUIState.minimized;\n   const storeResizing = application.reactive.storeUIState.resizing;\n\n   let elementResize;\n\n   $: if (elementResize)\n   {\n      // Instead of creating a derived store it is easier to use isResizable and the minimized store below.\n      elementResize.style.display = isResizable && !$storeMinimized ? 'block' : 'none';\n\n      // Add / remove `resizable` class from element root.\n      const elementRoot = $storeElementRoot;\n      if (elementRoot) { elementRoot.classList[isResizable ? 'add' : 'remove']('resizable'); }\n   }\n\n   /**\n    * Provides an action to handle resizing the application shell based on the resizable app option.\n    *\n    * @param {HTMLElement}       node - The node associated with the action.\n    *\n    * @param {object}            [opts] - Optional parameters.\n    *\n    * @param {boolean}           [opts.active=true] - A boolean value; attached to a readable store.\n    *\n    * @param {Writable<boolean>} [opts.storeResizing] - A writable store that tracks \"resizing\" state.\n    *\n    * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\n    */\n   function resizable(node, { active = true, storeResizing = void 0 } = {})\n   {\n      /**\n       * Duplicate the app / Positionable starting position to track differences.\n       *\n       * @type {object}\n       */\n      let position = null;\n\n      /**\n       * Stores the initial X / Y on drag down.\n       *\n       * @type {object}\n       */\n      let initialPosition = {};\n\n      /**\n       * Stores the current resizing state and gates the move pointer as the resizing store is not\n       * set until the first pointer move.\n       *\n       * @type {boolean}\n       */\n      let resizing = false;\n\n      /**\n       * Remember event handlers associated with this action so they may be later unregistered.\n       *\n       * @type {Object}\n       */\n      const handlers = {\n         resizeDown: ['pointerdown', (e) => onResizePointerDown(e), false],\n         resizeMove: ['pointermove', (e) => onResizePointerMove(e), false],\n         resizeUp: ['pointerup', (e) => onResizePointerUp(e), false]\n      };\n\n      /**\n       * Activates listeners.\n       */\n      function activateListeners()\n      {\n         // Resize handlers\n         node.addEventListener(...handlers.resizeDown);\n\n         isResizable = true;\n\n         node.style.display = 'block';\n      }\n\n      /**\n       * Removes listeners.\n       */\n      function removeListeners()\n      {\n         if (typeof storeResizing?.set === 'function') { storeResizing.set(false); }\n\n         // Resize handlers\n         node.removeEventListener(...handlers.resizeDown);\n         node.removeEventListener(...handlers.resizeMove);\n         node.removeEventListener(...handlers.resizeUp);\n\n         node.style.display = 'none';\n\n         isResizable = false;\n      }\n\n      // On mount if resizable is true then activate listeners otherwise set element display to `none`.\n      if (active)\n      {\n         activateListeners();\n      }\n      else\n      {\n         node.style.display = 'none';\n      }\n\n      /**\n       * Handle the initial pointer down that activates resizing capture.\n       */\n      function onResizePointerDown(event)\n      {\n         event.preventDefault();\n\n         resizing = false;\n\n         // Record initial position\n         position = application.position.get();\n\n         if (position.height === 'auto') { position.height = $storeElementRoot.clientHeight; }\n         if (position.width === 'auto') { position.width = $storeElementRoot.clientWidth; }\n\n         initialPosition = { x: event.clientX, y: event.clientY };\n\n         // Add temporary handlers\n         node.addEventListener(...handlers.resizeMove);\n         node.addEventListener(...handlers.resizeUp);\n\n         node.setPointerCapture(event.pointerId);\n      }\n\n      /**\n       * Sets the width / height of the positionable application.\n       */\n      function onResizePointerMove(event)\n      {\n         event.preventDefault();\n\n         if (!resizing && typeof storeResizing?.set === 'function')\n         {\n            resizing = true;\n            storeResizing.set(true);\n         }\n\n         application.position.set({\n            width: position.width + (event.clientX - initialPosition.x),\n            height: position.height + (event.clientY - initialPosition.y)\n         });\n      }\n\n      /**\n       * Conclude the dragging behavior when the pointer is released setting the final position and\n       * removing listeners.\n       */\n      function onResizePointerUp(event)\n      {\n         resizing = false;\n         if (typeof storeResizing?.set === 'function') { storeResizing.set(false); }\n\n         event.preventDefault();\n         node.removeEventListener(...handlers.resizeMove);\n         node.removeEventListener(...handlers.resizeUp);\n\n         application._onResize(event);\n      }\n\n      return {\n         update: ({ active }) =>  // eslint-disable-line no-shadow\n         {\n            if (active) { activateListeners(); }\n            else { removeListeners(); }\n         },\n\n         destroy: () => removeListeners()\n      };\n   }\n\n</script>\n\n<div class=\"window-resizable-handle\"\n     use:resizable={{active: $storeResizable, storeResizing}}\n     bind:this={elementResize}>\n   <i class=\"fas fa-arrows-alt-h\"></i>\n</div>\n","<script>\n   /**\n    * Provides an application shell is a main top level slotted component that provides a reactive\n    * outer wrapper and header bar for the main content component.\n    */\n\n   import {\n      getContext,\n      onMount,\n      setContext }                     from 'svelte';\n\n   import {\n      applyStyles,\n      resizeObserver }                 from '@typhonjs-fvtt/runtime/svelte/action/dom';\n\n   import { TJSDefaultTransition }     from '@typhonjs-fvtt/runtime/svelte/transition';\n   import { A11yHelper }               from '@typhonjs-fvtt/runtime/util/browser';\n   import { isObject }                 from '@typhonjs-fvtt/runtime/util/object';\n\n   import { AppShellContextInternal }  from './AppShellContextInternal.js';\n   import TJSApplicationHeader         from './TJSApplicationHeader.svelte';\n   import TJSFocusWrap                 from './TJSFocusWrap.svelte';\n   import ResizableHandle              from './ResizableHandle.svelte';\n\n   // Bound to the content and root elements. Can be used by parent components. SvelteApplication will also\n   // use 'elementRoot' to set the element of the Application. You can also provide `elementContent` and\n   // `elementTarget`. Please see SvelteApplication lifecycle documentation.\n   export let elementContent = void 0;\n   export let elementRoot = void 0;\n\n   // Allows custom draggable implementations to be forwarded to TJSApplicationHeader.\n   export let draggable = void 0;\n   export let draggableOptions = void 0;\n\n   // The children array can be specified by a parent via prop or is read below from the external context.\n   // export let children = void 0;\n\n   // Explicit style overrides for the main app and content elements. Uses action `applyStyles`.\n   export let stylesApp = void 0;\n   export let stylesContent = void 0;\n\n   // If a parent component binds and sets `appOffsetHeight` to true then a resizeObserver action is enabled on the\n   // outer application `div`. Additionally, the SvelteApplication position resizeObserved store is updated.\n   export let appOffsetHeight = false;\n   export let appOffsetWidth = false;\n\n   // Set to `resizeObserver` if either of the above props are truthy otherwise a null operation.\n   const appResizeObserver = !!appOffsetHeight || !!appOffsetWidth ? resizeObserver : () => null;\n\n   // If a parent component binds and sets `contentOffsetHeight` or `contentOffsetWidth` to true then a\n   // resizeObserver action is enabled on the content `section`.\n   export let contentOffsetHeight = false;\n   export let contentOffsetWidth = false;\n\n   // Set to `resizeObserver` if either of the above props are truthy otherwise a null operation.\n   const contentResizeObserver = !!contentOffsetHeight || !!contentOffsetWidth ? resizeObserver : () => null;\n\n   // Provides the internal context for data / stores of the application shell.\n   const internal = new AppShellContextInternal();\n\n   // Provides options to `A11yHelper.getFocusableElements` to ignore TJSFocusWrap by CSS class.\n   const s_IGNORE_CLASSES = { ignoreClasses: ['tjs-focus-wrap'] };\n\n   // Internal context for `elementContent` / `elementRoot` stores.\n   setContext('#internal', internal);\n\n   // Only update the `elementContent` store if the new `elementContent` is not null or undefined.\n   $: if (elementContent !== void 0 && elementContent !== null)\n   {\n      getContext('#internal').stores.elementContent.set(elementContent);\n   }\n\n   // Only update the `elementRoot` store if the new `elementRoot` is not null or undefined.\n   $: if (elementRoot !== void 0 && elementRoot !== null)\n   {\n      getContext('#internal').stores.elementRoot.set(elementRoot);\n   }\n\n   // Store application reference.\n   const { application } = getContext('#external');\n\n   // Focus related app options stores.\n   const { focusAuto, focusKeep, focusTrap } = application.reactive.storeAppOptions;\n\n   const { minimized } = application.reactive.storeUIState;\n\n   let focusWrapEnabled;\n\n   // Enable TJSFocusWrap component when focus trapping app option is true and app is not minimized.\n   $: focusWrapEnabled = $focusAuto && $focusTrap && !$minimized;\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   // The following block is somewhat complex, but allows transition options to be updated reactively during\n   // runtime execution.\n\n   // Exports properties to set a transition w/ in / out options.\n   export let transition = void 0;\n   export let inTransition = void 0;\n   export let outTransition = void 0;\n\n   // Exports properties to set options for any transitions.\n   export let transitionOptions = void 0;\n   export let inTransitionOptions = TJSDefaultTransition.options;\n   export let outTransitionOptions = TJSDefaultTransition.options;\n\n   // Tracks last transition state.\n   let oldTransition = void 0;\n   let oldTransitionOptions = void 0\n\n   // Run this reactive block when the last transition state is not equal to the current state.\n   $: if (oldTransition !== transition)\n   {\n      // If transition is defined and not the default transition then set it to both in and out transition otherwise\n      // set the default transition to both in & out transitions.\n      const newTransition = typeof transition === 'function' ? transition : void 0;\n\n      inTransition = newTransition;\n      outTransition = newTransition;\n\n      oldTransition = newTransition;\n   }\n\n   // Run this reactive block when the last transition options state is not equal to the current options state.\n   $: if (oldTransitionOptions !== transitionOptions)\n   {\n      const newOptions = transitionOptions !== TJSDefaultTransition.options && isObject(transitionOptions) ?\n       transitionOptions : TJSDefaultTransition.options;\n\n      inTransitionOptions = newOptions;\n      outTransitionOptions = newOptions;\n\n      oldTransitionOptions = newOptions;\n   }\n\n   // Handle cases if inTransition is unset; assign noop default transition function.\n   $: if (typeof inTransition !== 'function') { inTransition = void 0; }\n\n   $:\n   {\n      // Handle cases if outTransition is unset; assign noop default transition function.\n      if (typeof outTransition !== 'function') { outTransition = void 0; }\n\n      // Set jquery close animation to either run or not when an out transition is changed.\n      if (application && typeof application?.options?.defaultCloseAnimation === 'boolean')\n      {\n         application.options.defaultCloseAnimation = outTransition === void 0;\n      }\n   }\n\n   // Handle cases if inTransitionOptions is unset; assign empty default transition options.\n   $: if (!isObject(inTransitionOptions)) { inTransitionOptions = TJSDefaultTransition.options; }\n\n   // Handle cases if outTransitionOptions is unset; assign empty default transition options.\n   $: if (!isObject(outTransitionOptions)) { outTransitionOptions = TJSDefaultTransition.options; }\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   // Focus `elementRoot` on mount to allow keyboard tab navigation of header buttons.\n   onMount(() => elementRoot.focus());\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   /**\n    * Provides a handler for the custom `close:popup` event fired by `svelte-standard` components like TJSMenu. The\n    * intention is to handle focus management of a component that is no longer connected in the DOM. If a target element\n    * that is the source of the close event is attached attempt to resolve internal focus to the application.\n    *\n    * @param {CustomEvent}  event - A custom event for `close:popup`.\n    */\n   function onClosePopup(event)\n   {\n      // Early out as automatic focus management is not enabled.\n      if (!$focusAuto) { return; }\n\n      const targetEl = event?.detail?.target;\n\n      // Early out if there is no target element.\n      if (!(targetEl instanceof HTMLElement)) { return; }\n\n      // Early out if the target element is focusable as it will gain focus naturally.\n      if (A11yHelper.isFocusable(targetEl)) { return; }\n\n      const elementRootContains = elementRoot.contains(targetEl);\n\n      // First check for if the target is elementRoot or elementContent then fallback to contains checks.\n      if (targetEl === elementRoot)\n      {\n         elementRoot.focus();\n      }\n      else if (targetEl === elementContent)\n      {\n         elementContent.focus();\n      }\n      else if (elementRootContains)\n      {\n         if (elementContent.contains(targetEl))\n         {\n            elementContent.focus();\n         }\n         else\n         {\n            elementRoot.focus();\n         }\n      }\n   }\n\n   /**\n    * Provides focus cycling inside the application capturing `<Shift-Tab>` and if `elementRoot` or `firstFocusEl` is\n    * the actively focused element then last focusable element is focused skipping `TJSFocusWrap`.\n    *\n    * Also, if a popout app all key down events will bring this application to the top such that when focus is trapped\n    * the app is top most.\n    *\n    * @param {KeyboardEvent} event - Keyboard Event.\n    */\n   function onKeydown(event)\n   {\n      // TODO: Note this handling is specifically for Foundry v11+ as the platform KeyboardManager uses\n      // `document.querySelector(':focus')` to short circuit keyboard handling internally to KeyboardManager.\n      // ApplicationShell manages containing focus programmatically and this prevents the Foundry KeyboardManager from\n      // activating. We need to check if this key event target is currently the `elementRoot` or `elementContent` and\n      // the event matches any KeyboardManager actions and if so blur current focus.\n      if ((event.target === elementRoot || event.target === elementContent) &&\n       KeyboardManager && KeyboardManager?._getMatchingActions?.(\n        KeyboardManager?.getKeyboardEventContext?.(event))?.length)\n      {\n         event.target?.blur();\n         return;\n      }\n\n      if (focusWrapEnabled && event.shiftKey && event.code === 'Tab')\n      {\n         // Collect all focusable elements from `elementRoot` and ignore TJSFocusWrap.\n         const allFocusable = A11yHelper.getFocusableElements(elementRoot, s_IGNORE_CLASSES);\n\n         // Find first and last focusable elements.\n         const firstFocusEl = allFocusable.length > 0 ? allFocusable[0] : void 0;\n         const lastFocusEl = allFocusable.length > 0 ? allFocusable[allFocusable.length - 1] : void 0;\n\n         // Only cycle focus to the last keyboard focusable app element if `elementRoot` or first focusable element\n         // is the active element.\n         if (elementRoot === document.activeElement || firstFocusEl === document.activeElement)\n         {\n            if (lastFocusEl instanceof HTMLElement && firstFocusEl !== lastFocusEl) { lastFocusEl.focus(); }\n\n            event.preventDefault();\n            event.stopPropagation();\n         }\n      }\n\n      // Make sure this application is top most when it receives keyboard events.\n      if (typeof application?.options?.popOut === 'boolean' && application.options.popOut &&\n       application !== globalThis.ui?.activeWindow)\n      {\n         application.bringToTop.call(application);\n      }\n   }\n\n   /**\n    * If the application is a popOut application then when clicked bring to top if not already the Foundry\n    * `activeWindow`.\n    */\n   function onPointerdownApp()\n   {\n      if (typeof application?.options?.popOut === 'boolean' && application.options.popOut &&\n       application !== globalThis.ui?.activeWindow)\n      {\n         application.bringToTop.call(application);\n      }\n   }\n\n   /**\n    * Focus `elementContent` if the event target is not focusable and `focusAuto` is enabled.\n    *\n    * Note: `focusAuto` is an app option store. This check is a bit tricky as `section.window-content` has a tabindex\n    * of '-1', so it is focusable manually.\n    */\n   function onPointerdownContent(event)\n   {\n      const focusable = A11yHelper.isFocusable(event.target);\n\n      if (!focusable && $focusAuto)\n      {\n         if ($focusKeep)\n         {\n            const focusOutside = document.activeElement instanceof HTMLElement &&\n             !elementRoot.contains(document.activeElement);\n\n            // Only focus the content element if the active element is outside the app; maintaining internal focused\n            // element.\n            if (focusOutside)\n            {\n               elementContent.focus();\n            }\n            else\n            {\n               event.preventDefault();\n            }\n         }\n         else\n         {\n            elementContent.focus();\n         }\n      }\n   }\n\n   /**\n    * Callback for content resizeObserver action. This is enabled when contentOffsetHeight or contentOffsetWidth is\n    * bound.\n    *\n    * @param {number}   offsetWidth - Observed offsetWidth.\n    *\n    * @param {number}   offsetHeight - Observed offsetHeight\n    */\n   function resizeObservedContent(offsetWidth, offsetHeight)\n   {\n      contentOffsetWidth = offsetWidth;\n      contentOffsetHeight = offsetHeight;\n   }\n\n   /**\n    * Callback for app resizeObserver action. This is enabled when appOffsetHeight or appOffsetWidth is\n    * bound. Additionally, the Application position resizeObserved store is updated.\n    *\n    * @param {number}   contentWidth - Observed contentWidth.\n    * @param {number}   contentHeight - Observed contentHeight\n    * @param {number}   offsetWidth - Observed offsetWidth.\n    * @param {number}   offsetHeight - Observed offsetHeight\n    */\n   function resizeObservedApp(offsetWidth, offsetHeight, contentWidth, contentHeight)\n   {\n      application.position.stores.resizeObserved.update((object) =>\n      {\n         object.contentWidth = contentWidth;\n         object.contentHeight = contentHeight;\n         object.offsetWidth = offsetWidth;\n         object.offsetHeight = offsetHeight;\n\n         return object;\n      });\n\n      appOffsetHeight = offsetHeight;\n      appOffsetWidth = offsetWidth;\n   }\n\n   /**\n    * Transitions can cause side effects. Work around this issue by using an if conditional.\n    * Due to timing issues and the onDestroy / outro transitions can cause elementRoot / elementContent to be set to\n    * null when swapped dynamically. There is a feature request to allow transition functions to be undefined:\n    *\n    * @see: https://github.com/sveltejs/svelte/issues/6942\n    */\n</script>\n\n<svelte:options accessors={true}/>\n\n{#if inTransition || outTransition}\n   <!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\n   <div id={application.id}\n        class=\"app window-app {application.options.classes.join(' ')}\"\n        data-appid={application.appId}\n        bind:this={elementRoot}\n        in:inTransition|global={inTransitionOptions}\n        out:outTransition|global={outTransitionOptions}\n        on:close:popup|preventDefault|stopPropagation={onClosePopup}\n        on:keydown|capture={onKeydown}\n        on:pointerdown={onPointerdownApp}\n        use:applyStyles={stylesApp}\n        use:appResizeObserver={resizeObservedApp}\n        role=application\n        tabindex=-1>\n      <TJSApplicationHeader {draggable} {draggableOptions} />\n      <section class=window-content\n               bind:this={elementContent}\n               on:pointerdown={onPointerdownContent}\n               use:applyStyles={stylesContent}\n               use:contentResizeObserver={resizeObservedContent}\n               tabindex=-1>\n         <slot />\n      </section>\n      <ResizableHandle />\n      <TJSFocusWrap {elementRoot} />\n   </div>\n{:else}\n   <!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\n   <div id={application.id}\n        class=\"app window-app {application.options.classes.join(' ')}\"\n        data-appid={application.appId}\n        bind:this={elementRoot}\n        on:close:popup|preventDefault|stopPropagation={onClosePopup}\n        on:keydown|capture={onKeydown}\n        on:pointerdown={onPointerdownApp}\n        use:applyStyles={stylesApp}\n        use:appResizeObserver={resizeObservedApp}\n        role=application\n        tabindex=-1>\n      <TJSApplicationHeader {draggable} {draggableOptions} />\n      <section class=window-content\n               bind:this={elementContent}\n               on:pointerdown={onPointerdownContent}\n               use:applyStyles={stylesContent}\n               use:contentResizeObserver={resizeObservedContent}\n               tabindex=-1>\n         <slot />\n      </section>\n      <ResizableHandle />\n      <TJSFocusWrap {elementRoot} enabled={focusWrapEnabled} />\n   </div>\n{/if}\n\n<style>\n   /* Note: this is different than stock Foundry and allows rounded corners from .app core styles */\n   .window-app {\n      overflow: var(--tjs-app-overflow, hidden);\n   }\n\n   .window-app:focus-visible {\n      outline: var(--tjs-app-outline-focus-visible, var(--tjs-default-a11y-outline-focus-visible, 2px solid transparent));\n   }\n\n   .window-content:focus-visible {\n      outline: var(--tjs-app-content-outline-focus-visible, var(--tjs-default-a11y-outline-focus-visible, 2px solid transparent));\n   }\n\n   /* Override Foundry default; adjust --tjs-app-header-gap to change gap size */\n   .window-app :global(.window-header a) {\n      flex: none;\n      margin: 0;\n   }\n\n   /* Override Foundry default; See TJSHeaderButton for CSS variables */\n   .window-app :global(.window-header i[class^=fa]) {\n      margin: 0\n   }\n</style>\n","<script>\n   /**\n    * Provides an alternate application shell that is scoped by slightly different CSS classes than\n    * {@link ApplicationShell}. An application shell is a main top level slotted component that provides a reactive\n    * outer wrapper and header bar for the main content component.\n    *\n    * CSS variables:\n    * '--tjs-app-background': Controls the app background image; set in main `index.js`.\n    */\n\n   import {\n      getContext,\n      onMount,\n      setContext }                     from 'svelte';\n\n   import {\n      applyStyles,\n      resizeObserver }                 from '@typhonjs-fvtt/runtime/svelte/action/dom';\n\n   import { TJSDefaultTransition }     from '@typhonjs-fvtt/runtime/svelte/transition';\n   import { A11yHelper }               from '@typhonjs-fvtt/runtime/util/browser';\n   import { isObject }                 from '@typhonjs-fvtt/runtime/util/object';\n\n   import { AppShellContextInternal }  from './AppShellContextInternal.js';\n   import TJSApplicationHeader         from './TJSApplicationHeader.svelte';\n   import TJSFocusWrap                 from './TJSFocusWrap.svelte';\n   import ResizableHandle              from './ResizableHandle.svelte';\n\n   // Bound to the content and root elements. Can be used by parent components. SvelteApplication will also\n   // use 'elementRoot' to set the element of the Application. You can also provide `elementContent` and\n   // `elementTarget`. Please see SvelteApplication lifecycle documentation.\n   export let elementContent = void 0;\n   export let elementRoot = void 0;\n\n   // Allows custom draggable implementations to be forwarded to TJSApplicationHeader.\n   export let draggable = void 0;\n   export let draggableOptions = void 0;\n\n   // Explicit style overrides for the main app and content elements. Uses action `applyStyles`.\n   export let stylesApp = void 0;\n   export let stylesContent = void 0;\n\n   // If a parent component binds and sets `appOffsetHeight` to true then a resizeObserver action is enabled on the\n   // outer application `div`. Additionally, the SvelteApplication position resizeObserved store is updated.\n   export let appOffsetHeight = false;\n   export let appOffsetWidth = false;\n\n   // Set to `resizeObserver` if either of the above props are truthy otherwise a null operation.\n   const appResizeObserver = !!appOffsetHeight || !!appOffsetWidth ? resizeObserver : () => null;\n\n   // If a parent component binds and sets `contentOffsetHeight` or `contentOffsetWidth` to true then a\n   // resizeObserver action is enabled on the content `section`.\n   export let contentOffsetHeight = false;\n   export let contentOffsetWidth = false;\n\n   // Set to `resizeObserver` if either of the above props are truthy otherwise a null operation.\n   const contentResizeObserver = !!contentOffsetHeight || !!contentOffsetWidth ? resizeObserver : () => null;\n\n   // Provides the internal context for data / stores of the application shell.\n   const internal = new AppShellContextInternal();\n\n   // Provides options to `A11yHelper.getFocusableElements` to ignore TJSFocusWrap by CSS class.\n   const s_IGNORE_CLASSES = { ignoreClasses: ['tjs-focus-wrap'] };\n\n   // Internal context for `elementContent` / `elementRoot` stores.\n   setContext('#internal', internal);\n\n   // Only update the `elementContent` store if the new `elementContent` is not null or undefined.\n   $: if (elementContent !== void 0 && elementContent !== null)\n   {\n      getContext('#internal').stores.elementContent.set(elementContent);\n   }\n\n   // Only update the `elementRoot` store if the new `elementRoot` is not null or undefined.\n   $: if (elementRoot !== void 0 && elementRoot !== null)\n   {\n      getContext('#internal').stores.elementRoot.set(elementRoot);\n   }\n\n   // Store application reference.\n   const { application } = getContext('#external');\n\n   // Focus related app options stores.\n   const { focusAuto, focusKeep, focusTrap } = application.reactive.storeAppOptions;\n\n   const { minimized } = application.reactive.storeUIState;\n\n   let focusWrapEnabled;\n\n   // Enable TJSFocusWrap component when focus trapping app option is true and app is not minimized.\n   $: focusWrapEnabled = $focusAuto && $focusTrap && !$minimized;\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   // The following block is somewhat complex, but allows transition options to be updated reactively during\n   // runtime execution.\n\n   // Exports properties to set a transition w/ in / out options.\n   export let transition = void 0;\n   export let inTransition = void 0;\n   export let outTransition = void 0;\n\n   // Exports properties to set options for any transitions.\n   export let transitionOptions = void 0;\n   export let inTransitionOptions = TJSDefaultTransition.options;\n   export let outTransitionOptions = TJSDefaultTransition.options;\n\n   // Tracks last transition state.\n   let oldTransition = void 0;\n   let oldTransitionOptions = void 0\n\n   // Run this reactive block when the last transition state is not equal to the current state.\n   $: if (oldTransition !== transition)\n   {\n      // If transition is defined and not the default transition then set it to both in and out transition otherwise\n      // set the default transition to both in & out transitions.\n      const newTransition = typeof transition === 'function' ? transition : void 0;\n\n      inTransition = newTransition;\n      outTransition = newTransition;\n\n      oldTransition = newTransition;\n   }\n\n   // Run this reactive block when the last transition options state is not equal to the current options state.\n   $: if (oldTransitionOptions !== transitionOptions)\n   {\n      const newOptions = transitionOptions !== TJSDefaultTransition.options && isObject(transitionOptions) ?\n       transitionOptions : TJSDefaultTransition.options;\n\n      inTransitionOptions = newOptions;\n      outTransitionOptions = newOptions;\n\n      oldTransitionOptions = newOptions;\n   }\n\n   // Handle cases if inTransition is unset; assign noop default transition function.\n   $: if (typeof inTransition !== 'function') { inTransition = void 0; }\n\n   $:\n   {\n      // Handle cases if outTransition is unset; assign noop default transition function.\n      if (typeof outTransition !== 'function') { outTransition = void 0; }\n\n      // Set jquery close animation to either run or not when an out transition is changed.\n      if (application && typeof application?.options?.defaultCloseAnimation === 'boolean')\n      {\n         application.options.defaultCloseAnimation = outTransition === void 0;\n      }\n   }\n\n   // Handle cases if inTransitionOptions is unset; assign empty default transition options.\n   $: if (!isObject(inTransitionOptions)) { inTransitionOptions = TJSDefaultTransition.options; }\n\n   // Handle cases if outTransitionOptions is unset; assign empty default transition options.\n   $: if (!isObject(outTransitionOptions)) { outTransitionOptions = TJSDefaultTransition.options; }\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   // Focus `elementRoot` on mount to allow keyboard tab navigation of header buttons.\n   onMount(() =>\n   {\n      if ($focusAuto) { elementRoot.focus(); }\n   });\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   /**\n    * Provides a handler for the custom `close:popup` event fired by `svelte-standard` components like TJSMenu. The\n    * intention is to handle focus management of a component that is no longer connected in the DOM. If a target element\n    * that is the source of the close event is attached attempt to resolve internal focus to the application.\n    *\n    * @param {CustomEvent}  event - A custom event for `close:popup`.\n    */\n   function onClosePopup(event)\n   {\n      // Early out as automatic focus management is not enabled.\n      if (!$focusAuto) { return; }\n\n      const targetEl = event?.detail?.target;\n\n      // Early out if there is no target element.\n      if (!(targetEl instanceof HTMLElement)) { return; }\n\n      // Early out if the target element is focusable as it will gain focus naturally.\n      if (A11yHelper.isFocusable(targetEl)) { return; }\n\n      const elementRootContains = elementRoot.contains(targetEl);\n\n      // First check for if the target is elementRoot or elementContent then fallback to contains checks.\n      if (targetEl === elementRoot)\n      {\n         elementRoot.focus();\n      }\n      else if (targetEl === elementContent)\n      {\n         elementContent.focus();\n      }\n      else if (elementRootContains)\n      {\n         if (elementContent.contains(targetEl))\n         {\n            elementContent.focus();\n         }\n         else\n         {\n            elementRoot.focus();\n         }\n      }\n   }\n\n   /**\n    * Provides focus cycling inside the application capturing `<Shift-Tab>` and if `elementRoot` or `firstFocusEl` is\n    * the actively focused element then the second to last focusable element if applicable is focused.\n    *\n    * Also, if a popout app all key down events will bring this application to the top such that when focus is trapped\n    * the app is top most.\n    *\n    * @param {KeyboardEvent} event - Keyboard Event.\n    */\n   function onKeydown(event)\n   {\n      // TODO: Note this handling is specifically for Foundry v11+ as the platform KeyboardManager uses\n      // `document.querySelector(':focus')` to short circuit keyboard handling internally to KeyboardManager.\n      // ApplicationShell manages containing focus programmatically and this prevents the Foundry KeyboardManager from\n      // activating. We need to check if this key event target is currently the `elementRoot` or `elementContent` and\n      // the event matches any KeyboardManager actions and if so blur current focus.\n      if ((event.target === elementRoot || event.target === elementContent) &&\n       KeyboardManager && KeyboardManager?._getMatchingActions?.(\n        KeyboardManager?.getKeyboardEventContext?.(event))?.length)\n      {\n         event.target?.blur();\n         return;\n      }\n\n      if (focusWrapEnabled && event.shiftKey && event.code === 'Tab')\n      {\n         // Collect all focusable elements from `elementRoot` and ignore TJSFocusWrap.\n         const allFocusable = A11yHelper.getFocusableElements(elementRoot, s_IGNORE_CLASSES);\n\n         // Find first and last focusable elements.\n         const firstFocusEl = allFocusable.length > 0 ? allFocusable[0] : void 0;\n         const lastFocusEl = allFocusable.length > 0 ? allFocusable[allFocusable.length - 1] : void 0;\n\n         // Only cycle focus to the last keyboard focusable app element if `elementRoot` or first focusable element\n         // is the active element.\n         if (elementRoot === document.activeElement || firstFocusEl === document.activeElement)\n         {\n            if (lastFocusEl instanceof HTMLElement && firstFocusEl !== lastFocusEl) { lastFocusEl.focus(); }\n\n            event.preventDefault();\n            event.stopPropagation();\n         }\n      }\n\n      // Make sure this application is top most when it receives keyboard events.\n      if (typeof application?.options?.popOut === 'boolean' && application.options.popOut &&\n       application !== globalThis.ui?.activeWindow)\n      {\n         application.bringToTop.call(application);\n      }\n   }\n\n   /**\n    * If the application is a popOut application then when clicked bring to top if not already the Foundry\n    * `activeWindow`.\n    */\n   function onPointerdownApp()\n   {\n      if (typeof application?.options?.popOut === 'boolean' && application.options.popOut &&\n       application !== globalThis.ui?.activeWindow)\n      {\n         application.bringToTop.call(application);\n      }\n   }\n\n   /**\n    * Focus `elementContent` if the event target is not focusable and `focusAuto` is enabled.\n    *\n    * Note: `focusAuto` is an app option store. This check is a bit tricky as `section.window-content` has a tabindex\n    * of '-1', so it is focusable manually.\n    */\n   function onPointerdownContent(event)\n   {\n      const focusable = A11yHelper.isFocusable(event.target);\n\n      if (!focusable && $focusAuto)\n      {\n         if ($focusKeep)\n         {\n            const focusOutside = document.activeElement instanceof HTMLElement &&\n             !elementRoot.contains(document.activeElement);\n\n            // Only focus the content element if the active element is outside the app; maintaining internal focused\n            // element.\n            if (focusOutside)\n            {\n               elementContent.focus();\n            }\n            else\n            {\n               event.preventDefault();\n            }\n         }\n         else\n         {\n            elementContent.focus();\n         }\n      }\n   }\n\n   /**\n    * Callback for content resizeObserver action. This is enabled when contentOffsetHeight or contentOffsetWidth is\n    * bound.\n    *\n    * @param {number}   offsetWidth - Observed offsetWidth.\n    *\n    * @param {number}   offsetHeight - Observed offsetHeight\n    */\n   function resizeObservedContent(offsetWidth, offsetHeight)\n   {\n      contentOffsetWidth = offsetWidth;\n      contentOffsetHeight = offsetHeight;\n   }\n\n   /**\n    * Callback for app resizeObserver action. This is enabled when appOffsetHeight or appOffsetWidth is\n    * bound. Additionally, the Application position resizeObserved store is updated.\n    *\n    * @param {number}   contentWidth - Observed contentWidth.\n    * @param {number}   contentHeight - Observed contentHeight\n    * @param {number}   offsetWidth - Observed offsetWidth.\n    * @param {number}   offsetHeight - Observed offsetHeight\n    */\n   function resizeObservedApp(offsetWidth, offsetHeight, contentWidth, contentHeight)\n   {\n      application.position.stores.resizeObserved.update((object) =>\n      {\n         object.contentWidth = contentWidth;\n         object.contentHeight = contentHeight;\n         object.offsetWidth = offsetWidth;\n         object.offsetHeight = offsetHeight;\n\n         return object;\n      });\n\n      appOffsetHeight = offsetHeight;\n      appOffsetWidth = offsetWidth;\n   }\n\n   /**\n    * Transitions can cause side effects. Work around this issue by using an if conditional.\n    * Due to timing issues and the onDestroy / outro transitions can cause elementRoot / elementContent to be set to\n    * null when swapped dynamically. There is a feature request to allow transition functions to be undefined:\n    *\n    * @see: https://github.com/sveltejs/svelte/issues/6942\n    */\n</script>\n\n<svelte:options accessors={true}/>\n\n{#if inTransition || outTransition}\n    <!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\n    <div id={application.id}\n         class=\"tjs-app tjs-window-app {application.options.classes.join(' ')}\"\n         data-appid={application.appId}\n         bind:this={elementRoot}\n         in:inTransition|global={inTransitionOptions}\n         out:outTransition|global={outTransitionOptions}\n         on:close:popup|preventDefault|stopPropagation={onClosePopup}\n         on:keydown|capture={onKeydown}\n         on:pointerdown={onPointerdownApp}\n         use:applyStyles={stylesApp}\n         use:appResizeObserver={resizeObservedApp}\n         role=application\n         tabindex=-1>\n        <TJSApplicationHeader {draggable} {draggableOptions} />\n        <section class=window-content\n                 bind:this={elementContent}\n                 on:pointerdown={onPointerdownContent}\n                 use:applyStyles={stylesContent}\n                 use:contentResizeObserver={resizeObservedContent}\n                 tabindex=-1>\n            <slot />\n        </section>\n        <ResizableHandle />\n        <TJSFocusWrap {elementRoot} />\n    </div>\n{:else}\n    <!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\n    <div id={application.id}\n         class=\"tjs-app tjs-window-app {application.options.classes.join(' ')}\"\n         data-appid={application.appId}\n         bind:this={elementRoot}\n         on:close:popup|preventDefault|stopPropagation={onClosePopup}\n         on:keydown|capture={onKeydown}\n         on:pointerdown={onPointerdownApp}\n         use:applyStyles={stylesApp}\n         use:appResizeObserver={resizeObservedApp}\n         role=application\n         tabindex=-1>\n        <TJSApplicationHeader {draggable} {draggableOptions} />\n        <section class=window-content\n                 bind:this={elementContent}\n                 on:pointerdown={onPointerdownContent}\n                 use:applyStyles={stylesContent}\n                 use:contentResizeObserver={resizeObservedContent}\n                 tabindex=-1>\n            <slot />\n        </section>\n        <ResizableHandle />\n        <TJSFocusWrap {elementRoot} enabled={focusWrapEnabled} />\n    </div>\n{/if}\n\n<style>\n    /**\n     * Defines styles that mimic a Foundry popout Application. `:global` is used to preserve the unused CSS in the\n     * template above. A primary benefit of a separate application shell implementation is that the styles are not\n     * overridden by any given game system / modules that might alter the standard Foundry Application CSS. This allows\n     * separate and unique styles to be given to this application regardless of game system / module modifications.\n     */\n\n    .tjs-app {\n        max-height: var(--tjs-app-max-height, 100%);\n        background: var(--tjs-app-background);\n        border-radius: var(--tjs-app-border-radius, 5px);\n        box-shadow: var(--tjs-app-box-shadow, 0 0 20px #000);\n        margin: var(--tjs-app-margin, 3px 0);\n        padding: var(--tjs-app-padding, 0.5em);\n        color: var(--tjs-app-color, #f0f0e0);\n    }\n\n    .tjs-window-app:focus-visible {\n        outline: var(--tjs-app-outline-focus-visible, var(--tjs-default-a11y-outline-focus-visible, 2px solid transparent));\n    }\n\n    .tjs-window-app .window-content:focus-visible {\n        outline: var(--tjs-app-content-outline-focus-visible, var(--tjs-default-a11y-outline-focus-visible, 2px solid transparent));\n    }\n\n    .tjs-window-app {\n        /* Note: this is different than stock Foundry and allows rounded corners from .app core styles */\n        overflow: var(--tjs-app-overflow, hidden);\n\n        display: var(--tjs-app-display, flex);\n        flex-direction: var(--tjs-app-flex-direction, column);\n        flex-wrap: var(--tjs-app-flex-wrap, nowrap);\n        justify-content: var(--tjs-app-justify-content, flex-start);\n        position: var(--tjs-app-position, absolute);\n        box-shadow: var(--tjs-app-box-shadow, 0 0 20px #000);\n        padding: var(--tjs-app-padding, 0);\n    }\n\n    .tjs-window-app :global(> .flex0) {\n        display: block;\n        flex: 0;\n    }\n\n    .tjs-window-app :global(> .flex1) {\n        flex: 1;\n    }\n\n    .tjs-window-app :global(> .flex2) {\n        flex: 2;\n    }\n\n    .tjs-window-app :global(> .flex3) {\n        flex: 3;\n    }\n\n    .tjs-window-app :global(.window-header) {\n        overflow: var(--tjs-app-header-overflow, hidden);\n        line-height: var(--tjs-app-header-line-height, 30px);\n        border-bottom: var(--tjs-app-header-border-bottom, 1px solid #000);\n    }\n\n    .tjs-window-app :global(.window-header .window-title) {\n        margin: var(--tjs-app-header-title-margin, 0);\n        word-break: var(--tjs-app-header-title-word-break, break-all);\n    }\n\n    .tjs-window-app :global(.window-header a) {\n        flex: none;\n    }\n\n    .tjs-window-app.minimized :global(.window-header) {\n        border: var(--tjs-app-header-margin-minimized, none);\n    }\n\n    .tjs-window-app .window-content {\n        display: var(--tjs-app-content-display, flex);\n        flex-direction: var(--tjs-app-content-flex-direction, column);\n        flex-wrap: var(--tjs-app-content-flex-wrap, nowrap);\n        flex: var(--tjs-app-content-flex, 1);\n        justify-content: var(--tjs-app-content-justify-content, flex-start);\n        background: var(--tjs-app-content-background, none);\n        padding: var(--tjs-app-content-padding, 8px);\n        color: var(--tjs-app-content-color, #191813);\n        overflow: var(--tjs-app-content-overflow, hidden auto);\n    }\n\n    .tjs-window-app :global(.window-resizable-handle) {\n        width: 20px;\n        height: 20px;\n        position: absolute;\n        bottom: -1px;\n        right: 0;\n        background: #444;\n        padding: 2px;\n        border: 1px solid #111;\n        border-radius: 4px 0 0 0;\n    }\n\n    .tjs-window-app :global(.window-resizable-handle i.fas) {\n        transform: rotate(45deg);\n    }\n</style>\n","<script>\n   /**\n    * TODO: Documentation!\n    */\n   import {\n      getContext,\n      onDestroy,\n      onMount }               from 'svelte';\n\n   import { applyStyles }     from '@typhonjs-fvtt/runtime/svelte/action/dom';\n\n   import {\n      isSvelteComponent,\n      parseTJSSvelteConfig }  from '@typhonjs-fvtt/runtime/svelte/util';\n\n   import { A11yHelper }      from '@typhonjs-fvtt/runtime/util/browser';\n   import { isObject }        from '@typhonjs-fvtt/runtime/util/object';\n\n   import { localize }        from '@typhonjs-fvtt/runtime/svelte/helper';\n\n   export let data = void 0;\n   export let preventDefault = false;\n   export let stopPropagation = false;\n\n   export let dialogComponent = void 0;\n\n   const s_REGEX_HTML = /^\\s*<.*>$/;\n\n   let buttons;\n\n   /** @type {HTMLDivElement} */\n   let contentEl;\n\n   /** @type {HTMLDivElement} */\n   let buttonsEl;\n\n   let content = void 0;\n   let dialogClass;\n   let dialogProps = {};\n\n   let { elementRoot } = getContext('#internal').stores;\n\n   let { application } = getContext('#external');\n\n   let managedPromise = getContext('#managedPromise');\n\n   let currentButtonId = data.default;\n\n   // Remove key listeners from elementRoot.\n   onDestroy(() =>\n   {\n      const rootEl = $elementRoot;\n      if (rootEl instanceof HTMLElement)\n      {\n         rootEl.removeEventListener('keydown', onKeydown)\n         rootEl.removeEventListener('keyup', onKeyup)\n      }\n   })\n\n   // If `focusFirst` is true then focus first focusable element iin dialog content.\n   onMount(() =>\n   {\n      if (focusFirst)\n      {\n         const focusEl = A11yHelper.getFirstFocusableElement(contentEl);\n\n         if (focusEl instanceof HTMLElement)\n         {\n            // Focus on next tick to allow application / dialog to mount to bypass ApplicationShell onMount focus\n            // handling.\n            setTimeout(() => focusEl.focus(), 0);\n         }\n      }\n   });\n\n   // Add key listeners to elementRoot when it is bound.\n   $: if ($elementRoot)\n   {\n      const rootEl = $elementRoot;\n      if (rootEl instanceof HTMLElement)\n      {\n         rootEl.addEventListener('keydown', onKeydown)\n         rootEl.addEventListener('keyup', onKeyup)\n      }\n   }\n\n   // Automatically close the dialog on button click handler completion.\n   $: autoClose = typeof data.autoClose === 'boolean' ? data.autoClose : true;\n\n   // When true the first focusable element that isn't a button is focused.\n   $: focusFirst = typeof data.focusFirst === 'boolean' ? data.focusFirst : false;\n\n   // Focus current button when `buttonsEl` is bound.\n   $: if (!focusFirst && buttonsEl instanceof HTMLElement)\n   {\n      const buttonEl = buttonsEl.querySelector(`.${currentButtonId}`);\n      if (buttonEl instanceof HTMLElement) { buttonEl.focus(); }\n   }\n\n   // When false the dialog does not automatically close when button selected.\n   $: resolveId = typeof data.resolveId === 'boolean' ? data.resolveId : false;\n\n   // If `data.buttons` is not an object then set an empty array otherwise reduce the button data.\n   $:\n   {\n      buttons = !isObject(data.buttons) ? [] : Object.keys(data.buttons).reduce((array, key) =>\n      {\n         const b = data.buttons[key];\n\n         // Handle icon and treat bare strings as the icon class; otherwise assume the icon is fully formed HTML.\n         const icon = typeof b.icon !== 'string' ? void 0 : s_REGEX_HTML.test(b.icon) ? b.icon :\n          `<i class=\"${b.icon}\"></i>`;\n\n         const autoClose = typeof b.autoClose === 'boolean' ? b.autoClose : true;\n\n         const disabled = typeof b.disabled === 'boolean' ? b.disabled : false;\n\n         const label = typeof b.label === 'string' ? `${icon !== void 0 ? ' ' : ''}${localize(b.label)}` : '';\n\n         const title = typeof b.title === 'string' ? localize(b.title) : void 0;\n\n         // Test any condition supplied otherwise default to true.\n         const condition = typeof b.condition === 'function' ? b.condition.call(b) : b.condition ?? true;\n\n         if (condition) { array.push({ ...b, id: key, autoClose, icon, label, title, disabled }); }\n\n         return array;\n      }, []);\n   }\n\n   /**\n    * This reactivity block will trigger on arrow left / right key presses _and_ when buttons change. It is OK for it to\n    * trigger on both.\n    */\n   $: if (!buttons.find((button) => button.id === currentButtonId)) { currentButtonId = void 0; }\n\n   $: if (content !== data.content) // Only update the content if it has changed.\n   {\n      content = data.content;\n\n      try\n      {\n         if (isSvelteComponent(content))\n         {\n            dialogClass = content;\n            dialogProps = {};\n         }\n         else if (isObject(content))\n         {\n            const svelteConfig = parseTJSSvelteConfig(content, application);\n            dialogClass = svelteConfig.class;\n            dialogProps = svelteConfig.props ?? {};\n\n            // Check for any children parsed and added to the external context.\n            const children = svelteConfig?.context?.get('external')?.children;\n\n            // If so add to dialogProps.\n            if (Array.isArray(children)) { dialogProps.children = children; }\n         }\n         else\n         {\n            dialogClass = void 0;\n            dialogProps = {};\n         }\n      }\n      catch (err)\n      {\n         dialogClass = void 0;\n         dialogProps = {};\n\n         content = err.message;\n         console.error(err);\n      }\n   }\n\n   /**\n    * Handle button click.\n    *\n    * @param {object}   button - button data.\n    *\n    * TODO: When app eventbus is available send event for UI notification instead of Foundry API usage.\n    *\n    * @returns {*}\n    */\n   function onClick(button)\n   {\n      try\n      {\n         let result = void 0;\n\n         const callback = button?.onPress;\n\n         switch (typeof callback)\n         {\n            case 'function':\n               // Pass back the TJSDialog instance.\n               result = callback(application);\n               break;\n\n            case 'string':\n               // Attempt lookup by function name in dialog instance component.\n               if (dialogComponent !== void 0 && typeof dialogComponent[callback] === 'function')\n               {\n                  result = dialogComponent[callback](application);\n               }\n               else\n               {\n                  if (dialogComponent === void 0)\n                  {\n                     console.warn(`[TRL] TJSDialog warning: 'onPress' defined as a string with no associated ` +\n                      `content Svelte component.`);\n                  }\n                  else if (typeof dialogComponent?.[callback] !== 'function')\n                  {\n                     console.warn(`[TRL] TJSDialog warning: The content Svelte component does not contain an ` +\n                      `associated function '${callback}'. Did you remember to add ` +\n                       `'<svelte:options accessors={true} />' and export the function?`);\n                  }\n               }\n               break;\n         }\n\n         // By default, both 'button.autoClose' & autoClose are true, so skip auto-closing when either is false.\n         if (button.autoClose && autoClose)\n         {\n            // If `resolveId` dialog option is true and current result is undefined then set result to the button ID.\n            if (resolveId && result === void 0) { result = button.id; }\n\n            managedPromise.resolve(result);\n         }\n      }\n      catch(err)\n      {\n         const notifyError = typeof data.notifyError === 'boolean' ? data.notifyError : true;\n         if (notifyError)\n         {\n            // TODO: When app eventbus is available send event for UI notification instead of Foundry API usage.\n            globalThis.ui.notifications.error(err, { console: false });\n         }\n\n         // Attempt to first reject the error with any current managed Promise otherwise rethrow error.\n         if (!managedPromise.reject(err)) { throw err; }\n      }\n      finally\n      {\n         // By default, both 'button.autoClose' & autoClose are true, so skip auto-closing when either is false.\n         if (button.autoClose && autoClose) { application.close(); }\n      }\n   }\n\n   /**\n    * Handles key down events for stopping propagation for arrow keys. Also handles tab / focus traversal with a timeout\n    * to update `currentButtonId` on the next clock tick comparing against `document.activeElement`.\n    *\n    * @param {KeyboardEvent}  event - A KeyboardEvent.\n    */\n   function onKeydown(event)\n   {\n      switch (event.code)\n      {\n         case 'ArrowLeft':\n         case 'ArrowRight':\n         case 'Enter':\n            event.stopPropagation();\n            break;\n\n         case 'Tab':\n            event.stopPropagation();\n\n            // Check `activeElement` on next tick to potentially update `currentButtonId` from tab / keyboard\n            // navigation.\n            setTimeout(() =>\n            {\n               const activeElement = document.activeElement;\n               if (activeElement instanceof HTMLElement && buttonsEl instanceof HTMLElement &&\n                buttonsEl.contains(activeElement))\n               {\n                  // Find class that isn't `dialog-button` or `default` and is a key in `data.buttons`.\n                  for (let cntr = 0; cntr < activeElement.classList.length; cntr++)\n                  {\n                     const item = activeElement.classList.item(cntr);\n                     if (item !== 'dialog-button' && item !== 'default' && typeof data.buttons[item] !== void 0)\n                     {\n                        currentButtonId = item;\n                        break;\n                     }\n                  }\n               }\n            }, 0);\n            break;\n\n         default:\n            if (preventDefault) { event.preventDefault(); }\n            if (stopPropagation) { event.stopPropagation(); }\n            break;\n      }\n   }\n\n   /**\n    * Handles key up events for arrow key button navigation.\n    *\n    * @param {KeyboardEvent}  event - A KeyboardEvent.\n    */\n   function onKeyup(event)\n   {\n      switch (event.code)\n      {\n         case 'ArrowLeft':\n         {\n            event.preventDefault();\n            event.stopPropagation();\n\n            const activeEl = document.activeElement;\n\n            if (buttonsEl instanceof HTMLElement)\n            {\n               // Only advance button via arrow key if a button is already focused.\n               if (activeEl instanceof HTMLElement && buttonsEl.contains(activeEl))\n               {\n                  const currentIndex = buttons.findIndex((button) => button.id === currentButtonId);\n                  if (buttons.length && currentIndex > 0) { currentButtonId = buttons[currentIndex - 1].id; }\n               }\n\n               const buttonEl = buttonsEl.querySelector(`.${currentButtonId}`);\n               if (buttonEl instanceof HTMLElement) { buttonEl.focus(); }\n            }\n            break;\n         }\n\n         case 'ArrowRight':\n         {\n            event.preventDefault();\n            event.stopPropagation();\n\n            const activeEl = document.activeElement;\n\n            if (buttonsEl instanceof HTMLElement)\n            {\n               // Only advance button via arrow key if a button is already focused  or there is no current button ID\n               if (activeEl instanceof HTMLElement && (buttonsEl.contains(activeEl) || currentButtonId === void 0))\n               {\n                  const currentIndex = buttons.findIndex((button) => button.id === currentButtonId);\n                  if (buttons.length && currentIndex < buttons.length - 1) { currentButtonId = buttons[currentIndex + 1].id; }\n               }\n\n               const buttonEl = buttonsEl.querySelector(`.${currentButtonId}`);\n               if (buttonEl instanceof HTMLElement) { buttonEl.focus(); }\n            }\n            break;\n         }\n\n         case 'Enter':\n            event.preventDefault();\n            event.stopPropagation();\n            break;\n\n         default:\n            if (preventDefault) { event.preventDefault(); }\n            if (stopPropagation) { event.stopPropagation(); }\n            break;\n      }\n   }\n</script>\n\n<main>\n   <div bind:this={contentEl} class=dialog-content>\n      {#if typeof content === 'string'}\n         {@html content}\n      {:else if dialogClass}\n         <svelte:component bind:this={dialogComponent} this={dialogClass} {...dialogProps} />\n      {/if}\n   </div>\n\n   {#if buttons.length}\n   <div bind:this={buttonsEl} class=\"dialog-buttons tjs-dialog-buttons\">\n      {#each buttons as button (button.id)}\n      <button class=\"dialog-button tjs-dialog-button {button.id}\"\n              on:click|preventDefault|stopPropagation={() => onClick(button)}\n              on:focus={() => currentButtonId = button.id}\n              disabled={button.disabled}\n              use:applyStyles={button.styles}>\n         <span title={button.title}>{#if button.icon}{@html button.icon}{/if}{button.label}</span>\n      </button>\n      {/each}\n   </div>\n   {/if}\n</main>\n\n<style>\n   .dialog-buttons {\n      padding-top: 8px;\n   }\n\n   .tjs-dialog-button:hover {\n      box-shadow: var(--tjs-dialog-button-box-shadow-focus-hover, var(--tjs-default-box-shadow-focus-hover));\n      outline: var(--tjs-dialog-button-outline-focus-hover, var(--tjs-default-outline-focus-hover, revert));\n      transition: var(--tjs-dialog-button-transition-focus-hover, var(--tjs-default-transition-focus-hover));\n      text-shadow: var(--tjs-dialog-button-text-shadow-focus-hover, var(--tjs-default-text-shadow-focus-hover, inherit));\n   }\n\n   .tjs-dialog-button:focus-visible {\n      box-shadow: var(--tjs-dialog-button-box-shadow-focus-visible, var(--tjs-default-box-shadow-focus-visible));\n      outline: var(--tjs-dialog-button-outline-focus-visible, var(--tjs-default-outline-focus-visible, revert));\n      transition: var(--tjs-dialog-button-transition-focus-visible, var(--tjs-default-transition-focus-visible));\n      text-shadow: var(--tjs-dialog-button-text-shadow-focus-visible, var(--tjs-default-text-shadow-focus-hover, inherit));\n   }\n</style>\n","<script>\n   import {\n      getContext,\n      onDestroy,\n      onMount,\n      setContext }         from 'svelte';\n\n   import { fade }         from 'svelte/transition';\n\n   import { isObject }     from '@typhonjs-fvtt/runtime/util/object';\n\n   import ApplicationShell from '../application/ApplicationShell.svelte';\n   import DialogContent    from './DialogContent.svelte';\n   import TJSGlassPane     from '../TJSGlassPane.svelte';\n\n   // ApplicationShell contract.\n   export let elementContent = void 0;\n   export let elementRoot = void 0;\n\n   // The dialog data.\n   export let data = {};\n\n   export let dialogComponent = void 0;\n\n   export let managedPromise = void 0;\n\n   const application = getContext('#external').application;\n\n   setContext('#managedPromise', managedPromise);\n\n   const s_MODAL_TRANSITION = fade;\n   const s_MODAL_TRANSITION_OPTIONS = { duration: 200 };\n   const s_MODAL_BACKGROUND = '#50505080'\n\n   let modal = void 0;\n\n   // Stores props for the ApplicationShell.\n   const appProps = {\n      // Stores any transition functions.\n      transition: void 0,\n      inTransition: void 0,\n      outTransition: void 0,\n\n      // Stores properties to set for options for any transitions.\n      transitionOptions: void 0,\n      inTransitionOptions: void 0,\n      outTransitionOptions: void 0,\n\n      // Stores any style overrides for application shell.\n      stylesApp: void 0,\n      stylesContent: void 0\n   }\n\n   const modalProps = {\n      // Background CSS style string.\n      background: void 0,\n      slotSeparate: void 0,\n      styles: void 0,\n\n      // Stores any transition functions.\n      transition: void 0,\n      inTransition: void 0,\n      outTransition: void 0,\n\n      // Stores properties to set for options for any transitions.\n      transitionOptions: void 0,\n      inTransitionOptions: void 0,\n      outTransitionOptions: void 0,\n   }\n\n   let zIndex = void 0;\n\n   let minimizable = true;\n\n   // Only set modal once on mount. You can't change between a modal an non-modal dialog during runtime.\n   if (modal === void 0) { modal = typeof data?.modal === 'boolean' ? data.modal : false; }\n\n   // Special modal handling -----------------------------------------------------------------------------------------\n\n   if (modal)\n   {\n      // Add a capture listener on window keydown to act before any other event listener.\n      onDestroy(() => window.removeEventListener('keydown', onKeydownModal, { capture: true }));\n      onMount(() => window.addEventListener('keydown', onKeydownModal, { capture: true }));\n   }\n   else\n   {\n      // Add a listener on document keydown to act before or equal with other event listeners.\n      onDestroy(() => document.removeEventListener('keydown', onKeydown));\n      onMount(() => document.addEventListener('keydown', onKeydown));\n   }\n\n   // Aria Attributes ------------------------------------------------------------------------------------------------\n\n   $: if (elementRoot instanceof HTMLElement)\n   {\n      elementRoot.setAttribute('role', 'dialog');\n\n      if (modal) { elementRoot.setAttribute('aria-modal', 'true'); }\n   }\n\n   // SvelteApplication options --------------------------------------------------------------------------------------\n\n   // Retrieve values from the DialogData object and also potentially set any SvelteApplication accessors.\n   // Explicit checks are performed against existing local variables as the only externally reactive variable is `data`.\n   // All of the checks below trigger when there are any external changes to the `data` prop.\n   // Prevent any unnecessary changing of local & `application` variables unless actual changes occur.\n\n   $: if (isObject(data))\n   {\n      const newZIndex = Number.isInteger(data.zIndex) || data.zIndex === null ? data.zIndex :\n       modal ? Number.MAX_SAFE_INTEGER : Number.MAX_SAFE_INTEGER - 1\n      if (zIndex !== newZIndex) { zIndex = newZIndex; }\n\n      // Update the main foundry options when data changes. Perform explicit checks against existing data in `application`.\n      const newDraggable = typeof data.draggable === 'boolean' ? data.draggable : void 0;\n      if (newDraggable !== void 0 && application.reactive.draggable !== newDraggable)\n      {\n         application.reactive.draggable = newDraggable;\n      }\n\n      const newFocusAuto = typeof data.focusAuto === 'boolean' ? data.focusAuto : void 0;\n      if (newFocusAuto !== void 0 && application.reactive.focusAuto !== newFocusAuto)\n      {\n         application.reactive.focusAuto = newFocusAuto;\n      }\n\n      const newFocusKeep = typeof data.focusKeep === 'boolean' ? data.focusKeep : void 0;\n      if (newFocusKeep !== void 0 && application.reactive.focusKeep !== newFocusKeep)\n      {\n         application.reactive.focusKeep = newFocusKeep;\n      }\n\n      const newFocusTrap = typeof data.focusTrap === 'boolean' ? data.focusTrap : void 0;\n      if (newFocusTrap !== void 0 && application.reactive.focusTrap !== newFocusTrap)\n      {\n         application.reactive.focusTrap = newFocusTrap;\n      }\n\n      const newMinimizable = typeof data.minimizable === 'boolean' ? data.minimizable : void 0;\n      if (newMinimizable !== void 0 && application.reactive.minimizable !== newMinimizable)\n      {\n         application.reactive.minimizable = newMinimizable;\n      }\n\n      const newResizable = typeof data.resizable === 'boolean' ? data.resizable : void 0;\n      if (newResizable !== void 0 && application.reactive.resizable !== newResizable)\n      {\n         application.reactive.resizable = newResizable;\n      }\n\n      // Note application.title from Application localizes `options.title`, so compare with `application.options.title`.\n      const newTitle = data.title ?? 'Dialog';\n      if (newTitle !== application?.options?.title) { application.reactive.title = newTitle; }\n\n      if (application.position.zIndex !== zIndex) { application.position.zIndex = zIndex; }\n   }\n\n   // ApplicationShell transition options ----------------------------------------------------------------------------\n\n   $: if (isObject(data?.transition))\n   {\n      // Store data.transitions to shorten statements below.\n      const d = data.transition;\n\n      if (d?.transition !== appProps.transition) { appProps.transition = d.transition; }\n      if (d?.inTransition !== appProps.inTransition) { appProps.inTransition = d.inTransition; }\n      if (d?.outTransition !== appProps.outTransition) { appProps.outTransition = d.outTransition; }\n      if (d?.transitionOptions !== appProps.transitionOptions) { appProps.transitionOptions = d.transitionOptions; }\n\n      if (d?.inTransitionOptions !== appProps.inTransitionOptions)\n      {\n         appProps.inTransitionOptions = d.inTransitionOptions;\n      }\n\n      if (d?.outTransitionOptions !== appProps.outTransitionOptions)\n      {\n         appProps.outTransitionOptions = d.outTransitionOptions;\n      }\n   }\n\n   // Modal options --------------------------------------------------------------------------------------------------\n\n   $:\n   {\n      const newModalBackground = typeof data?.modalOptions?.background === 'string' ? data.modalOptions.background :\n       s_MODAL_BACKGROUND;\n\n      if (newModalBackground !== modalProps.background) { modalProps.background = newModalBackground; }\n   }\n\n   $:\n   {\n      const newModalSlotSeparate = typeof data?.modalOptions?.slotSeparate === 'boolean' ?\n       data.modalOptions.slotSeparate : void 0;\n\n      if (newModalSlotSeparate !== modalProps.slotSeparate) { modalProps.slotSeparate = newModalSlotSeparate; }\n   }\n\n   $:\n   {\n      const newModalStyles = isObject(data?.modalOptions?.styles) ? data.modalOptions.styles : void 0;\n\n      if (newModalStyles !== modalProps.styles) { modalProps.styles = newModalStyles; }\n   }\n\n   $: if (isObject(data?.modalOptions?.transition))\n   {\n      // Store data.transitions to shorten statements below.\n      const d = data.modalOptions.transition;\n\n      if (d?.transition !== modalProps.transition)\n      {\n         modalProps.transition = typeof d?.transition === 'function' ? d.transition : s_MODAL_TRANSITION;\n      }\n\n      if (d?.inTransition !== modalProps.inTransition) { modalProps.inTransition = d.inTransition; }\n      if (d?.outTransition !== modalProps.outTransition) { modalProps.outTransition = d.outTransition; }\n\n      // Provide default transition options if not defined.\n      if (d?.transitionOptions !== modalProps.transitionOptions)\n      {\n         modalProps.transitionOptions = isObject(d?.transitionOptions) ? d.transitionOptions :\n          s_MODAL_TRANSITION_OPTIONS;\n      }\n\n      if (d?.inTransitionOptions !== modalProps.inTransitionOptions)\n      {\n         modalProps.inTransitionOptions = d.inTransitionOptions;\n      }\n\n      if (d?.outTransitionOptions !== modalProps.outTransitionOptions)\n      {\n         modalProps.outTransitionOptions = d.outTransitionOptions;\n      }\n   }\n   else  // Provide a fallback / default glass pane transition when `data.modalOptions.transition` is not defined.\n   {\n      const newModalTransition = typeof data?.modalOptions?.transition?.transition === 'function' ?\n       data.modalOptions.transition.transition : s_MODAL_TRANSITION;\n\n      if (newModalTransition !== modalProps.transition) { modalProps.transition = newModalTransition; }\n\n      const newModalTransitionOptions = isObject(data?.modalOptions?.transitionOptions) ?\n       data.modalOptions.transitionOptions : s_MODAL_TRANSITION_OPTIONS;\n\n      if (newModalTransitionOptions !== modalProps.transitionOptions)\n      {\n         modalProps.transitionOptions = newModalTransitionOptions;\n      }\n   }\n\n   /**\n    * Handles closing all open TJSDialog instances when <Esc> key is pressed.\n    *\n    * @param {KeyboardEvent}  event - A KeyboardEvent.\n    */\n   function onKeydown(event)\n   {\n      if (event.code === 'Escape')\n      {\n         event.preventDefault();\n         event.stopPropagation();\n         application.close();\n      }\n   }\n\n   /**\n    * Handles closing any modal window and is assigned to `window` with capture acting before any other browser wide\n    * event listeners stopping immediate propagation.\n    *\n    * @param {KeyboardEvent}  event - A KeyboardEvent.\n    */\n   function onKeydownModal(event)\n   {\n      if (event.code === 'Escape')\n      {\n         event.preventDefault();\n         event.stopImmediatePropagation();\n         application.close();\n      }\n   }\n</script>\n\n<svelte:options accessors={true}/>\n\n{#if modal}\n   <TJSGlassPane id={`${application.id}-glasspane`} {...modalProps} {zIndex}>\n      <ApplicationShell bind:elementRoot bind:elementContent {...appProps} appOffsetHeight={true}>\n         <DialogContent bind:dialogComponent {data} stopPropagation={true} />\n      </ApplicationShell>\n   </TJSGlassPane>\n{:else}\n   <ApplicationShell bind:elementRoot bind:elementContent {...appProps} appOffsetHeight={true}>\n      <DialogContent bind:dialogComponent {data} />\n   </ApplicationShell>\n{/if}\n","import { cssVariables } from './cssVariables.js';\n\nexport { default as TJSComponentShell }   from './TJSComponentShell.svelte';\nexport { default as TJSContainer }        from './TJSContainer.svelte';\nexport { default as TJSGlassPane }        from './TJSGlassPane.svelte';\nexport *                                  from './application/index.js';\nexport *                                  from './dialog/index.js';\n\n/**\n * Provides default CSS variables for core components.\n */\ncssVariables.setProperties({\n   // Anchor text shadow / header buttons\n   '--tjs-default-text-shadow-focus-hover': '0 0 8px var(--color-shadow-primary)',\n\n   // TJSApplicationShell app background.\n   '--tjs-app-background': `url(\"${globalThis.foundry.utils.getRoute('/ui/denim075.png')}\")`,\n}, false);\n","/**\n * Provides management of a single Promise that can be shared and accessed across JS & Svelte components. This allows a\n * Promise to be created and managed as part of the TRL application lifecycle and accessed safely in various control\n * flow scenarios. When resolution of the current managed Promise starts further interaction is prevented.\n *\n * Note: to enable debugging / log statements set the static `logging` variable to true.\n */\nclass ManagedPromise\n{\n   /** @type {boolean} */\n   static #logging = false;\n\n   /** @type {{ isProcessing?: boolean, promise?: Promise, reject: Function, resolve: Function }} */\n   #current;\n\n   /**\n    * @returns {boolean} Whether global logging is enabled.\n    */\n   static get logging()\n   {\n      return this.#logging;\n   }\n\n   /**\n    * @returns {boolean} Whether there is an active managed Promise.\n    */\n   get isActive()\n   {\n      return this.#current !== void 0;\n   }\n\n   /**\n    * @returns {boolean} Whether there is an active managed Promise and resolution is currently being processed.\n    */\n   get isProcessing()\n   {\n      return this.#current !== void 0 ? this.#current.isProcessing : false;\n   }\n\n   /**\n    * Sets global logging enabled state.\n    *\n    * @param {boolean}  logging - New logging enabled state.\n    */\n   static set logging(logging)\n   {\n      if (typeof logging !== 'boolean')\n      {\n         throw new TypeError(`[TRL] ManagedPromise.logging error: 'logging' is not a boolean.`);\n      }\n\n      this.#logging = logging;\n   }\n\n   // ----------------------------------------------------------------------------------------------------------------\n\n   /**\n    * Resolves any current Promise with undefined and creates a new current Promise.\n    *\n    * @template T\n    *\n    * @param {object} opts - Options.\n    *\n    * @param {boolean}  [opts.reuse=false] - When true if there is an existing live Promise it is returned immediately.\n    *\n    * @returns {Promise<T>} The new current managed Promise.\n    */\n   create({ reuse = false } = {})\n   {\n      if (typeof reuse !== 'boolean')\n      {\n         throw new TypeError(`[TRL] ManagedPromise.create error: 'reuse' is not a boolean.`);\n      }\n\n      if (reuse && this.#current !== void 0 && this.#current.promise instanceof Promise)\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.create info: Reusing / returning existing managed Promise.`);\n         }\n\n         return this.#current.promise;\n      }\n\n      if (this.#current !== void 0)\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(\n             `[TRL] ManagedPromise.create info: Creating a new Promise and resolving existing immediately.`);\n         }\n\n         this.#current.resolve(void 0);\n         this.#current = void 0;\n      }\n\n      const promise = new Promise((resolve, reject) =>\n      {\n         this.#current = {\n            isProcessing: false,\n            reject,\n            resolve\n         };\n      });\n\n      this.#current.promise = promise;\n\n      return promise;\n   }\n\n   /**\n    * Gets the current Promise if any.\n    *\n    * @returns {Promise<any>} Current Promise.\n    */\n   get()\n   {\n      return this.#current ? this.#current.promise : void 0;\n   }\n\n   /**\n    * Rejects the current Promise if applicable.\n    *\n    * @param {*}  [result] - Result to reject.\n    *\n    * @returns {boolean} Was the promise rejected.\n    */\n   reject(result = void 0)\n   {\n      // Early out as Promise resolution is currently processing.\n      if (this.#current !== void 0 && this.#current.isProcessing)\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.reject info: Currently processing promise.`);\n         }\n\n         return true;\n      }\n\n      if (this.#current !== void 0)\n      {\n         this.#current.isProcessing = true;\n\n         if (result instanceof Promise)\n         {\n            result.then((value) =>\n            {\n               this.#current.reject(value);\n               this.#current = void 0;\n            }).catch((err) =>\n            {\n               this.#current.reject(err);\n               this.#current = void 0;\n            });\n         }\n         else\n         {\n            this.#current.reject(result);\n            this.#current = void 0;\n         }\n\n         return true;\n      }\n      else\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.reject warning: No current managed Promise to reject.`);\n         }\n\n         return false;\n      }\n   }\n\n   /**\n    * Resolves the current Promise if applicable.\n    *\n    * @param {*}  [result] - Result to resolve.\n    *\n    * @returns {boolean} Was the promise resolved.\n    */\n   resolve(result = void 0)\n   {\n      // Early out as Promise resolution is currently processing.\n      if (this.#current !== void 0 && this.#current.isProcessing)\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.resolve info: Currently processing promise.`);\n         }\n\n         return true;\n      }\n\n      if (this.#current !== void 0)\n      {\n         if (result instanceof Promise)\n         {\n            this.#current.isProcessing = true;\n\n            result.then((value) =>\n            {\n               this.#current.resolve(value);\n               this.#current = void 0;\n            }).catch((err) =>\n            {\n               this.#current.reject(err);\n               this.#current = void 0;\n            });\n         }\n         else\n         {\n            this.#current.resolve(result);\n            this.#current = void 0;\n         }\n\n         return true;\n      }\n      else\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.resolve warning: No current managed Promise to resolve.`);\n         }\n\n         return false;\n      }\n   }\n}\n\nexport { ManagedPromise };\n//# sourceMappingURL=index.js.map\n","import {\n   deepMerge,\n   safeAccess,\n   safeSet }   from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Provides storage for all dialog options adding `get`, `merge` and `set` methods that safely access and update\n * data changed to the mounted DialogShell component reactively.\n */\nexport class TJSDialogData\n{\n   /**\n    * @type {import('../').SvelteApplication}\n    */\n   #application;\n\n   /**\n    * Provides configuration of the dialog button bar.\n    *\n    * @type {Record<string, import('../').TJSDialogButtonData>}\n    */\n   buttons;\n\n   /**\n    * A Svelte configuration object or HTML string content.\n    *\n    * @type {object|string}\n    */\n   content;\n\n   /**\n    * The default button ID to focus initially.\n    *\n    * @type {string}\n    */\n   default;\n\n   /**\n    * The dialog is draggable when true.\n    *\n    * @type {boolean}\n    */\n   draggable;\n\n   /**\n    * When true auto-management of app focus is enabled.\n    *\n    * @type {boolean}\n    */\n   focusAuto;\n\n   /**\n    * When true the first focusable element that isn't a button is focused.\n    *\n    * @type {boolean}\n    */\n   focusFirst;\n\n   /**\n    * When `focusAuto` and `focusKeep` is true; keeps internal focus.\n    *\n    * @type {boolean}\n    */\n   focusKeep;\n\n   /**\n    * When true the dialog is minimizable.\n    *\n    * @type {boolean}\n    */\n   minimizable;\n\n   /**\n    * When true a modal dialog is displayed.\n    *\n    * @type {boolean}\n    */\n   modal;\n\n   /**\n    * Additional options for modal dialog display.\n    *\n    * @type {object}\n    * TODO: Better specify type / options.\n    */\n   modalOptions;\n\n   /**\n    * When true and an error is raised in dialog callback functions post a UI error notification.\n    *\n    * @type {boolean}\n    */\n   notifyError;\n\n   /**\n    * Callback invoked when dialog is closed; no button option selected. When defined as a string any matching function\n    * by name exported from content Svelte component is invoked.\n    *\n    * @type {string|((application: import('../').TJSDialog) => any)}\n    */\n   onClose;\n\n   /**\n    * When true and a Promise has been created by {@link TJSDialog.wait} and the Promise is not in the process of being\n    * resolved or rejected on close of the dialog any `onClose` function is invoked and any result that is undefined\n    * will cause the Promise to then be rejected.\n    *\n    * @type {boolean}\n    */\n   rejectClose;\n\n   /**\n    * When true the dialog is resizable.\n    *\n    * @type {boolean}\n    */\n   resizable;\n\n   /**\n    * When true and resolving any Promises and there are undefined results from any button callbacks the button ID is\n    * resolved.\n    *\n    * @type {boolean}\n    */\n   resolveId;\n\n   /**\n    * The dialog window title.\n    *\n    * @type {string}\n    */\n   title;\n\n   /**\n    * Transition options for the dialog.\n    *\n    * @type {object}\n    * TODO: Better specify type / options.\n    */\n   transition;\n\n   /**\n    * A specific z-index for the dialog. Pass null for the dialog to act like other applications in regard bringing to\n    * top when activated.\n    *\n    * @type {number|null}\n    */\n   zIndex;\n\n   /**\n    * @param {import('../').SvelteApplication} application - The host Foundry application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n   }\n\n   /**\n    * Provides a way to safely get this dialogs data given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * // TODO DOCUMENT the accessor in more detail.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {*}        [defaultValue] - A default value returned if the accessor is not found.\n    *\n    * @returns {*} Value at the accessor.\n    */\n   get(accessor, defaultValue)\n   {\n      return safeAccess(this, accessor, defaultValue);\n   }\n\n   /**\n    * @param {object} data - Merge provided data object into Dialog data.\n    */\n   merge(data)\n   {\n      deepMerge(this, data);\n\n      const component = this.#application.svelte.component(0);\n      if (component?.data) { component.data = this; }\n   }\n\n   /**\n    * Provides a way to safely set this dialogs data given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * Automatically the dialog data will be updated in the associated DialogShell Svelte component.\n    *\n    * // TODO DOCUMENT the accessor in more detail.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {*}        value - Value to set.\n    *\n    * @returns {boolean} True if successful.\n    */\n   set(accessor, value)\n   {\n      const success = safeSet(this, accessor, value);\n\n      // If `this.options` modified then update the app options store.\n      if (success)\n      {\n         const component = this.#application.svelte.component(0);\n         if (component?.data) { component.data = this; }\n      }\n\n      return success;\n   }\n}\n","import { DialogShell }        from '@typhonjs-fvtt/runtime/svelte/component/core';\n\nimport { ManagedPromise }     from '@typhonjs-fvtt/runtime/util/async';\n\nimport {\n   deepMerge,\n   isObject }                 from '@typhonjs-fvtt/runtime/util/object';\n\nimport { TJSDialogData }      from './internal/TJSDialogData.js';\nimport { SvelteApplication }  from './SvelteApplication.js';\n\n/**\n * Provides a reactive dialog implementation configured from a unique dialog options object. The dialog features a\n * bottom button bar for user selection.\n *\n * A glasspane / modal option with various styling and transition capabilities is available when setting `modal: true`.\n *\n * Most importantly the `content` attribute of dialog data can be a Svelte component configuration object to render\n * your custom component as the dialog content. When using a Svelte component as the content you can assign a string\n * to the various `on<XXX>` dialog callbacks and an exported function from your component will be invoked to handle the\n * button callback. All dialog button callbacks and `onClose` callback receive a single argument which is the dialog /\n * application instance.\n *\n * When making a form with form validation or other dialog that you don't want to close immediately on button press you\n * can set `autoClose: false`, however you are 100% in control of resolving any Promise callbacks from button presses\n * and also closing the application. Each button can also be configured with `autoClose: false` in the button data.\n *\n * There is a handy Promise management capability to track a single Promise for the lifetime of a dialog available\n * at {@link TJSDialog.managedPromise}. By default when the user closes the dialog / application any managed Promise is\n * resolved with `null`. The managed Promise is available in any Svelte content component by using\n * `const managedPromise = getContext('#managedPromise')`. When handling any custom resolution particularly when\n * setting `autoClose: false` for a given button you are 100% in control of resolving or rejecting asynchronous data to\n * return from the dialog.\n *\n * To create and wait upon a managed promise for asynchronous return results use the static or member variation of\n * {@link TJSDialog.wait}.\n *\n * Please refer to {@link TJSDialogOptions} for the various options used to construct the dialog.\n *\n * There are a couple of static helper methods to quickly create standard dialogs such as a 'yes' / 'no' confirmation\n * dialog with {@link TJSDialog.confirm} and an 'ok' single button dialog with {@link TJSDialog.prompt}.\n *\n * TODO: document all extended dialog data parameters such as transition options / modal transitions.\n */\nexport class TJSDialog extends SvelteApplication\n{\n   /** @type {TJSDialogData} */\n   #data;\n\n   /** @type {ManagedPromise} */\n   #managedPromise;\n\n   /**\n    * @param {import('./').TJSDialogOptions}           data - Dialog options.\n    *\n    * @param {import('./').SvelteApplicationOptions}   [options] - SvelteApplication options.\n    */\n   constructor(data, options = {})\n   {\n      super(options);\n\n      this.#managedPromise = new ManagedPromise();\n\n      this.#data = new TJSDialogData(this);\n      this.data = data;\n\n      /**\n       * @member {object} dialogComponent - A getter to SvelteData to retrieve any mounted Svelte component as the\n       *                                    dialog content.\n       *\n       * @memberof GetSvelteData#\n       * @readonly\n       */\n      Object.defineProperty(this.svelte, 'dialogComponent', {\n         get: () => this.svelte?.applicationShell?.dialogComponent,\n      });\n   }\n\n   /**\n    * Default options for TJSDialog. Provides a default width and setting `height` to `auto` to always display dialog\n    * content even if it changes. The default `DialogShell` / `svelte` options should not be changed and instead mount\n    * the dialog content component by supplying a Svelte configuration object to dialog data `content` field.\n    *\n    * @returns {import('./').SvelteApplicationOptions} Default options\n    */\n   static get defaultOptions()\n   {\n      return deepMerge(super.defaultOptions, {\n         classes: ['dialog', 'tjs-dialog'],\n         width: 400,\n         height: 'auto',\n         svelte: {\n            class: DialogShell,\n            intro: true,\n            target: document.body,\n            props: function() // `this` is the TJSDialog instance when invoked.\n            {\n               return {\n                  data: this.#data,\n                  managedPromise: this.#managedPromise\n               };\n            }\n         }\n      });\n   }\n\n   /**\n    * Returns the dialog data.\n    *\n    * @returns {TJSDialogData} Dialog data.\n    */\n   get data() { return this.#data; }\n\n   /**\n    * @returns {import('@typhonjs-fvtt/runtime/util/async').ManagedPromise} Returns the managed promise.\n    */\n   get managedPromise() { return this.#managedPromise; }\n\n   /**\n    * Sets the dialog data; this is reactive.\n    *\n    * @param {object}   data - Dialog data.\n    */\n   set data(data)\n   {\n      if (!isObject(data)) { throw new TypeError(`TJSDialog set data error: 'data' is not an object'.`); }\n\n      const descriptors = Object.getOwnPropertyDescriptors(this.#data);\n\n      // Remove old data for all configurable descriptors.\n      for (const descriptor in descriptors)\n      {\n         if (descriptors[descriptor].configurable) { delete this.#data[descriptor]; }\n      }\n\n      // Merge new data and perform a reactive update.\n      this.#data.merge(data);\n   }\n\n   /**\n    * Close the dialog and un-register references to it within UI mappings.\n    * This function returns a Promise which resolves once the window closing animation concludes.\n    *\n    * @param {object}   [options] - Optional parameters.\n    *\n    * @param {boolean}  [options.force] - Force close regardless of render state.\n    *\n    * @returns {Promise<void>} A Promise which resolves once the application is closed with the callback value or\n    *                          `true`.\n    */\n   async close(options)\n   {\n      try\n      {\n         // Note: When handling a managed promise if a button selection has already been made the managed promise is\n         // already processing and the resolution below is skipped.\n         if (this.#managedPromise.isActive && !this.#managedPromise.isProcessing)\n         {\n            const result = TJSDialog.#invokeFn(this.#data.onClose, this, null);\n            const rejectClose = typeof this.#data.rejectClose === 'boolean' ? this.#data.rejectClose : false;\n\n            if (rejectClose && result === null)\n            {\n               this.#managedPromise.reject(new Error('TJSDialog was closed without a choice being made.'));\n            }\n            else\n            {\n               this.#managedPromise.resolve(result);\n            }\n         }\n      }\n      catch (err)\n      {\n         const notifyError = typeof this.#data.notifyError === 'boolean' ? this.#data.notifyError : true;\n         if (notifyError)\n         {\n            // TODO: When app eventbus is available send event for UI notification instead of Foundry API usage.\n            globalThis.ui.notifications.error(err, { console: false });\n         }\n\n         // If there is a managed Promise reject it or re-throw error.\n         if (!this.#managedPromise.reject(err)) { throw err; }\n      }\n      finally\n      {\n         await super.close(options);\n      }\n   }\n\n   /**\n    * Brings to top or renders this dialog returning a Promise that is resolved any button pressed or when the dialog\n    * is closed.\n    *\n    * Creates an anonymous data defined TJSDialog returning a Promise that can be awaited upon for the user to make a\n    * choice.\n    *\n    * Note: `null` is returned if the dialog is closed without a user making a choice.\n    *\n    * @template T\n    *\n    * @param {object}   [options] - Options.\n    *\n    * @param {boolean}  [options.reuse=false] - When true if there is an existing managed Promise this allows multiple\n    *        sources to await on the same result.\n    *\n    * @returns {Promise<T>} A promise for dialog resolution.\n    */\n   async wait(options)\n   {\n      // TODO: Direct usage of Foundry core Application API.\n      if (this.rendered)\n      {\n         this.bringToTop();\n      }\n      else\n      {\n         this.render(true, { focus: true });\n      }\n\n      // Return a managed Promise which is automatically resolved on button press via `DialogContent` component or when\n      // the dialog is closed.\n      return this.#managedPromise.create(options);\n   }\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   /**\n    * A helper factory method to create simple confirmation dialog windows which consist of simple yes / no prompts.\n    * If you require more flexibility, a custom TJSDialog instance is preferred. The default focused button is 'yes'.\n    * You can change the default focused button by setting `default` to `yes` or `no`.\n    *\n    * @template T\n    *\n    * @param {import('./').TJSDialogOptions & {\n    *    onYes?: string|((application: TJSDialog) => any),\n    *    onNo?: string|((application: TJSDialog) => any)\n    * }} [data] - Confirm dialog options.\n    *\n    * @param {string|((application: TJSDialog) => any)} [data.onYes] - Callback function upon `yes`; may be an async\n    *        function. When defined as a string any matching function by name exported from content Svelte component is\n    *        invoked.\n    *\n    * @param {string|((application: TJSDialog) => any)} [data.onNo] - Callback function upon `no`; may be an async\n    *        function. When defined as a string any matching function by name exported from content Svelte component is\n    *        invoked.\n    *\n    * @param {import('./').SvelteApplicationOptions}  [options]  SvelteApplication options passed to the TJSDialog\n    *        constructor.\n    *\n    * @returns {Promise<T>} A promise which resolves with result of yes / no callbacks or true / false.\n    *\n    * @example\n    * const result = await TJSDialog.confirm({\n    *  title: 'A Yes or No Question',\n    *  content: '<p>Choose wisely.</p>',\n    *  onYes: () => 'YES Result'\n    *  onNo: () => 'NO Result'\n    * });\n    *\n    * // Logs 'YES result', 'NO Result', or null if the user closed the dialog without making a selection.\n    * console.log(result);\n    */\n   static async confirm({ onYes, onNo, ...data } = {}, options = {})\n   {\n      // Allow overwriting of default icon and labels.\n      const mergedButtons = deepMerge({\n         yes: {\n            icon: 'fas fa-check',\n            label: 'Yes'\n         },\n         no: {\n            icon: 'fas fa-times',\n            label: 'No',\n         }\n      }, data.buttons ?? {});\n\n      return this.wait({\n         ...data,\n         buttons: deepMerge(mergedButtons, {\n            yes: {\n               onPress: (application) => this.#invokeFn(onYes, application, true)\n            },\n            no: {\n               onPress: (application) => this.#invokeFn(onNo, application, false)\n            }\n         }),\n         default: data.default ?? 'yes'\n      }, options);\n   }\n\n   /**\n    * A helper method to invoke a callback function directly or lookup an exported function with the same name from any\n    * content Svelte component to invoke. This is used internally to apply default values for `confirm` and `prompt`.\n    *\n    * @param {string|((application: TJSDialog) => any)} callback - Callback function to invoke; may be an async\n    *        function. When defined as a string any matching function by name exported from content Svelte component is\n    *        invoked.\n    *\n    * @param {TJSDialog} application - TJSDialog instance passed to callback.\n    *\n    * @param {*} [defaultResult] - An optional default result to return; undefined if not specified.\n    *\n    * @returns {*} Result.\n    *\n    * @internal\n    */\n   static #invokeFn(callback, application, defaultResult = void 0)\n   {\n      let result = defaultResult;\n\n      switch (typeof callback)\n      {\n         case 'function':\n            // Pass the dialog instance to the callback.\n            result = callback(application);\n            break;\n\n         case 'string':\n         {\n            const dialogComponent = application?.svelte?.dialogComponent;\n\n            // Attempt lookup by function name in dialog instance component.\n            if (dialogComponent !== void 0 && typeof dialogComponent?.[callback] === 'function')\n            {\n               result = dialogComponent?.[callback](application);\n            }\n            else\n            {\n               if (dialogComponent === void 0)\n               {\n                  console.warn(`[TRL] TJSDialog warning: 'onPress' defined as a string with no ` +\n                   `associated content Svelte component.`);\n               }\n               else if (typeof dialogComponent?.[callback] !== 'function')\n               {\n                  console.warn(`[TRL] TJSDialog warning: The content Svelte component does not contain ` +\n                   `an associated function '${callback}'. Did you remember to add ` +\n                   `'<svelte:options accessors={true} />' and export the function?`);\n               }\n            }\n            break;\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * A helper factory method to display a basic \"prompt\" style TJSDialog with a single button.\n    *\n    * @template T\n    *\n    * @param {import('./').TJSDialogOptions & {\n    *    onOk?: string|((application: TJSDialog) => any),\n    *    label?: string,\n    *    icon?: string\n    * }} [data] - Prompt dialog options that includes any TJSDialog options along with the following optional fields:\n    *\n    * @param {string|((application: TJSDialog) => any)} [data.onOk] - Callback function upon `ok`; may be an async\n    *        function. When defined as a string any matching function by name exported from content Svelte component is\n    *        invoked.\n    *\n    * @param {string}   [data.label] - The OK prompt button text.\n    *\n    * @param {string}   [data.icon=\"fas fa-check\"] - Set another icon besides `fas fa-check` for button.\n    *\n    * @param {import('./').SvelteApplicationOptions}  [options]  SvelteApplication options passed to the TJSDialog\n    *        constructor.\n    *\n    * @returns {Promise<T>} The returned value from the provided callback function or `true` if the button\n    *          is pressed.\n    *\n    * @example\n    * const result = await TJSDialog.prompt({\n    *  title: 'Are you OK?',\n    *  content: '<p>Are you OK?.</p>',\n    *  label: 'Feeling Fine!'\n    *  onOk: () => 'OK'\n    * });\n    *\n    * // Logs 'OK' or null if the user closed the dialog without making a selection.\n    * console.log(result);\n    */\n   static async prompt({ onOk, label, icon = 'fas fa-check', ...data } = {}, options = {})\n   {\n      return this.wait({\n         ...data,\n         buttons: {\n            ok: {\n               icon,\n               label,\n               onPress: (application) => this.#invokeFn(onOk, application, true)\n            }\n         },\n         default: 'ok'\n      }, options);\n   }\n\n   /**\n    * Creates an anonymous data defined TJSDialog returning a Promise that can be awaited upon for the user to make a\n    * choice.\n    *\n    * Note: By default `null` is returned if the dialog is closed without a user making a choice.\n    *\n    * @template T\n    *\n    * @param {import('./').TJSDialogOptions}  data - Dialog data passed to the TJSDialog constructor.\n    *\n    * @param {import('./').SvelteApplicationOptions}  [options]  SvelteApplication options passed to the TJSDialog\n    *        constructor.\n    *\n    * @returns {Promise<T>} A Promise that resolves to the chosen result.\n    */\n   static async wait(data, options = {})\n   {\n      if (!isObject(data)) { throw new TypeError(`TJSDialog.wait error: 'data' is not an object'.`); }\n\n      // Instantiate and render the dialog.\n      return new this({ ...data }, options).wait();\n   }\n}\n","import { writable, get } from 'svelte/store';\nimport { Strings } from '@typhonjs-fvtt/runtime/util';\nimport { isIterable } from '@typhonjs-fvtt/runtime/util/object';\nimport { isWritableStore } from '@typhonjs-fvtt/runtime/util/store';\n\nclass DynReducerUtils {\n    /**\n     * Checks for array equality between two arrays of numbers.\n     *\n     * @param a - Array A\n     *\n     * @param b - Array B\n     *\n     * @returns Arrays are equal.\n     */\n    static arrayEquals(a, b) {\n        if (a === b) {\n            return true;\n        }\n        if (a === null || b === null) {\n            return false;\n        }\n        /* c8 ignore next */\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let cntr = a.length; --cntr >= 0;) {\n            /* c8 ignore next */\n            if (a[cntr] !== b[cntr]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Provides a solid string hashing algorithm.\n     *\n     * Sourced from: https://stackoverflow.com/a/52171480\n     *\n     * @param str - String to hash.\n     *\n     * @param seed - A seed value altering the hash.\n     *\n     * @returns Hash code.\n     */\n    static hashString(str, seed = 0) {\n        let h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\n        for (let ch, i = 0; i < str.length; i++) {\n            ch = str.charCodeAt(i);\n            h1 = Math.imul(h1 ^ ch, 2654435761);\n            h2 = Math.imul(h2 ^ ch, 1597334677);\n        }\n        h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^ Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n        h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^ Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n        return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n    }\n    /**\n     * Converts an unknown value for hashing purposes in {@link AdapterIndexer.calcHashUpdate}.\n     *\n     * Currently objects / Map w/ object keys is not supported. Potentially can include `object-hash` to handle this\n     * case, but it is not common to use objects as keys in Maps.\n     *\n     * @param value - An unknown value to convert to a number.\n     */\n    static hashUnknown(value) {\n        if (value === null || value === void 0) {\n            return 0;\n        }\n        let result = 0;\n        switch (typeof value) {\n            case 'boolean':\n                result = value ? 1 : 0;\n                break;\n            case 'bigint':\n                result = Number(BigInt.asIntN(64, value));\n                break;\n            case 'function':\n                result = this.hashString(value.name);\n                break;\n            case 'number':\n                result = Number.isFinite(value) ? value : 0;\n                break;\n            case 'object':\n                // TODO: consider hashing an object IE `object-hash` and convert to number.\n                break;\n            case 'string':\n                result = this.hashString(value);\n                break;\n            case 'symbol':\n                result = this.hashString(Symbol.keyFor(value));\n                break;\n        }\n        return result;\n    }\n    /**\n     * @param target -\n     *\n     * @param Prototype -\n     *\n     * @returns target constructor function has Prototype.\n     */\n    static hasPrototype(target, Prototype) {\n        /* c8 ignore next */\n        if (typeof target !== 'function') {\n            return false;\n        }\n        if (target === Prototype) {\n            return true;\n        }\n        // Walk parent prototype chain. Check for descriptor at each prototype level.\n        for (let proto = Object.getPrototypeOf(target); proto; proto = Object.getPrototypeOf(proto)) {\n            if (proto === Prototype) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Provides a utility method to determine if the given data is iterable / implements iterator protocol.\n     *\n     * @param data - Data to verify as iterable.\n     *\n     * @returns Is data iterable.\n     */\n    static isIterable(data) {\n        return data !== null && data !== void 0 && typeof data === 'object' &&\n            typeof data[Symbol.iterator] === 'function';\n    }\n}\n\n/**\n * Provides the `derived` API for all dynamic reducers.\n */\nclass AdapterDerived {\n    #hostData;\n    #DerivedReducerCtor;\n    #parentIndex;\n    #derived = new Map();\n    #destroyed = false;\n    /**\n     * @param hostData - Hosted data structure.\n     *\n     * @param parentIndex - Any associated parent index API.\n     *\n     * @param DerivedReducerCtor - The default derived reducer constructor function.\n     */\n    constructor(hostData, parentIndex, DerivedReducerCtor) {\n        this.#hostData = hostData;\n        this.#parentIndex = parentIndex;\n        this.#DerivedReducerCtor = DerivedReducerCtor;\n        Object.freeze(this);\n    }\n    /**\n     * Creates a new derived reducer.\n     *\n     * @param options - Options defining the new derived reducer.\n     *\n     * @returns Newly created derived reducer.\n     */\n    create(options) {\n        if (this.#destroyed) {\n            throw Error(`AdapterDerived.create error: this instance has been destroyed.`);\n        }\n        let name;\n        let rest = {};\n        let ctor;\n        const DerivedReducerCtor = this.#DerivedReducerCtor;\n        if (typeof options === 'string') {\n            name = options;\n            ctor = DerivedReducerCtor;\n        }\n        else if (typeof options === 'function' && DynReducerUtils.hasPrototype(options, DerivedReducerCtor)) {\n            ctor = options;\n        }\n        else if (typeof options === 'object' && options !== null) {\n            ({ name, ctor = DerivedReducerCtor, ...rest } = options);\n        }\n        else {\n            throw new TypeError(`AdapterDerived.create error: 'options' does not conform to allowed parameters.`);\n        }\n        if (!DynReducerUtils.hasPrototype(ctor, DerivedReducerCtor)) {\n            throw new TypeError(`AdapterDerived.create error: 'ctor' is not a '${DerivedReducerCtor?.name}'.`);\n        }\n        name = name ?? ctor?.name;\n        if (typeof name !== 'string') {\n            throw new TypeError(`AdapterDerived.create error: 'name' is not a string.`);\n        }\n        const derivedReducer = new ctor(this.#hostData, this.#parentIndex, rest);\n        this.#derived.set(name, derivedReducer);\n        return derivedReducer;\n    }\n    /**\n     * Removes all derived reducers and associated subscriptions.\n     */\n    clear() {\n        if (this.#destroyed) {\n            return;\n        }\n        for (const reducer of this.#derived.values()) {\n            reducer.destroy();\n        }\n        this.#derived.clear();\n    }\n    /**\n     * Deletes and destroys a derived reducer by name.\n     *\n     * @param name - Name of the derived reducer.\n     */\n    delete(name) {\n        if (this.#destroyed) {\n            throw Error(`AdapterDerived.delete error: this instance has been destroyed.`);\n        }\n        const reducer = this.#derived.get(name);\n        if (reducer) {\n            reducer.destroy();\n        }\n        return this.#derived.delete(name);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        if (this.#destroyed) {\n            return;\n        }\n        this.clear();\n        this.#hostData = [null];\n        this.#parentIndex = null;\n        this.#destroyed = true;\n    }\n    /**\n     * Returns an existing derived reducer.\n     *\n     * @param name - Name of derived reducer.\n     */\n    get(name) {\n        if (this.#destroyed) {\n            throw Error(`AdapterDerived.get error: this instance has been destroyed.`);\n        }\n        return this.#derived.get(name);\n    }\n    /**\n     * Updates all managed derived reducer indexes.\n     *\n     * @param [force] - Force an update to subscribers.\n     */\n    update(force = false) {\n        if (this.#destroyed) {\n            return;\n        }\n        for (const reducer of this.#derived.values()) {\n            reducer.index.update(force);\n        }\n    }\n}\n\n/**\n * Provides the storage and sequencing of managed filters. Each filter added may be a bespoke function or a\n * {@link DynDataFilter} object containing an `id`, `filter`, and `weight` attributes; `filter` is the only required\n * attribute.\n *\n * The `id` attribute can be anything that creates a unique ID for the filter; recommended strings or numbers. This\n * allows filters to be removed by ID easily.\n *\n * The `weight` attribute is a number between 0 and 1 inclusive that allows filters to be added in a\n * predictable order which is especially handy if they are manipulated at runtime. A lower weighted filter always runs\n * before a higher weighted filter. For speed and efficiency always set the heavier / more inclusive filter with a\n * lower weight; an example of this is a keyword / name that will filter out many entries making any further filtering\n * faster. If no weight is specified the default of '1' is assigned and it is appended to the end of the filters list.\n *\n * This class forms the public API which is accessible from the `.filters` getter in the main reducer implementation.\n * ```\n * const dynArray = new DynArrayReducer([...]);\n * dynArray.filters.add(...);\n * dynArray.filters.clear();\n * dynArray.filters.length;\n * dynArray.filters.remove(...);\n * dynArray.filters.removeBy(...);\n * dynArray.filters.removeById(...);\n * ```\n */\nclass AdapterFilters {\n    #filtersData;\n    #indexUpdate;\n    #mapUnsubscribe = new Map();\n    /**\n     * @param indexUpdate - update function for the indexer.\n     *\n     * @param filtersAdapter - Stores the filter function data.\n     */\n    constructor(indexUpdate, filtersAdapter) {\n        this.#indexUpdate = indexUpdate;\n        this.#filtersData = filtersAdapter;\n        Object.freeze(this);\n    }\n    /**\n     * @returns Returns the length of the filter data.\n     */\n    get length() { return this.#filtersData.filters.length; }\n    /**\n     * Provides an iterator for filters.\n     *\n     * @yields {DataFilter<T>}\n     */\n    *[Symbol.iterator]() {\n        if (this.#filtersData.filters.length === 0) {\n            return;\n        }\n        for (const entry of this.#filtersData.filters) {\n            yield { ...entry };\n        }\n    }\n    /**\n     * @param filters -\n     */\n    add(...filters) {\n        /**\n         * Tracks the number of filters added that have subscriber functionality.\n         */\n        let subscribeCount = 0;\n        for (const filter of filters) {\n            const filterType = typeof filter;\n            if (filterType !== 'function' && (filterType !== 'object' || filter === null)) {\n                throw new TypeError(`AdapterFilters error: 'filter' is not a function or object.`);\n            }\n            let data = void 0;\n            let subscribeFn = void 0;\n            if (filterType === 'function') {\n                data = {\n                    id: void 0,\n                    filter,\n                    weight: 1\n                };\n                subscribeFn = filter.subscribe;\n            }\n            else if (filterType === 'object') {\n                if ('filter' in filter) {\n                    if (typeof filter.filter !== 'function') {\n                        throw new TypeError(`AdapterFilters error: 'filter' attribute is not a function.`);\n                    }\n                    if (filter.weight !== void 0 && typeof filter.weight !== 'number' ||\n                        (filter.weight < 0 || filter.weight > 1)) {\n                        throw new TypeError(`AdapterFilters error: 'weight' attribute is not a number between '0 - 1' inclusive.`);\n                    }\n                    data = {\n                        id: filter.id !== void 0 ? filter.id : void 0,\n                        filter: filter.filter,\n                        weight: filter.weight || 1\n                    };\n                    subscribeFn = filter.filter.subscribe ?? filter.subscribe;\n                }\n                else {\n                    throw new TypeError(`AdapterFilters error: 'filter' attribute is not a function.`);\n                }\n            }\n            // Find the index to insert where data.weight is less than existing values weight.\n            const index = this.#filtersData.filters.findIndex((value) => {\n                return data.weight < value.weight;\n            });\n            // If an index was found insert at that location.\n            if (index >= 0) {\n                this.#filtersData.filters.splice(index, 0, data);\n            }\n            else // push to end of filters.\n             {\n                this.#filtersData.filters.push(data);\n            }\n            if (typeof subscribeFn === 'function') {\n                const unsubscribe = subscribeFn(this.#indexUpdate);\n                // Ensure that unsubscribe is a function.\n                if (typeof unsubscribe !== 'function') {\n                    throw new TypeError('AdapterFilters error: Filter has subscribe function, but no unsubscribe function is returned.');\n                }\n                // Ensure that the same filter is not subscribed to multiple times.\n                if (this.#mapUnsubscribe.has(data.filter)) {\n                    throw new Error('AdapterFilters error: Filter added already has an unsubscribe function registered.');\n                }\n                this.#mapUnsubscribe.set(data.filter, unsubscribe);\n                subscribeCount++;\n            }\n        }\n        // Filters with subscriber functionality are assumed to immediately invoke the `subscribe` callback. If the\n        // subscriber count is less than the amount of filters added then automatically trigger an index update manually.\n        if (subscribeCount < filters.length) {\n            this.#indexUpdate();\n        }\n    }\n    /**\n     * Clears and removes all filters.\n     */\n    clear() {\n        this.#filtersData.filters.length = 0;\n        // Unsubscribe from all filters with subscription support.\n        for (const unsubscribe of this.#mapUnsubscribe.values()) {\n            unsubscribe();\n        }\n        this.#mapUnsubscribe.clear();\n        this.#indexUpdate();\n    }\n    /**\n     * @param filters -\n     */\n    remove(...filters) {\n        const length = this.#filtersData.filters.length;\n        if (length === 0) {\n            return;\n        }\n        for (const data of filters) {\n            // Handle the case that the filter may either be a function or a filter entry / object.\n            const actualFilter = typeof data === 'function' ? data : data !== null && typeof data === 'object' ?\n                data.filter : void 0;\n            if (!actualFilter) {\n                continue;\n            }\n            for (let cntr = this.#filtersData.filters.length; --cntr >= 0;) {\n                if (this.#filtersData.filters[cntr].filter === actualFilter) {\n                    this.#filtersData.filters.splice(cntr, 1);\n                    // Invoke any unsubscribe function for given filter then remove from tracking.\n                    let unsubscribe = void 0;\n                    if (typeof (unsubscribe = this.#mapUnsubscribe.get(actualFilter)) === 'function') {\n                        unsubscribe();\n                        this.#mapUnsubscribe.delete(actualFilter);\n                    }\n                }\n            }\n        }\n        // Update the index a filter was removed.\n        if (length !== this.#filtersData.filters.length) {\n            this.#indexUpdate();\n        }\n    }\n    /**\n     * Remove filters by the provided callback. The callback takes 3 parameters: `id`, `filter`, and `weight`.\n     * Any truthy value returned will remove that filter.\n     *\n     * @param callback - Callback function to evaluate each filter entry.\n     */\n    removeBy(callback) {\n        const length = this.#filtersData.filters.length;\n        if (length === 0) {\n            return;\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(`AdapterFilters error: 'callback' is not a function.`);\n        }\n        this.#filtersData.filters = this.#filtersData.filters.filter((data) => {\n            const remove = callback.call(callback, { ...data });\n            if (remove) {\n                let unsubscribe;\n                if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.filter)) === 'function') {\n                    unsubscribe();\n                    this.#mapUnsubscribe.delete(data.filter);\n                }\n            }\n            // Reverse remove boolean to properly filter / remove this filter.\n            return !remove;\n        });\n        if (length !== this.#filtersData.filters.length) {\n            this.#indexUpdate();\n        }\n    }\n    /**\n     * @param ids - Removes filters by ID.\n     */\n    removeById(...ids) {\n        const length = this.#filtersData.filters.length;\n        if (length === 0) {\n            return;\n        }\n        this.#filtersData.filters = this.#filtersData.filters.filter((data) => {\n            let remove = 0;\n            for (const id of ids) {\n                remove |= (data.id === id ? 1 : 0);\n            }\n            // If not keeping invoke any unsubscribe function for given filter then remove from tracking.\n            if (!!remove) {\n                let unsubscribe;\n                if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.filter)) === 'function') {\n                    unsubscribe();\n                    this.#mapUnsubscribe.delete(data.filter);\n                }\n            }\n            return !remove; // Swap here to actually remove the item via array filter method.\n        });\n        if (length !== this.#filtersData.filters.length) {\n            this.#indexUpdate();\n        }\n    }\n}\n\n/**\n * Provides construction and management of indexed data when there are parent indexes or filter / sort functions\n * applied.\n */\nclass AdapterIndexer {\n    derivedAdapter;\n    filtersData;\n    hostData;\n    hostUpdate;\n    indexData;\n    sortData;\n    sortFn;\n    destroyed = false;\n    /**\n     * @param hostData - Hosted data structure.\n     *\n     * @param hostUpdate - Host update function invoked on index updates.\n     *\n     * @param [parentIndexer] - Any associated parent index API.\n     *\n     * @returns Indexer adapter instance.\n     */\n    constructor(hostData, hostUpdate, parentIndexer) {\n        this.hostData = hostData;\n        this.hostUpdate = hostUpdate;\n        this.indexData = { index: null, hash: null, reversed: false, parent: parentIndexer };\n    }\n    /**\n     * @returns Returns whether the index is active.\n     */\n    get active() {\n        return this.filtersData.filters.length > 0 || this.sortData.compareFn !== null ||\n            this.indexData.parent?.active === true;\n    }\n    /**\n     * @returns Returns length of reduced index.\n     */\n    get length() {\n        return this.indexData.index ? this.indexData.index.length : 0;\n    }\n    /* c8 ignore start */\n    /**\n     * @returns Returns reversed state.\n     */\n    get reversed() { return this.indexData.reversed; }\n    /* c8 ignore end */\n    /**\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) { this.indexData.reversed = reversed; }\n    // -------------------------------------------------------------------------------------------------------------------\n    /**\n     * Calculates a new hash value for the new index array if any. If the new index array is null then the hash value\n     * is set to null. Set calculated new hash value to the index adapter hash value.\n     *\n     * After hash generation compare old and new hash values and perform an update if they are different. If they are\n     * equal check for array equality between the old and new index array and perform an update if they are not equal.\n     *\n     * @param oldIndex - Old index array.\n     *\n     * @param oldHash - Old index hash value.\n     *\n     * @param [force=false] - When true forces an update to subscribers.\n     */\n    calcHashUpdate(oldIndex, oldHash, force = false) {\n        // Use force if a boolean otherwise default to false.\n        const actualForce = typeof force === 'boolean' ? force : /* c8 ignore next */ false;\n        let newHash = null;\n        const newIndex = this.indexData.index;\n        if (newIndex) {\n            for (let cntr = newIndex.length; --cntr >= 0;) {\n                newHash ^= DynReducerUtils.hashUnknown(newIndex[cntr]) + 0x9e3779b9 + (newHash << 6) + (newHash >> 2);\n            }\n        }\n        this.indexData.hash = newHash;\n        if (actualForce || (oldHash === newHash ? !DynReducerUtils.arrayEquals(oldIndex, newIndex) : true)) {\n            this.hostUpdate();\n        }\n    }\n    /**\n     * Destroys all resources.\n     */\n    destroy() {\n        if (this.destroyed) {\n            return;\n        }\n        this.indexData.index = null;\n        this.indexData.hash = null;\n        this.indexData.reversed = null;\n        this.indexData.parent = null;\n        this.destroyed = true;\n    }\n    /**\n     * Store associated filter and sort data that are constructed after the indexer.\n     *\n     * @param filtersData - Associated AdapterFilters instance.\n     *\n     * @param sortData - Associated AdapterSort instance.\n     *\n     * @param derivedAdapter - Associated AdapterDerived instance.\n     */\n    initAdapters(filtersData, sortData, derivedAdapter) {\n        this.filtersData = filtersData;\n        this.sortData = sortData;\n        this.derivedAdapter = derivedAdapter;\n        this.sortFn = this.createSortFn();\n    }\n}\n\n/**\n * Provides the storage and sequencing of a managed sort function. The sort function set may be a bespoke function or a\n * {@link DynDataSort} object containing an `compare`, and `subscribe` attributes; `compare` is the only required\n * attribute.\n *\n * Note: You can set a compare function that also has a subscribe function attached as the `subscribe` attribute.\n * If a subscribe function is provided the sort function can notify any updates that may change sort order and this\n * triggers an index update.\n *\n * This class forms the public API which is accessible from the `.sort` getter in the main reducer implementation.\n * ```\n * const dynArray = new DynArrayReducer([...]);\n * dynArray.sort.clear();\n * dynArray.sort.set(...);\n * ```\n */\nclass AdapterSort {\n    #sortData;\n    #indexUpdate;\n    #unsubscribe;\n    /**\n     * @param indexUpdate - Function to update indexer.\n     *\n     * @param sortData - Storage for compare function.\n     */\n    constructor(indexUpdate, sortData) {\n        this.#indexUpdate = indexUpdate;\n        this.#sortData = sortData;\n        Object.freeze(this);\n    }\n    /**\n     * Clears & removes any assigned sort function and triggers an index update.\n     */\n    clear() {\n        const oldCompareFn = this.#sortData.compareFn;\n        this.#sortData.compareFn = null;\n        if (typeof this.#unsubscribe === 'function') {\n            this.#unsubscribe();\n            this.#unsubscribe = void 0;\n        }\n        // Only update index if an old compare function is set.\n        if (typeof oldCompareFn === 'function') {\n            this.#indexUpdate();\n        }\n    }\n    /**\n     * @param data - A callback function that compares two values. Return > 0 to sort b before a;\n     * < 0 to sort a before b; or 0 to keep original order of a & b.\n     *\n     * Note: You can set a compare function that also has a subscribe function attached as the `subscribe` attribute.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#parameters\n     */\n    set(data) {\n        if (typeof this.#unsubscribe === 'function') {\n            this.#unsubscribe();\n            this.#unsubscribe = void 0;\n        }\n        let compareFn = void 0;\n        let subscribeFn = void 0;\n        switch (typeof data) {\n            case 'function':\n                compareFn = data;\n                subscribeFn = data.subscribe;\n                break;\n            case 'object':\n                // Early out if data is null / noop.\n                if (data === null) {\n                    break;\n                }\n                if (typeof data.compare !== 'function') {\n                    throw new TypeError(`AdapterSort error: 'compare' attribute is not a function.`);\n                }\n                compareFn = data.compare;\n                subscribeFn = data.compare.subscribe ?? data.subscribe;\n                break;\n        }\n        if (typeof compareFn === 'function') {\n            this.#sortData.compareFn = compareFn;\n        }\n        else {\n            const oldCompareFn = this.#sortData.compareFn;\n            this.#sortData.compareFn = null;\n            // Update index if the old compare function exists.\n            if (typeof oldCompareFn === 'function') {\n                this.#indexUpdate();\n            }\n            return;\n        }\n        if (typeof subscribeFn === 'function') {\n            this.#unsubscribe = subscribeFn(this.#indexUpdate);\n            // Ensure that unsubscribe is a function.\n            if (typeof this.#unsubscribe !== 'function') {\n                throw new Error(`AdapterSort error: sort has 'subscribe' function, but no 'unsubscribe' function is returned.`);\n            }\n        }\n        else {\n            // A sort function with subscriber functionality are assumed to immediately invoke the `subscribe` callback.\n            // Only manually update the index if there is no subscriber functionality.\n            this.#indexUpdate();\n        }\n    }\n}\n\n/**\n * Provides the public API for accessing the index API.\n *\n * This class forms the public API which is accessible from the `.index` getter in the main reducer implementation.\n * ```\n * const dynArray = new DynArrayReducer([...]);\n * dynArray.index.active;\n * dynArray.index.hash;\n * dynArray.index.length;\n * dynArray.index.update(...);\n * ```\n */\nclass IndexerAPI {\n    #indexData;\n    /**\n     * Provides a getter to determine if the index is active.\n     */\n    active;\n    /**\n     * Provides length of reduced / indexed elements.\n     */\n    length;\n    /**\n     * Manually invoke an update of the index.\n     *\n     * @param force - Force update to any subscribers.\n     */\n    update;\n    constructor(adapterIndexer) {\n        this.#indexData = adapterIndexer.indexData;\n        this.update = adapterIndexer.update.bind(adapterIndexer);\n        // Defines getters on the public API to get the index hash, active state, and index length.\n        Object.defineProperties(this, {\n            active: { get: () => adapterIndexer.active },\n            length: { get: () => adapterIndexer.length }\n        });\n        Object.freeze(this);\n    }\n    /**\n     * - Current hash value of the index.\n     */\n    get hash() {\n        return this.#indexData.hash;\n    }\n    /**\n     * Provides an iterator over the index array.\n     *\n     * @yields {K}\n     */\n    *[Symbol.iterator]() {\n        const indexData = this.#indexData;\n        if (!indexData.index) {\n            return;\n        }\n        const reversed = indexData.reversed;\n        const length = indexData.index.length;\n        if (reversed) {\n            for (let cntr = length; --cntr >= 0;) {\n                yield indexData.index[cntr];\n            }\n        }\n        else {\n            for (let cntr = 0; cntr < length; cntr++) {\n                yield indexData.index[cntr];\n            }\n        }\n    }\n}\n\n/**\n * Provides the public API for derived reducers. There are several ways to create a derived reducer from utilizing the\n * default implementation or passing in a constructor function / class for a custom derived reducer.\n *\n * This class forms the public API which is accessible from the `.derived` getter in the main reducer implementation.\n * ```\n * const dynArray = new DynArrayReducer([...]);\n * dynArray.derived.clear();\n * dynArray.derived.create(...);\n * dynArray.derived.delete(...);\n * dynArray.derived.destroy();\n * dynArray.derived.get(...);\n * ```\n */\nclass DerivedAPI {\n    /**\n     * Removes all derived reducers and associated subscriptions.\n     */\n    clear;\n    /**\n     * @param options - Options for creating a reducer.\n     *\n     * @returns Newly created derived reducer.\n     */\n    create;\n    /**\n     * Deletes and destroys a derived reducer.\n     *\n     * @param name - Name of the derived reducer\n     */\n    delete;\n    /**\n     * Removes all derived reducers, associated subscriptions, and cleans up all resources.\n     */\n    destroy;\n    /**\n     * Returns an existing derived reducer.\n     *\n     * @param name - Name of derived reducer.\n     */\n    get;\n    constructor(adapterDerived) {\n        this.clear = adapterDerived.clear.bind(adapterDerived);\n        this.create = adapterDerived.create.bind(adapterDerived);\n        this.delete = adapterDerived.delete.bind(adapterDerived);\n        this.destroy = adapterDerived.destroy.bind(adapterDerived);\n        this.get = adapterDerived.get.bind(adapterDerived);\n        Object.freeze(this);\n    }\n}\n\n/**\n */\nlet Indexer$1 = class Indexer extends AdapterIndexer {\n    /**\n     * @inheritDoc\n     */\n    createSortFn() {\n        return (a, b) => this.sortData.compareFn(this.hostData[0][a], this.hostData[0][b]);\n    }\n    /**\n     * Provides the custom filter / reduce step that is ~25-40% faster than implementing with `Array.reduce`.\n     *\n     * Note: Other loop unrolling techniques like Duff's Device gave a slight faster lower bound on large data sets,\n     * but the maintenance factor is not worth the extra complication.\n     *\n     * @returns New filtered index array.\n     */\n    reduceImpl() {\n        const data = [];\n        const array = this.hostData[0];\n        if (!array) {\n            return data;\n        }\n        const filters = this.filtersData.filters;\n        let include = true;\n        const parentIndex = this.indexData.parent;\n        // Source index data is coming from an active parent index.\n        if (DynReducerUtils.isIterable(parentIndex) && parentIndex.active) {\n            for (const adjustedIndex of parentIndex) {\n                const value = array[adjustedIndex];\n                include = true;\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\n                    if (!filters[filCntr].filter(value)) {\n                        include = false;\n                        break;\n                    }\n                }\n                if (include) {\n                    data.push(adjustedIndex);\n                }\n            }\n        }\n        else {\n            for (let cntr = 0, length = array.length; cntr < length; cntr++) {\n                include = true;\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\n                    if (!filters[filCntr].filter(array[cntr])) {\n                        include = false;\n                        break;\n                    }\n                }\n                if (include) {\n                    data.push(cntr);\n                }\n            }\n        }\n        return data;\n    }\n    /**\n     * Update the reducer indexes. If there are changes subscribers are notified. If data order is changed externally\n     * pass in true to force an update to subscribers.\n     *\n     * @param [force=false] - When true forces an update to subscribers.\n     */\n    update(force = false) {\n        if (this.destroyed) {\n            return;\n        }\n        const oldIndex = this.indexData.index;\n        const oldHash = this.indexData.hash;\n        const array = this.hostData[0];\n        const parentIndex = this.indexData.parent;\n        // Clear index if there are no filters and no sort function or the index length doesn't match the item length.\n        if ((this.filtersData.filters.length === 0 && !this.sortData.compareFn) ||\n            (this.indexData.index && array?.length !== this.indexData.index.length)) {\n            this.indexData.index = null;\n        }\n        // If there are filters build new index.\n        if (this.filtersData.filters.length > 0) {\n            this.indexData.index = this.reduceImpl();\n        }\n        // If the index isn't built yet and there is an active parent index then create it from the parent.\n        if (!this.indexData.index && parentIndex?.active) {\n            this.indexData.index = [...parentIndex];\n        }\n        if (this.sortData.compareFn && Array.isArray(array)) {\n            // If there is no index then create one with keys matching host item length.\n            if (!this.indexData.index) {\n                this.indexData.index = [...Array(array.length).keys()];\n            }\n            this.indexData.index.sort(this.sortFn);\n        }\n        this.calcHashUpdate(oldIndex, oldHash, force);\n        // Update all derived reducers.\n        this.derivedAdapter?.update(force);\n    }\n};\n\n/**\n * Provides the base implementation derived reducer for arrays / DynArrayReducer.\n */\nclass DynArrayReducerDerived {\n    #array;\n    #derived;\n    #derivedPublicAPI;\n    #filters;\n    #filtersData = { filters: [] };\n    #index;\n    #indexPublicAPI;\n    #reversed = false;\n    #sort;\n    #sortData = { compareFn: null };\n    #subscriptions = [];\n    #destroyed = false;\n    /**\n     * @param array - Data host array.\n     *\n     * @param parentIndex - Parent indexer.\n     *\n     * @param options - Any filters and sort functions to apply.\n     */\n    constructor(array, parentIndex, options) {\n        this.#array = array;\n        this.#index = new Indexer$1(this.#array, this.#updateSubscribers.bind(this), parentIndex);\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\n        this.#derived = new AdapterDerived(this.#array, this.#indexPublicAPI, DynArrayReducerDerived);\n        this.#derivedPublicAPI = new DerivedAPI(this.#derived);\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\n        let filters = void 0;\n        let sort = void 0;\n        if (options !== void 0 && ('filters' in options || 'sort' in options)) {\n            if (options.filters !== void 0) {\n                if (DynReducerUtils.isIterable(options.filters)) {\n                    filters = options.filters;\n                }\n                else {\n                    throw new TypeError(`DerivedArrayReducer error (DataDerivedOptions): 'filters' attribute is not iterable.`);\n                }\n            }\n            if (options.sort !== void 0) {\n                if (typeof options.sort === 'function') {\n                    sort = options.sort;\n                }\n                else if (typeof options.sort === 'object' && options.sort !== null) {\n                    sort = options.sort;\n                }\n                else {\n                    throw new TypeError(`DerivedArrayReducer error (DataDerivedOptions): 'sort' attribute is not a function or object.`);\n                }\n            }\n        }\n        // Add any filters and sort function defined by DataDynArray.\n        if (filters) {\n            this.filters.add(...filters);\n        }\n        if (sort) {\n            this.sort.set(sort);\n        }\n        // Invoke an custom initialization for child classes.\n        this.initialize();\n    }\n    /**\n     * Returns the internal data of this instance. Be careful!\n     *\n     * Note: if an array is set as initial data then that array is used as the internal data. If any changes are\n     * performed to the data externally do invoke {@link IndexerAPI.update} with `true` to recalculate the index and\n     * notify all subscribers.\n     *\n     * @returns The internal data.\n     */\n    get data() { return this.#array[0]; }\n    /**\n     * @returns Derived public API.\n     */\n    get derived() { return this.#derivedPublicAPI; }\n    /**\n     * @returns The filters adapter.\n     */\n    get filters() { return this.#filters; }\n    /**\n     * Returns the Indexer public API.\n     *\n     * @returns Indexer API - is also iterable.\n     */\n    get index() { return this.#indexPublicAPI; }\n    /**\n     * Returns whether this derived reducer is destroyed.\n     */\n    get destroyed() { return this.#destroyed; }\n    /**\n     * @returns Main data / items length or indexed length.\n     */\n    get length() {\n        const array = this.#array[0];\n        return this.#index.active ? this.index.length :\n            array ? array.length : 0;\n    }\n    /**\n     * @returns Gets current reversed state.\n     */\n    get reversed() { return this.#reversed; }\n    /**\n     * @returns The sort adapter.\n     */\n    get sort() { return this.#sort; }\n    /**\n     * Sets reversed state and notifies subscribers.\n     *\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) {\n        if (typeof reversed !== 'boolean') {\n            throw new TypeError(`DerivedArrayReducer.reversed error: 'reversed' is not a boolean.`);\n        }\n        this.#reversed = reversed;\n        this.#index.reversed = reversed;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        this.#destroyed = true;\n        // Remove any external data reference and perform a final update.\n        this.#array = [null];\n        this.#index.update(true);\n        // Remove all subscriptions.\n        this.#subscriptions.length = 0;\n        this.#derived.destroy();\n        this.#index.destroy();\n        this.#filters.clear();\n        this.#sort.clear();\n    }\n    /**\n     * Provides a callback for custom derived reducers to initialize any data / custom configuration. This allows\n     * child classes to avoid implementing the constructor.\n     *\n     * @protected\n     */\n    initialize() { }\n    /**\n     * Provides an iterator for data stored in DerivedArrayReducer.\n     *\n     * @yields {T}\n     */\n    *[Symbol.iterator]() {\n        const array = this.#array[0];\n        if (this.#destroyed || array === null || array?.length === 0) {\n            return;\n        }\n        if (this.#index.active) {\n            for (const entry of this.index) {\n                yield array[entry];\n            }\n        }\n        else {\n            if (this.reversed) {\n                for (let cntr = array.length; --cntr >= 0;) {\n                    yield array[cntr];\n                }\n            }\n            else {\n                for (let cntr = 0; cntr < array.length; cntr++) {\n                    yield array[cntr];\n                }\n            }\n        }\n    }\n    // -------------------------------------------------------------------------------------------------------------------\n    /**\n     * Subscribe to this DerivedArrayReducer.\n     *\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        this.#subscriptions.push(handler); // add handler to the array of subscribers\n        handler(this); // call handler with current value\n        // Return unsubscribe function.\n        return () => {\n            const index = this.#subscriptions.findIndex((sub) => sub === handler);\n            if (index >= 0) {\n                this.#subscriptions.splice(index, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) {\n            this.#subscriptions[cntr](this);\n        }\n    }\n}\n\n/**\n * Provides a managed array with non-destructive reducing / filtering / sorting capabilities with subscription /\n * Svelte store support.\n */\nclass DynArrayReducer {\n    #array = [null];\n    #derived;\n    #derivedPublicAPI;\n    #filters;\n    #filtersData = { filters: [] };\n    #index;\n    #indexPublicAPI;\n    #reversed = false;\n    #sort;\n    #sortData = { compareFn: null };\n    #subscriptions = [];\n    #destroyed = false;\n    /**\n     * Initializes DynArrayReducer. Any iterable is supported for initial data. Take note that if `data` is an array it\n     * will be used as the host array and not copied. All non-array iterables otherwise create a new array / copy.\n     *\n     * @param [data] - Data iterable to store if array or copy otherwise.\n     */\n    constructor(data) {\n        let dataIterable = void 0;\n        let filters = void 0;\n        let sort = void 0;\n        if (data === null) {\n            throw new TypeError(`DynArrayReducer error: 'data' is not iterable.`);\n        }\n        if (data !== void 0 && typeof data !== 'object' && !DynReducerUtils.isIterable(data)) {\n            throw new TypeError(`DynArrayReducer error: 'data' is not iterable.`);\n        }\n        if (data !== void 0 && Symbol.iterator in data) {\n            dataIterable = data;\n        }\n        else if (data !== void 0 && ('data' in data || 'filters' in data || 'sort' in data)) {\n            if (data.data !== void 0 && !DynReducerUtils.isIterable(data.data)) {\n                throw new TypeError(`DynArrayReducer error (DataDynArray): 'data' attribute is not iterable.`);\n            }\n            dataIterable = data.data;\n            if (data.filters !== void 0) {\n                if (DynReducerUtils.isIterable(data.filters)) {\n                    filters = data.filters;\n                }\n                else {\n                    throw new TypeError(`DynArrayReducer error (DataDynArray): 'filters' attribute is not iterable.`);\n                }\n            }\n            if (data.sort !== void 0) {\n                if (typeof data.sort === 'function') {\n                    sort = data.sort;\n                }\n                else if (typeof data.sort === 'object' && data.sort !== null) {\n                    sort = data.sort;\n                }\n                else {\n                    throw new TypeError(`DynArrayReducer error (DataDynArray): 'sort' attribute is not a function or object.`);\n                }\n            }\n        }\n        // In the case of the main data being an array directly use the array otherwise create a copy.\n        if (dataIterable) {\n            this.#array[0] = Array.isArray(dataIterable) ? dataIterable : [...dataIterable];\n        }\n        this.#index = new Indexer$1(this.#array, this.#updateSubscribers.bind(this));\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\n        this.#derived = new AdapterDerived(this.#array, this.#indexPublicAPI, DynArrayReducerDerived);\n        this.#derivedPublicAPI = new DerivedAPI(this.#derived);\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\n        // Add any filters and sort function defined by DataDynArray.\n        if (filters) {\n            this.filters.add(...filters);\n        }\n        if (sort) {\n            this.sort.set(sort);\n        }\n        // Invoke an custom initialization for child classes.\n        this.initialize();\n    }\n    /**\n     * Returns the internal data of this instance. Be careful!\n     *\n     * Note: if an array is set as initial data then that array is used as the internal data. If any changes are\n     * performed to the data externally do invoke {@link AdapterIndexer.index.update} with `true` to recalculate the\n     * index and notify all subscribers.\n     *\n     * @returns The internal data.\n     */\n    get data() { return this.#array[0]; }\n    /**\n     * @returns Derived public API.\n     */\n    get derived() { return this.#derivedPublicAPI; }\n    /**\n     * @returns The filters adapter.\n     */\n    get filters() { return this.#filters; }\n    /**\n     * @returns Returns the Indexer public API.\n     */\n    get index() { return this.#indexPublicAPI; }\n    /**\n     * Returns whether this instance is destroyed.\n     */\n    get destroyed() { return this.#destroyed; }\n    /**\n     * Gets the main data / items length.\n     *\n     * @returns {number} Main data / items length.\n     */\n    get length() {\n        const array = this.#array[0];\n        return this.#index.active ? this.#indexPublicAPI.length :\n            array ? array.length : 0;\n    }\n    /**\n     * Gets current reversed state.\n     *\n     * @returns {boolean} Reversed state.\n     */\n    get reversed() { return this.#reversed; }\n    /**\n     * @returns The sort adapter.\n     */\n    get sort() { return this.#sort; }\n    /**\n     * Sets reversed state and notifies subscribers.\n     *\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) {\n        if (typeof reversed !== 'boolean') {\n            throw new TypeError(`DynArrayReducer.reversed error: 'reversed' is not a boolean.`);\n        }\n        this.#reversed = reversed;\n        this.#index.reversed = reversed;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        if (this.#destroyed) {\n            return;\n        }\n        this.#destroyed = true;\n        this.#derived.destroy();\n        // Set the backing data to null and provide a final update.\n        this.#array = [null];\n        this.index.update(true);\n        // Remove all subscriptions.\n        this.#subscriptions.length = 0;\n        this.#index.destroy();\n        this.#filters.clear();\n        this.#sort.clear();\n    }\n    /**\n     * Provides a callback for custom reducers to initialize any data / custom configuration. This allows\n     * child classes to avoid implementing the constructor.\n     *\n     * @protected\n     */\n    initialize() { }\n    /**\n     * Removes internal data and pushes new data. This does not destroy any initial array set to internal data unless\n     * `replace` is set to true.\n     *\n     * @param data - New data to set to internal data.\n     *\n     * @param replace=false - New data to set to internal data.\n     */\n    setData(data, replace = false) {\n        if (data !== null && !DynReducerUtils.isIterable(data)) {\n            throw new TypeError(`DynArrayReducer.setData error: 'data' is not iterable.`);\n        }\n        if (typeof replace !== 'boolean') {\n            throw new TypeError(`DynArrayReducer.setData error: 'replace' is not a boolean.`);\n        }\n        const array = this.#array[0];\n        // If the array isn't defined or 'replace' is true then replace internal data with new array or create an array\n        // from an iterable.\n        if (!Array.isArray(array) || replace) {\n            if (data) {\n                this.#array[0] = Array.isArray(data) ? data : [...data];\n            }\n        }\n        else {\n            if (data) {\n                // Remove all entries in internal data. This will not replace any initially set array.\n                array.length = 0;\n                // Add all new data.\n                array.push(...data);\n            }\n            else {\n                this.#array[0] = null;\n            }\n        }\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Add a subscriber to this DynArrayReducer instance.\n     *\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        this.#subscriptions.push(handler); // add handler to the array of subscribers\n        handler(this); // call handler with current value\n        // Return unsubscribe function.\n        return () => {\n            const index = this.#subscriptions.findIndex((sub) => sub === handler);\n            if (index >= 0) {\n                this.#subscriptions.splice(index, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) {\n            this.#subscriptions[cntr](this);\n        }\n    }\n    /**\n     * Provides an iterator for data stored in DynArrayReducer.\n     *\n     * @yields {T}\n     */\n    *[Symbol.iterator]() {\n        const array = this.#array[0];\n        if (this.#destroyed || array === null || array?.length === 0) {\n            return;\n        }\n        if (this.#index.active) {\n            for (const entry of this.index) {\n                yield array[entry];\n            }\n        }\n        else {\n            if (this.reversed) {\n                for (let cntr = array.length; --cntr >= 0;) {\n                    yield array[cntr];\n                }\n            }\n            else {\n                for (let cntr = 0; cntr < array.length; cntr++) {\n                    yield array[cntr];\n                }\n            }\n        }\n    }\n}\n\n/**\n */\nclass Indexer extends AdapterIndexer {\n    /**\n     * @inheritDoc\n     */\n    createSortFn() {\n        return (a, b) => this.sortData.compareFn(this.hostData[0].get(a), this.hostData[0].get(b));\n    }\n    /**\n     * Provides the custom filter / reduce step that is ~25-40% faster than implementing with `Array.reduce`.\n     *\n     * Note: Other loop unrolling techniques like Duff's Device gave a slight faster lower bound on large data sets,\n     * but the maintenance factor is not worth the extra complication.\n     *\n     * @returns New filtered index array.\n     */\n    reduceImpl() {\n        const data = [];\n        const map = this.hostData[0];\n        if (!map) {\n            return data;\n        }\n        const filters = this.filtersData.filters;\n        let include = true;\n        const parentIndex = this.indexData.parent;\n        // Source index data is coming from an active parent index.\n        if (DynReducerUtils.isIterable(parentIndex) && parentIndex.active) {\n            for (const key of parentIndex) {\n                const value = map.get(key);\n                include = true;\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\n                    if (!filters[filCntr].filter(value)) {\n                        include = false;\n                        break;\n                    }\n                }\n                if (include) {\n                    data.push(key);\n                }\n            }\n        }\n        else {\n            for (const key of map.keys()) {\n                include = true;\n                const value = map.get(key);\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\n                    if (!filters[filCntr].filter(value)) {\n                        include = false;\n                        break;\n                    }\n                }\n                if (include) {\n                    data.push(key);\n                }\n            }\n        }\n        return data;\n    }\n    /**\n     * Update the reducer indexes. If there are changes subscribers are notified. If data order is changed externally\n     * pass in true to force an update to subscribers.\n     *\n     * @param [force=false] - When true forces an update to subscribers.\n     */\n    update(force = false) {\n        if (this.destroyed) {\n            return;\n        }\n        const oldIndex = this.indexData.index;\n        const oldHash = this.indexData.hash;\n        const map = this.hostData[0];\n        const parentIndex = this.indexData.parent;\n        // Clear index if there are no filters and no sort function or the index length doesn't match the item length.\n        if ((this.filtersData.filters.length === 0 && !this.sortData.compareFn) ||\n            (this.indexData.index && map?.size !== this.indexData.index.length)) {\n            this.indexData.index = null;\n        }\n        // If there are filters build new index.\n        if (this.filtersData.filters.length > 0) {\n            this.indexData.index = this.reduceImpl();\n        }\n        // If the index isn't built yet and there is an active parent index then create it from the parent.\n        if (!this.indexData.index && parentIndex?.active) {\n            this.indexData.index = [...parentIndex];\n        }\n        if (this.sortData.compareFn && map instanceof Map) {\n            // If there is no index then create one with keys matching host item length.\n            if (!this.indexData.index) {\n                this.indexData.index = this.indexData.index = [...map.keys()];\n            }\n            this.indexData.index.sort(this.sortFn);\n        }\n        this.calcHashUpdate(oldIndex, oldHash, force);\n        // Update all derived reducers.\n        this.derivedAdapter?.update(force);\n    }\n}\n\n/**\n * Provides the base implementation derived reducer for arrays / DynArrayReducer.\n */\nclass DynMapReducerDerived {\n    #map;\n    #derived;\n    #derivedPublicAPI;\n    #filters;\n    #filtersData = { filters: [] };\n    #index;\n    #indexPublicAPI;\n    #reversed = false;\n    #sort;\n    #sortData = { compareFn: null };\n    #subscriptions = [];\n    #destroyed = false;\n    /**\n     * @param map - Data host Map.\n     *\n     * @param parentIndex - Parent indexer.\n     *\n     * @param options - Any filters and sort functions to apply.\n     */\n    constructor(map, parentIndex, options) {\n        this.#map = map;\n        this.#index = new Indexer(this.#map, this.#updateSubscribers.bind(this), parentIndex);\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\n        this.#derived = new AdapterDerived(this.#map, this.#indexPublicAPI, DynMapReducerDerived);\n        this.#derivedPublicAPI = new DerivedAPI(this.#derived);\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\n        let filters = void 0;\n        let sort = void 0;\n        if (options !== void 0 && ('filters' in options || 'sort' in options)) {\n            if (options.filters !== void 0) {\n                if (DynReducerUtils.isIterable(options.filters)) {\n                    filters = options.filters;\n                }\n                else {\n                    throw new TypeError(`DerivedMapReducer error (DataDerivedOptions): 'filters' attribute is not iterable.`);\n                }\n            }\n            if (options.sort !== void 0) {\n                if (typeof options.sort === 'function') {\n                    sort = options.sort;\n                }\n                else if (typeof options.sort === 'object' && options.sort !== null) {\n                    sort = options.sort;\n                }\n                else {\n                    throw new TypeError(`DerivedMapReducer error (DataDerivedOptions): 'sort' attribute is not a function or object.`);\n                }\n            }\n        }\n        // Add any filters and sort function defined by DataDynArray.\n        if (filters) {\n            this.filters.add(...filters);\n        }\n        if (sort) {\n            this.sort.set(sort);\n        }\n        // Invoke an custom initialization for child classes.\n        this.initialize();\n    }\n    /**\n     * Returns the internal data of this instance. Be careful!\n     *\n     * Note: The returned map is the same map set by the main reducer. If any changes are performed to the data\n     * externally do invoke {@link IndexerAPI.update} with `true` to recalculate the index and notify all subscribers.\n     *\n     * @returns The internal data.\n     */\n    get data() { return this.#map[0]; }\n    /**\n     * @returns Derived public API.\n     */\n    get derived() { return this.#derivedPublicAPI; }\n    /**\n     * @returns The filters adapter.\n     */\n    get filters() { return this.#filters; }\n    /**\n     * Returns the Indexer public API.\n     *\n     * @returns Indexer API - is also iterable.\n     */\n    get index() { return this.#indexPublicAPI; }\n    /**\n     * Returns whether this derived reducer is destroyed.\n     */\n    get destroyed() { return this.#destroyed; }\n    /**\n     * @returns Main data / items length or indexed length.\n     */\n    get length() {\n        const map = this.#map[0];\n        return this.#index.active ? this.index.length :\n            map ? map.size : 0;\n    }\n    /**\n     * @returns Gets current reversed state.\n     */\n    get reversed() { return this.#reversed; }\n    /**\n     * @returns The sort adapter.\n     */\n    get sort() { return this.#sort; }\n    /**\n     * Sets reversed state and notifies subscribers.\n     *\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) {\n        if (typeof reversed !== 'boolean') {\n            throw new TypeError(`DerivedMapReducer.reversed error: 'reversed' is not a boolean.`);\n        }\n        this.#reversed = reversed;\n        this.#index.reversed = reversed;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        this.#destroyed = true;\n        // Remove any external data reference and perform a final update.\n        this.#map = [null];\n        this.#index.update(true);\n        // Remove all subscriptions.\n        this.#subscriptions.length = 0;\n        this.#derived.destroy();\n        this.#index.destroy();\n        this.#filters.clear();\n        this.#sort.clear();\n    }\n    /**\n     * Provides a callback for custom derived reducers to initialize any data / custom configuration. This allows\n     * child classes to avoid implementing the constructor.\n     *\n     * @protected\n     */\n    initialize() { }\n    /**\n     * Provides an iterator for data stored in DerivedMapReducer.\n     *\n     * @yields {T}\n     */\n    *[Symbol.iterator]() {\n        const map = this.#map[0];\n        if (this.#destroyed || map === null || map?.size === 0) {\n            return;\n        }\n        if (this.#index.active) {\n            for (const key of this.index) {\n                yield map.get(key);\n            }\n        }\n        else {\n            if (this.reversed) {\n                // TODO: Not efficient due to creating temporary values array.\n                const values = [...map.values()];\n                for (let cntr = values.length; --cntr >= 0;) {\n                    yield values[cntr];\n                }\n            }\n            else {\n                for (const value of map.values()) {\n                    yield value;\n                }\n            }\n        }\n    }\n    // -------------------------------------------------------------------------------------------------------------------\n    /**\n     * Subscribe to this DerivedMapReducer.\n     *\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        this.#subscriptions.push(handler); // add handler to the array of subscribers\n        handler(this); // call handler with current value\n        // Return unsubscribe function.\n        return () => {\n            const index = this.#subscriptions.findIndex((sub) => sub === handler);\n            if (index >= 0) {\n                this.#subscriptions.splice(index, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) {\n            this.#subscriptions[cntr](this);\n        }\n    }\n}\n\n/**\n * Provides a managed Map with non-destructive reducing / filtering / sorting capabilities with subscription /\n * Svelte store support.\n */\nclass DynMapReducer {\n    #map = [null];\n    #derived;\n    #derivedPublicAPI;\n    #filters;\n    #filtersData = { filters: [] };\n    #index;\n    #indexPublicAPI;\n    #reversed = false;\n    #sort;\n    #sortData = { compareFn: null };\n    #subscriptions = [];\n    #destroyed = false;\n    /**\n     * Initializes DynMapReducer. Any iterable is supported for initial data. Take note that if `data` is an array it\n     * will be used as the host array and not copied. All non-array iterables otherwise create a new array / copy.\n     *\n     * @param [data] - Data iterable to store if array or copy otherwise.\n     */\n    constructor(data) {\n        let dataMap = void 0;\n        let filters = void 0;\n        let sort = void 0;\n        if (data === null) {\n            throw new TypeError(`DynMapReducer error: 'data' is not an object or Map.`);\n        }\n        if (data !== void 0 && typeof data !== 'object' && !(data instanceof Map)) {\n            throw new TypeError(`DynMapReducer error: 'data' is not an object or Map.`);\n        }\n        if (data !== void 0 && data instanceof Map) {\n            dataMap = data;\n        }\n        else if (data !== void 0 && ('data' in data || 'filters' in data || 'sort' in data)) {\n            if (data.data !== void 0 && !(data.data instanceof Map)) {\n                throw new TypeError(`DynMapReducer error (DataDynMap): 'data' attribute is not a Map.`);\n            }\n            dataMap = data.data;\n            if (data.filters !== void 0) {\n                if (DynReducerUtils.isIterable(data.filters)) {\n                    filters = data.filters;\n                }\n                else {\n                    throw new TypeError(`DynMapReducer error (DataDynMap): 'filters' attribute is not iterable.`);\n                }\n            }\n            if (data.sort !== void 0) {\n                if (typeof data.sort === 'function') {\n                    sort = data.sort;\n                }\n                else if (typeof data.sort === 'object' && data.sort !== null) {\n                    sort = data.sort;\n                }\n                else {\n                    throw new TypeError(`DynMapReducer error (DataDynMap): 'sort' attribute is not a function or object.`);\n                }\n            }\n        }\n        // In the case of the main data being an array directly use the array otherwise create a copy.\n        if (dataMap) {\n            this.#map[0] = dataMap;\n        }\n        this.#index = new Indexer(this.#map, this.#updateSubscribers.bind(this));\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\n        this.#derived = new AdapterDerived(this.#map, this.#indexPublicAPI, DynMapReducerDerived);\n        this.#derivedPublicAPI = new DerivedAPI(this.#derived);\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\n        // Add any filters and sort function defined by DataDynMap.\n        if (filters) {\n            this.filters.add(...filters);\n        }\n        if (sort) {\n            this.sort.set(sort);\n        }\n        // Invoke an custom initialization for child classes.\n        this.initialize();\n    }\n    /**\n     * Returns the internal data of this instance. Be careful!\n     *\n     * Note: When a map is set as data then that map is used as the internal data. If any changes are\n     * performed to the data externally do invoke {@link AdapterIndexer.index.update} with `true` to recalculate the\n     * index and notify all subscribers.\n     *\n     * @returns The internal data.\n     */\n    get data() { return this.#map[0]; }\n    /**\n     * @returns Derived public API.\n     */\n    get derived() { return this.#derivedPublicAPI; }\n    /**\n     * @returns The filters adapter.\n     */\n    get filters() { return this.#filters; }\n    /**\n     * @returns Returns the Indexer public API.\n     */\n    get index() { return this.#indexPublicAPI; }\n    /**\n     * Returns whether this instance is destroyed.\n     */\n    get destroyed() { return this.#destroyed; }\n    /**\n     * Gets the main data / items length.\n     *\n     * @returns {number} Main data / items length.\n     */\n    get length() {\n        const map = this.#map[0];\n        return this.#index.active ? this.#indexPublicAPI.length :\n            map ? map.size : 0;\n    }\n    /**\n     * Gets current reversed state.\n     *\n     * @returns {boolean} Reversed state.\n     */\n    get reversed() { return this.#reversed; }\n    /**\n     * @returns The sort adapter.\n     */\n    get sort() { return this.#sort; }\n    /**\n     * Sets reversed state and notifies subscribers.\n     *\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) {\n        if (typeof reversed !== 'boolean') {\n            throw new TypeError(`DynMapReducer.reversed error: 'reversed' is not a boolean.`);\n        }\n        this.#reversed = reversed;\n        this.#index.reversed = reversed;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        if (this.#destroyed) {\n            return;\n        }\n        this.#destroyed = true;\n        this.#derived.destroy();\n        // Set the backing data to null and provide a final update.\n        this.#map = [null];\n        this.index.update(true);\n        // Remove all subscriptions.\n        this.#subscriptions.length = 0;\n        this.#index.destroy();\n        this.#filters.clear();\n        this.#sort.clear();\n    }\n    /**\n     * Provides a callback for custom reducers to initialize any data / custom configuration. This allows\n     * child classes to avoid implementing the constructor.\n     *\n     * @protected\n     */\n    initialize() { }\n    /**\n     * Removes internal data and pushes new data. This does not destroy any initial array set to internal data unless\n     * `replace` is set to true.\n     *\n     * @param data - New data to set to internal data.\n     *\n     * @param replace=false - New data to set to internal data.\n     */\n    setData(data, replace = false) {\n        if (data !== null && !(data instanceof Map)) {\n            throw new TypeError(`DynMapReducer.setData error: 'data' is not iterable.`);\n        }\n        if (typeof replace !== 'boolean') {\n            throw new TypeError(`DynMapReducer.setData error: 'replace' is not a boolean.`);\n        }\n        const map = this.#map[0];\n        // If the array isn't defined or 'replace' is true then replace internal data with new array or create an array\n        // from an iterable.\n        if (!(map instanceof Map) || replace) {\n            this.#map[0] = data instanceof Map ? data : null;\n        }\n        else if (data instanceof Map && map instanceof Map) {\n            // Create a set of all current entry IDs.\n            const removeKeySet = new Set(map.keys());\n            for (const key of data.keys()) {\n                map.set(key, data.get(key));\n                if (removeKeySet.has(key)) {\n                    removeKeySet.delete(key);\n                }\n            }\n            // Remove entries that are no longer in data.\n            for (const key of removeKeySet) {\n                map.delete(key);\n            }\n        }\n        else if (data === null) {\n            this.#map[0] = null;\n        }\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Add a subscriber to this DynMapReducer instance.\n     *\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        this.#subscriptions.push(handler); // add handler to the array of subscribers\n        handler(this); // call handler with current value\n        // Return unsubscribe function.\n        return () => {\n            const index = this.#subscriptions.findIndex((sub) => sub === handler);\n            if (index >= 0) {\n                this.#subscriptions.splice(index, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) {\n            this.#subscriptions[cntr](this);\n        }\n    }\n    /**\n     * Provides an iterator for data stored in DynMapReducer.\n     *\n     * @yields {T}\n     */\n    *[Symbol.iterator]() {\n        const map = this.#map[0];\n        if (this.#destroyed || map === null || map?.size === 0) {\n            return;\n        }\n        if (this.#index.active) {\n            for (const key of this.index) {\n                yield map.get(key);\n            }\n        }\n        else {\n            if (this.reversed) {\n                // TODO: Not efficient due to creating temporary values array.\n                const values = [...map.values()];\n                for (let cntr = values.length; --cntr >= 0;) {\n                    yield values[cntr];\n                }\n            }\n            else {\n                for (const value of map.values()) {\n                    yield value;\n                }\n            }\n        }\n    }\n}\n\n/**\n * Creates a filter function to compare objects by a give property key against a regex test. The returned function\n * is also a writable Svelte store that builds a regex from the stores value.\n *\n * This filter function can be used w/ a dynamic reducer and bound as a store to input elements.\n *\n * @param {string|Iterable<string>}   properties - Property key to compare.\n *\n * @param {object}   [opts] - Optional parameters.\n *\n * @param {boolean}  [opts.caseSensitive=false] - When true regex test is case-sensitive.\n *\n * @param {import('svelte/store').Writable<string>}  [opts.store] - Use the provided store to instead of creating\n *        a default writable store.\n *\n * @returns {((data: object) => boolean) & import('svelte/store').Writable<string>} The query string filter.\n */\nfunction regexObjectQuery(properties, { caseSensitive = false, store } = {})\n{\n   let keyword = '';\n   let regex;\n\n   if (store !== void 0 && !isWritableStore(store))\n   {\n      throw new TypeError(`createObjectQuery error: 'store' is not a writable store.`);\n   }\n\n   const storeKeyword = store ? store : writable(keyword);\n\n   // If an existing store is provided then set initial values.\n   if (store)\n   {\n      const current = get(store);\n\n      if (typeof current === 'string')\n      {\n         keyword = Strings.normalize(current);\n         regex = new RegExp(Strings.escape(keyword), caseSensitive ? '' : 'i');\n      }\n      else\n      {\n         store.set(keyword);\n      }\n   }\n\n   /**\n    * If there is no filter keyword / regex then do not filter otherwise filter based on the regex\n    * created from the search input element.\n    *\n    * @param {object} data - Data object to test against regex.\n    *\n    * @returns {boolean} AnimationStore filter state.\n    */\n   function filterQuery(data)\n   {\n      if (keyword === '' || !regex) { return true; }\n\n      if (isIterable(properties))\n      {\n         for (const property of properties)\n         {\n            if (regex.test(Strings.normalize(data?.[property]))) { return true; }\n         }\n\n         return false;\n      }\n      else\n      {\n         return regex.test(Strings.normalize(data?.[properties]));\n      }\n   }\n\n   /**\n    * Create a custom store that changes when the search keyword changes.\n    *\n    * @param {(string) => void} handler - A callback function that accepts strings.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\n    */\n   filterQuery.subscribe = (handler) =>\n   {\n      return storeKeyword.subscribe(handler);\n   };\n\n   /**\n    * Set\n    *\n    * @param {string}   value - A new value for the keyword / regex test.\n    */\n   filterQuery.set = (value) =>\n   {\n      if (typeof value === 'string')\n      {\n         keyword = Strings.normalize(value);\n         regex = new RegExp(Strings.escape(keyword), caseSensitive ? '' : 'i');\n         storeKeyword.set(keyword);\n      }\n   };\n\n   return filterQuery;\n}\n\nconst filters = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    regexObjectQuery: regexObjectQuery\n});\n\n/**\n * Provides helper functions to create dynamic store driven filters and sort functions for dynamic reducers. The\n * returned functions are also Svelte stores and can be added to a reducer as well as used as a store.\n */\nclass DynReducerHelper\n{\n   /**\n    * Returns the following filter functions:\n    * - regexObjectQuery(property, options); suitable for object reducers matching one or more properties against\n    *   the store value as a regex. Optional parameters to set case sensitivity and passing in an existing store.\n    *\n    * @returns {{\n    *    regexObjectQuery: (properties: string|Iterable<string>, options?: {caseSensitive?: boolean, store?: import('svelte/store').Writable<string>}) => (((data: {}) => boolean) & import('svelte/store').Writable<string>)\n    * }} All available filters.\n    */\n   static get filters() { return filters; }\n}\n\nexport { DynArrayReducer, DynArrayReducerDerived, DynMapReducer, DynMapReducerDerived, DynReducerHelper };\n//# sourceMappingURL=index.js.map\n","import { Hashing } from '@typhonjs-fvtt/runtime/util';\nimport { isPlainObject, isObject, hasPrototype } from '@typhonjs-fvtt/runtime/util/object';\nimport { DynMapReducer } from '@typhonjs-fvtt/runtime/svelte/store/reducer';\n\n/**\n * Provides management of reactive embedded collections.\n *\n * TODO: Consider subscribing to TJSDocument rather than exposing {@link EmbeddedStoreManager.handleDocChange} and\n * {@link EmbeddedStoreManager.handleUpdate}\n */\nclass EmbeddedStoreManager\n{\n   /**\n    * RegExp for detecting CRUD updates for renderContext.\n    *\n    * @type {RegExp}\n    */\n   static #renderContextRegex = /(?<action>create|delete|update)(?<sep>\\.?)(?<name>\\w+)/;\n\n   /**\n    * @type {Map<string, EmbeddedCollectionData<any>>}\n    */\n   #name = new Map();\n\n   /**\n    * @type {foundry.abstract.Document[]}\n    */\n   #document;\n\n   /**\n    * @type {Map<string, string>}\n    */\n   #collectionToDocName = new Map();\n\n   /**\n    * @type {Set<string>}\n    */\n   #embeddedNames = new Set();\n\n   /**\n    * @param {foundry.abstract.Document[]} document - The associated document holder.\n    */\n   constructor(document)\n   {\n      this.#document = document;\n\n      this.handleDocChange();\n\n      Object.seal(this);\n   }\n\n   /**\n    * @template [T=import('./types').NamedDocumentConstructor]\n    *\n    * @param {T} FoundryDoc - A Foundry document class / constructor.\n    *\n    * @param {import('#runtime/svelte/store/reducer').DynOptionsMapCreate<string, T>} options - DynMapReducer\n    *        creation options.\n    *\n    * @returns {import('#runtime/svelte/store/reducer').DynMapReducer<string, T>} DynMapReducer instance.\n    */\n   create(FoundryDoc, options)\n   {\n      const docName = FoundryDoc?.documentName;\n\n      if (typeof docName !== 'string')\n      {\n         throw new TypeError(\n          `EmbeddedStoreManager.create error: 'FoundryDoc' does not have a valid 'documentName' property.`);\n      }\n\n      /** @type {foundry.abstract.Document} */\n      const doc = this.#document[0];\n\n      let collection = null;\n\n      if (doc)\n      {\n         try\n         {\n            collection = doc.getEmbeddedCollection(docName);\n         }\n         catch (err)\n         {\n            console.warn(`EmbeddedStoreManager.create error: No valid embedded collection for: ${docName}`);\n         }\n      }\n\n      let embeddedData;\n\n      if (!this.#name.has(docName))\n      {\n         embeddedData = {\n            collection,\n            stores: new Map()\n         };\n\n         this.#name.set(docName, embeddedData);\n      }\n      else\n      {\n         embeddedData = this.#name.get(docName);\n      }\n\n      /** @type {string} */\n      let name;\n\n      /** @type {import('#runtime/svelte/store/reducer').DynDataOptions<T>} */\n      let rest = {};\n\n      /** @type {import('#runtime/svelte/store/reducer').IDynMapReducerCtor<string, T>} */\n      let ctor;\n\n      if (typeof options === 'string')\n      {\n         name = options;\n         ctor = DynMapReducer;\n      }\n      else if (typeof options === 'function' && hasPrototype(options, DynMapReducer))\n      {\n         ctor = options;\n      }\n      else if (isObject(options))\n      {\n         ({ name, ctor = DynMapReducer, ...rest } = options);\n      }\n      else\n      {\n         throw new TypeError(`EmbeddedStoreManager.create error: 'options' does not conform to allowed parameters.`);\n      }\n\n      if (!hasPrototype(ctor, DynMapReducer))\n      {\n         throw new TypeError(`EmbeddedStoreManager.create error: 'ctor' is not a 'DynMapReducer'.`);\n      }\n\n      name = name ?? ctor?.name;\n\n      if (typeof name !== 'string')\n      {\n         throw new TypeError(`EmbeddedStoreManager.create error: 'name' is not a string.`);\n      }\n\n      if (embeddedData.stores.has(name))\n      {\n         return embeddedData.stores.get(name);\n      }\n      else\n      {\n         const storeOptions = collection ? { data: collection, ...rest } : { ...rest };\n         const store = new ctor(storeOptions);\n         embeddedData.stores.set(name, store);\n         return store;\n      }\n   }\n\n   /**\n    * @template [T=import('./types').NamedDocumentConstructor]\n    *\n    * Destroys and removes embedded collection stores. Invoking this method with no parameters destroys all stores.\n    * Invoking with an embedded name destroys all stores for that particular collection. If you provide an embedded and\n    * store name just that particular store is destroyed and removed.\n    *\n    * @param {T}   [FoundryDoc] - A Foundry document class / constructor.\n    *\n    * @param {string}   [storeName] - Specific store name.\n    *\n    * @returns {boolean} One or more stores destroyed?\n    */\n   destroy(FoundryDoc, storeName)\n   {\n      let count = 0;\n\n      // Destroy all embedded stores\n      if (FoundryDoc === void 0)\n      {\n         for (const embeddedData of this.#name.values())\n         {\n            embeddedData.collection = null;\n            for (const store of embeddedData.stores.values())\n            {\n               store.destroy();\n               count++;\n            }\n         }\n\n         this.#name.clear();\n      }\n      else\n      {\n         const docName = FoundryDoc?.documentName;\n\n         if (typeof docName !== 'string')\n         {\n            throw new TypeError(\n             `EmbeddedStoreManager.delete error: 'FoundryDoc' does not have a valid 'documentName' property.`);\n         }\n\n         if (storeName === void 0)\n         {\n            const embeddedData = this.#name.get(docName);\n            if (embeddedData)\n            {\n               embeddedData.collection = null;\n               for (const store of embeddedData.stores.values())\n               {\n                  store.destroy();\n                  count++;\n               }\n            }\n\n            this.#name.delete(docName);\n         }\n         else if (storeName === 'string')\n         {\n            const embeddedData = this.#name.get(docName);\n            if (embeddedData)\n            {\n               const store = embeddedData.stores.get(storeName);\n               if (store)\n               {\n                  store.destroy();\n                  count++;\n               }\n            }\n         }\n      }\n\n      return count > 0;\n   }\n\n   /**\n    * @template [T=import('./types').NamedDocumentConstructor]\n    *\n    * @param {T} FoundryDoc - A Foundry document class / constructor.\n    *\n    * @param {string} storeName - Name of the embedded collection to retrieve.\n    *\n    * @returns {import('#runtime/svelte/store/reducer').DynMapReducer<string, InstanceType<T>>} DynMapReducer\n    *          instance.\n    */\n   get(FoundryDoc, storeName)\n   {\n      const docName = FoundryDoc?.documentName;\n\n      if (typeof docName !== 'string')\n      {\n         throw new TypeError(\n          `EmbeddedStoreManager.get error: 'FoundryDoc' does not have a valid 'documentName' property.`);\n      }\n\n      if (!this.#name.has(docName)) { return void 0; }\n\n      return this.#name.get(docName).stores.get(storeName);\n   }\n\n   /**\n    * Updates all existing embedded collection stores with the associated embedded collection\n    */\n   handleDocChange()\n   {\n      const doc = this.#document[0];\n\n      if (doc instanceof globalThis.foundry.abstract.Document)\n      {\n         const existingEmbeddedNames = new Set(this.#name.keys());\n\n         /** @type {[string, string][]} */\n         const embeddedNames = Object.entries(doc.constructor?.metadata?.embedded ?? []);\n\n         this.#collectionToDocName.clear();\n\n         // Remove all previously stored embedded name CRUD keys.\n         this.#embeddedNames.clear();\n\n         for (const [docName, collectionName] of embeddedNames)\n         {\n            // Remove processed embedded doc name from existingEmbeddedNames set.\n            existingEmbeddedNames.delete(docName);\n\n            // Update CRUD keys for v10.\n            this.#embeddedNames.add(`create${docName}`);\n            this.#embeddedNames.add(`delete${docName}`);\n            this.#embeddedNames.add(`update${docName}`);\n\n            // Update CRUD keys for v11.\n            this.#embeddedNames.add(`create.${collectionName}`);\n            this.#embeddedNames.add(`delete.${collectionName}`);\n            this.#embeddedNames.add(`update.${collectionName}`);\n\n            // v10 collection to doc name lookup.\n            this.#collectionToDocName.set(docName, docName);\n            this.#collectionToDocName.set(collectionName, docName);\n\n            let collection = null;\n\n            try\n            {\n               // Update any existing stores with the actual collection.\n               collection = doc.getEmbeddedCollection(docName);\n            }\n            catch (err)\n            {\n               console.warn(`EmbeddedStoreManager.handleDocUpdate error: No valid embedded collection for: ${docName}`);\n            }\n\n            // Update EmbeddedData for new collection.\n            const embeddedData = this.#name.get(docName);\n            if (embeddedData)\n            {\n               embeddedData.collection = collection;\n\n               // Update all existing stores.\n               for (const store of embeddedData.stores.values()) { store.setData(collection, true); }\n            }\n         }\n\n         // Update all existing embedded collections with null data that aren't processed above.\n         for (const embeddedName of existingEmbeddedNames)\n         {\n            const embeddedData = this.#name.get(embeddedName);\n            if (embeddedData)\n            {\n               embeddedData.collection = null;\n\n               for (const store of embeddedData.stores.values()) { store.setData(null, true); }\n            }\n         }\n      }\n      else // Reset all embedded reducer stores to null data.\n      {\n         this.#collectionToDocName.clear();\n         this.#embeddedNames.clear();\n\n         for (const embeddedData of this.#name.values())\n         {\n            embeddedData.collection = null;\n\n            for (const store of embeddedData.stores.values()) { store.setData(null, true); }\n         }\n      }\n   }\n\n   /**\n    * Handles updates to embedded stores parsing the render context for valid embedded store types.\n    *\n    * On create, delete, update parse the type being modified then force index updates for the embedded type.\n    *\n    * @param {string}   renderContext - render context update from document.\n    */\n   handleUpdate(renderContext)\n   {\n      if (!this.#embeddedNames.has(renderContext)) { return; }\n\n      const match = EmbeddedStoreManager.#renderContextRegex.exec(renderContext);\n\n      if (match)\n      {\n         const docOrCollectionName = match.groups.name;\n         const embeddedName = this.#collectionToDocName.get(docOrCollectionName);\n\n         if (!this.#name.has(embeddedName)) { return; }\n\n         for (const store of this.#name.get(embeddedName).stores.values())\n         {\n            store.index.update(true);\n         }\n      }\n   }\n}\n\n/**\n * @template T\n *\n * @typedef {object} EmbeddedCollectionData\n *\n * @property {foundry.abstract.Collection} collection -\n *\n * @property {Map<string, import('#runtime/svelte/store/reducer').DynMapReducer<string, T>>} stores -\n */\n\n/**\n * @template [T=globalThis.foundry.abstract.Document]\n *\n * Provides a wrapper implementing the Svelte store / subscriber protocol around any Document / ClientMixinDocument.\n * This makes documents reactive in a Svelte component, but otherwise provides subscriber functionality external to\n * Svelte.\n */\nclass TJSDocument\n{\n   /**\n    * @type {T[]}\n    */\n   #document = [void 0];\n\n   /**\n    * @type {EmbeddedStoreManager}\n    */\n   #embeddedStoreManager;\n\n   /**\n    * @type {import('./types').EmbeddedAPI}\n    */\n   #embeddedAPI;\n\n   /**\n    * @type {string}\n    */\n   #uuidv4;\n\n   /**\n    * @type {TJSDocumentOptions}\n    */\n   #options = { delete: void 0, preDelete: void 0 };\n\n   /**\n    * @type {((value: T, updateOptions?: TJSDocumentUpdateOptions) => void)[]}\n    */\n   #subscriptions = [];\n\n   /**\n    * @type {TJSDocumentUpdateOptions}\n    */\n   #updateOptions;\n\n   /**\n    * @param {T | TJSDocumentOptions}  [document] - Document to wrap or TJSDocumentOptions.\n    *\n    * @param {TJSDocumentOptions}      [options] - TJSDocument options.\n    */\n   constructor(document, options = {})\n   {\n      this.#uuidv4 = `tjs-document-${Hashing.uuidv4()}`;\n\n      if (isPlainObject(document)) // Handle case when only options are passed into ctor.\n      {\n         this.setOptions(document);\n      }\n      else\n      {\n         this.setOptions(options);\n         this.set(document);\n      }\n   }\n\n   /**\n    * @returns {import('./types').EmbeddedAPI} Embedded store manager.\n    */\n   get embedded()\n   {\n      if (!this.#embeddedAPI)\n      {\n         this.#embeddedStoreManager = new EmbeddedStoreManager(this.#document);\n\n         /** @type {import('./types').EmbeddedAPI} */\n         this.#embeddedAPI = {\n            create: (doc, options) => this.#embeddedStoreManager.create(doc, options),\n            destroy: (doc, storeName) => this.#embeddedStoreManager.destroy(doc, storeName),\n            get: (doc, storeName) => this.#embeddedStoreManager.get(doc, storeName)\n         };\n      }\n\n      return this.#embeddedAPI;\n   }\n\n   /**\n    * Returns the options passed on last update.\n    *\n    * @returns {TJSDocumentUpdateOptions} Last update options.\n    */\n   get updateOptions() { return this.#updateOptions ?? {}; }\n\n   /**\n    * Returns the UUID assigned to this store.\n    *\n    * @returns {string} UUID\n    */\n   get uuidv4() { return this.#uuidv4; }\n\n   /**\n    * Handles cleanup when the document is deleted. Invoking any optional delete function set in the constructor.\n    *\n    * @returns {Promise<void>}\n    */\n   async #deleted()\n   {\n      const doc = this.#document[0];\n\n      // Check to see if the document is still in the associated collection to determine if actually deleted.\n      if (doc instanceof globalThis.foundry.abstract.Document && !doc?.collection?.has(doc.id))\n      {\n         delete doc?.apps[this.#uuidv4];\n         this.#setDocument(void 0);\n\n         if (typeof this.#options.preDelete === 'function')\n         {\n            await this.#options.preDelete(doc);\n         }\n\n         this.#updateSubscribers(false, { action: 'delete', data: void 0 });\n\n         if (typeof this.#options.delete === 'function')\n         {\n            await this.#options.delete(doc);\n         }\n\n         this.#updateOptions = void 0;\n      }\n   }\n\n   /**\n    * Completely removes all internal subscribers, any optional delete callback, and unregisters from the\n    * ClientDocumentMixin `apps` tracking object.\n    */\n   destroy()\n   {\n      const doc = this.#document[0];\n\n      if (this.#embeddedStoreManager)\n      {\n         this.#embeddedStoreManager.destroy();\n         this.#embeddedStoreManager = void 0;\n         this.#embeddedAPI = void 0;\n      }\n\n      if (doc instanceof globalThis.foundry.abstract.Document)\n      {\n         delete doc?.apps[this.#uuidv4];\n         this.#setDocument(void 0);\n      }\n\n      this.#options.delete = void 0;\n      this.#subscriptions.length = 0;\n   }\n\n   /**\n    * @param {boolean}  [force] - unused - signature from Foundry render function.\n    *\n    * @param {object}   [options] - Options from render call; will have document update context.\n    */\n   #updateSubscribers(force = false, options = {}) // eslint-disable-line no-unused-vars\n   {\n      this.#updateOptions = options;\n\n      const doc = this.#document[0];\n\n      for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) { this.#subscriptions[cntr](doc, options); }\n\n      if (this.#embeddedStoreManager)\n      {\n         this.#embeddedStoreManager.handleUpdate(options.renderContext);\n      }\n   }\n\n   /**\n    * @returns {T} Current document\n    */\n   get() { return this.#document[0]; }\n\n   /**\n    * Attempts to create a Foundry UUID from standard drop data. This may not work for all systems.\n    *\n    * @param {object}   data - Drop transfer data.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.actor=true] - Accept actor owned documents.\n    *\n    * @param {boolean}  [opts.compendium=true] - Accept compendium documents.\n    *\n    * @param {boolean}  [opts.world=true] - Accept world documents.\n    *\n    * @param {string[]|undefined}   [opts.types] - Require the `data.type` to match entry in `types`.\n    *\n    * @returns {string|undefined} Foundry UUID for drop data.\n    */\n   static getUUIDFromDataTransfer(data, { actor = true, compendium = true, world = true, types = void 0 } = {})\n   {\n      if (!isObject(data)) { return void 0; }\n      if (Array.isArray(types) && !types.includes(data.type)) { return void 0; }\n\n      let uuid = void 0;\n\n      if (typeof data.uuid === 'string') // v10 and above provides a full UUID.\n      {\n         const isCompendium = data.uuid.startsWith('Compendium');\n\n         if (isCompendium && compendium)\n         {\n            uuid = data.uuid;\n         }\n         else if (world)\n         {\n            uuid = data.uuid;\n         }\n      }\n      else // v9 and below parsing.\n      {\n         if (actor && world && data.actorId && data.type)\n         {\n            uuid = `Actor.${data.actorId}.${data.type}.${data.data._id}`;\n         }\n         else if (typeof data.id === 'string') // v9 and below uses `id`\n         {\n            if (compendium && typeof data.pack === 'string')\n            {\n               uuid = `Compendium.${data.pack}.${data.id}`;\n            }\n            else if (world)\n            {\n               uuid = `${data.type}.${data.id}`;\n            }\n         }\n      }\n\n      return uuid;\n   }\n\n\n   /**\n    * @param {T | undefined}  document - New document to set.\n    *\n    * @param {TJSDocumentUpdateOptions}   [options] - New document update options to set.\n    */\n   set(document, options = {})\n   {\n      if (this.#document[0])\n      {\n         delete this.#document[0].apps[this.#uuidv4];\n      }\n\n      if (document !== void 0 && !(document instanceof globalThis.foundry.abstract.Document))\n      {\n         throw new TypeError(`TJSDocument set error: 'document' is not a valid Document or undefined.`);\n      }\n\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocument set error: 'options' is not an object.`);\n      }\n\n      if (document instanceof globalThis.foundry.abstract.Document)\n      {\n         document.apps[this.#uuidv4] = {\n            close: this.#deleted.bind(this),\n            render: this.#updateSubscribers.bind(this)\n         };\n      }\n\n      this.#setDocument(document);\n      this.#updateOptions = options;\n      this.#updateSubscribers();\n   }\n\n   /**\n    *\n    * @param {T | undefined} doc -\n    */\n   #setDocument(doc)\n   {\n      this.#document[0] = doc;\n\n      if (this.#embeddedStoreManager) { this.#embeddedStoreManager.handleDocChange(); }\n   }\n\n   /**\n    * Potentially sets new document from data transfer object.\n    *\n    * @param {object}   data - Document transfer data.\n    *\n    * @param {{ actor?: boolean, compendium?: boolean, world?: boolean, types?: string[] } & TJSDocumentOptions}   [options] - Optional\n    *        parameters.\n    *\n    * @returns {Promise<boolean>} Returns true if new document set from data transfer blob.\n    */\n   async setFromDataTransfer(data, options)\n   {\n      return this.setFromUUID(TJSDocument.getUUIDFromDataTransfer(data, options), options);\n   }\n\n   /**\n    * Sets the document by Foundry UUID performing a lookup and setting the document if found.\n    *\n    * @param {string}   uuid - A Foundry UUID to lookup.\n    *\n    * @param {TJSDocumentOptions}   [options] - New document update options to set.\n    *\n    * @returns {Promise<boolean>} True if successfully set document from UUID.\n    */\n   async setFromUUID(uuid, options = {})\n   {\n      if (typeof uuid !== 'string' || uuid.length === 0) { return false; }\n\n      try\n      {\n         const doc = await globalThis.fromUuid(uuid);\n\n         if (doc)\n         {\n            this.set(doc, options);\n            return true;\n         }\n      }\n      catch (err) { /**/ }\n\n      return false;\n   }\n\n   /**\n    * Sets options for this document wrapper / store.\n    *\n    * @param {TJSDocumentOptions}   options - Options for TJSDocument.\n    */\n   setOptions(options)\n   {\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocument error: 'options' is not a plain object.`);\n      }\n\n      // Verify valid values -------------\n\n      if (options.delete !== void 0 && typeof options.delete !== 'function')\n      {\n         throw new TypeError(`TJSDocument error: 'delete' attribute in options is not a function.`);\n      }\n\n      if (options.preDelete !== void 0 && typeof options.preDelete !== 'function')\n      {\n         throw new TypeError(`TJSDocument error: 'preDelete' attribute in options is not a function.`);\n      }\n\n      // Set any valid values -------------\n\n      if (options.delete === void 0 || typeof options.delete === 'function')\n      {\n         this.#options.delete = options.delete;\n      }\n\n      if (options.preDelete === void 0 || typeof options.preDelete === 'function')\n      {\n         this.#options.preDelete = options.preDelete;\n      }\n   }\n\n   /**\n    * @param {(value: T, updateOptions?: TJSDocumentUpdateOptions) => void} handler - Callback function that is\n    * invoked on update / changes.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler);           // Add handler to the array of subscribers.\n\n      const updateOptions = { action: 'subscribe', data: void 0 };\n\n      handler(this.#document[0], updateOptions);      // Call handler with current value and update options.\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n}\n\n/**\n * @typedef {object} TJSDocumentOptions\n *\n * @property {(doc: globalThis.foundry.abstract.Document) => void} [delete] Optional post delete function to invoke when\n * document is deleted _after_ subscribers have been notified.\n *\n * @property {(doc: globalThis.foundry.abstract.Document) => void} [preDelete] Optional pre delete function to invoke\n * when document is deleted _before_ subscribers are notified.\n */\n\n/**\n * @typedef TJSDocumentUpdateOptions Provides data regarding the latest document change.\n *\n * @property {string}   [action] The update action. Useful for filtering.\n *\n * @property {string}   [renderContext] The update action. Useful for filtering.\n *\n * @property {object[]|string[]} [data] Foundry data associated with document changes.\n */\n\n/**\n * Provides a wrapper implementing the Svelte store / subscriber protocol around any DocumentCollection. This makes\n * document collections reactive in a Svelte component, but otherwise provides subscriber functionality external to\n * Svelte.\n *\n * @template [T=DocumentCollection]\n */\nclass TJSDocumentCollection\n{\n   #collection;\n   #collectionCallback;\n   #uuid;\n\n   /**\n    * @type {TJSDocumentCollectionOptions}\n    */\n   #options = { delete: void 0, preDelete: void 0 };\n\n   /**\n    * @type {((value: T, updateOptions?: TJSDocumentCollectionUpdateOptions<T>) => void)[]}\n    */\n   #subscriptions = [];\n\n   /**\n    * @type {TJSDocumentCollectionUpdateOptions<T>}\n    */\n   #updateOptions;\n\n   /**\n    * @param {T | TJSDocumentCollectionOptions}   [collection] - Collection to wrap or TJSDocumentCollectionOptions.\n    *\n    * @param {TJSDocumentCollectionOptions}     [options] - TJSDocumentCollection options.\n    */\n   constructor(collection, options = {})\n   {\n      this.#uuid = `tjs-collection-${Hashing.uuidv4()}`;\n\n      if (isPlainObject(collection)) // Handle case when only options are passed into ctor.\n      {\n         this.setOptions(collection);\n      }\n      else\n      {\n         this.setOptions(options);\n         this.set(collection);\n      }\n   }\n\n   /**\n    * Returns the options passed on last update.\n    *\n    * @returns {TJSDocumentCollectionUpdateOptions<T>} Last update options.\n    */\n   get updateOptions() { return this.#updateOptions ?? {}; }\n\n   /**\n    * Returns the UUID assigned to this store.\n    *\n    * @returns {string} UUID\n    */\n   get uuid() { return this.#uuid; }\n\n   /**\n    * Handles cleanup when the collection is deleted. Invoking any optional delete function set in the constructor.\n    *\n    * @returns {Promise<void>}\n    */\n   async #deleted()\n   {\n      const collection = this.#collection;\n\n      if (collection instanceof DocumentCollection)\n      {\n         const index = collection?.apps?.findIndex((sub) => sub === this.#collectionCallback);\n         if (index >= 0) { collection?.apps?.splice(index, 1); }\n\n         this.#collection = void 0;\n      }\n\n      if (typeof this.#options.preDelete === 'function')\n      {\n         await this.#options.preDelete(collection);\n      }\n\n      this.#notify(false, { action: 'delete', documentType: collection.documentName, documents: [], data: [] });\n\n      if (typeof this.#options.delete === 'function')\n      {\n         await this.#options.delete(collection);\n      }\n\n      this.#updateOptions = void 0;\n   }\n\n   /**\n    * Completely removes all internal subscribers, any optional delete callback, and unregisters from the\n    * DocumentCollection `apps` tracking array.\n    */\n   destroy()\n   {\n      const collection = this.#collection;\n\n      if (collection instanceof DocumentCollection)\n      {\n         const index = collection?.apps?.findIndex((sub) => sub === this.#collectionCallback);\n         if (index >= 0) { collection?.apps?.splice(index, 1); }\n\n         this.#collection = void 0;\n      }\n\n      this.#options.delete = void 0;\n      this.#subscriptions.length = 0;\n   }\n\n   /**\n    * @param {boolean}  [force] - unused - signature from Foundry render function.\n    *\n    * @param {object}   [options] - Options from render call; will have collection update context.\n    */\n   #notify(force = false, options = {}) // eslint-disable-line no-unused-vars\n   {\n      this.#updateOptions = options;\n\n      // Subscriptions are stored locally as on the browser Babel is still used for private class fields / Babel\n      // support until 2023. IE not doing this will require several extra method calls otherwise.\n      const subscriptions = this.#subscriptions;\n      const collection = this.#collection;\n\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](collection, options); }\n   }\n\n   /**\n    * @returns {T} Current collection\n    */\n   get() { return this.#collection; }\n\n   /**\n    * @param {T | undefined}  collection - New collection to set.\n    *\n    * @param {object}         [options] - New collection update options to set.\n    */\n   set(collection, options = {})\n   {\n      if (this.#collection)\n      {\n         const index = this.#collection.apps.findIndex((sub) => sub === this.#collectionCallback);\n         if (index >= 0) { this.#collection.apps.splice(index, 1); }\n\n         this.#collectionCallback = void 0;\n      }\n\n      if (collection !== void 0 && !(collection instanceof DocumentCollection))\n      {\n         throw new TypeError(\n          `TJSDocumentCollection set error: 'collection' is not a valid DocumentCollection or undefined.`);\n      }\n\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocument set error: 'options' is not an object.`);\n      }\n\n      if (collection instanceof DocumentCollection)\n      {\n         this.#collectionCallback = {\n            close: this.#deleted.bind(this),\n            render: this.#notify.bind(this)\n         };\n\n         collection?.apps?.push(this.#collectionCallback);\n      }\n\n      this.#collection = collection;\n      this.#updateOptions = options;\n      this.#notify();\n   }\n\n   /**\n    * Sets options for this collection wrapper / store.\n    *\n    * @param {TJSDocumentCollectionOptions}   options - Options for TJSDocumentCollection.\n    */\n   setOptions(options)\n   {\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocumentCollection error: 'options' is not an object.`);\n      }\n\n      // Verify valid values -------------\n\n      if (options.delete !== void 0 && typeof options.delete !== 'function')\n      {\n         throw new TypeError(`TJSDocumentCollection error: 'delete' attribute in options is not a function.`);\n      }\n\n      if (options.preDelete !== void 0 && typeof options.preDelete !== 'function')\n      {\n         throw new TypeError(`TJSDocumentCollection error: 'preDelete' attribute in options is not a function.`);\n      }\n\n      // Set any valid values -------------\n\n      if (options.delete === void 0 || typeof options.delete === 'function')\n      {\n         this.#options.delete = options.delete;\n      }\n\n      if (options.preDelete === void 0 || typeof options.preDelete === 'function')\n      {\n         this.#options.preDelete = options.preDelete;\n      }\n   }\n\n   /**\n    * @param {(value: T, updateOptions?: TJSDocumentCollectionUpdateOptions<T>) => void} handler - Callback function\n    * that is invoked on update / changes.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler);              // Add handler to the array of subscribers.\n\n      const collection = this.#collection;\n\n      const documentType = collection?.documentName ?? void 0;\n\n      const updateOptions = { action: 'subscribe', documentType, documents: [], data: [] };\n\n      handler(collection, updateOptions);  // Call handler with current value and update options.\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n}\n\nexport { TJSDocument, TJSDocumentCollection };\n//# sourceMappingURL=index.js.map\n","import { TJSDocument } from '#runtime/svelte/store/fvtt/document';\nimport { resolveDotpath } from '../../util/paths';\n\n/**\n * Provides a basic action to update a Foundry document on change events.\n *\n * @param {HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement} node - Target input element.\n *\n * @param {{ doc: TJSDocument, path: string }}  options - Options\n *\n * @param initial_options\n *\n * @returns {import('svelte/action').ActionReturn} Action lifecycle methods.\n */\nexport function updateDoc(node, initial_options = {}) {\n    // Validate our node\n    if (!(node instanceof HTMLInputElement) && !(node instanceof HTMLSelectElement) &&\n        !(node instanceof HTMLTextAreaElement)) {\n        throw new TypeError(\n            `updateDoc error: 'node' must be an instance of HTMLInputElement, HTMLSelectElement, or HTMLTextAreaElement.`);\n    }\n\n    // Setup updateable options\n    let doc;\n    let path; \n    let current_doc_val;\n    let unsubscribe;\n    /**\n     *\n     * @param new_options\n     */\n    function setOptions(new_options) {\n        // Clear old if needed\n        if (unsubscribe) {\nunsubscribe();\n}\n\n        doc = new_options.doc;\n        path = new_options.path;\n\n        // Validate\n        if (!(doc instanceof TJSDocument)) {\n            throw new TypeError(`updateDoc error: 'doc' must be an instance of TJSDocument.`);\n        }\n\n        if (typeof path !== 'string') {\n            throw new TypeError(`updateDoc error: 'path' must be a string.`);\n        }\n\n        unsubscribe = doc.subscribe(onDocChange);\n    }\n    setOptions(initial_options);\n    \n\n    /**\n     * Updates `doc` w/ current focused state.\n     *\n     * @param {Event}  ev - Change event.\n     */\n    function onChange(ev) {\n        const document = doc.get();\n        if (!document) {\n            console.warn('updateDoc.onChange warning: no associated document on change.');\n            return;\n        }\n        let value = ev.target.type === \"checkbox\" ? ev.target.checked : ev.target.value;\n\n        document.update({ [path]: value });\n    }\n\n    /**\n     * @param {foundry.abstract.Document} changeDoc - Foundry document changing.\n     */\n    function onDocChange(changeDoc) {\n        if (!changeDoc) {\n            console.warn('updateDoc.onDocChange warning: no associated document on change.');\n            return;\n        }\n\n        const new_val = resolveDotpath(changeDoc, path);\n        if (current_doc_val !== new_val) {\n            current_doc_val = new_val;\n            if (typeof current_doc_val === \"boolean\") {\n                node.checked = new_val;\n            } else {\n                node.value = current_doc_val;\n            }\n        }\n    }\n\n    /**\n     * Activate listeners.\n     */\n    function activateListeners() {\n        node.addEventListener('change', onChange);\n    }\n\n    /**\n     * Remove listeners.\n     */\n    function removeListeners() {\n        node.removeEventListener('change', onChange);\n    }\n\n    activateListeners();\n\n    return {\n        // Currently not implemented, but this is where you'd update the options for this action.\n        // IE changing the TJSDocument or path field.\n        update: setOptions,\n\n        destroy: () => {\n            removeListeners();\n            unsubscribe();\n        }\n    };\n}","<script>\n    /** @type {Array<{label: string, key: string}>} */\n    export let tabs;\n\n    /** @type {boolean} */\n    export let horizontal = true;\n\n    // Currently selected tab. Can be controlled programatically\n    export let selected;\n</script>\n\n<div class=\"icon-tabs\" class:horizontal {...$$restProps}>\n    {#each tabs as tab}\n        <div class=\"icon-tab\" class:active={selected == tab.key} on:click={() => (selected = tab.key)}>\n            {tab.label}\n        </div>\n    {/each}\n</div>\n\n<style lang=\"scss\">\n    .icon-tabs {\n        clip-path: var(--inset-box-clip);\n        display: flex;\n        flex-direction: column;\n        flex-wrap: nowrap;\n        justify-content: flex-start;\n        min-height: max-content;\n        align-items: center;\n    }\n\n    .horizontal {\n        flex-direction: row;\n    }\n\n    .icon-tab {\n        clip-path: var(--inset-box-clip);\n        margin: 5px;\n        padding: 5px;\n        text-align: center;\n        width: calc(100% - 20px);\n        cursor: pointer;\n\n        background-color: var(--tab-inactive-background);\n        color: var(--tab-inactive-text);\n\n        &.active {\n            background-color: var(--tab-active-background);\n            color: var(--tab-active-text);\n        }\n    }\n</style>\n","<script>\n    import { getContext } from \"svelte\";\n\n    let doc = getContext(\"tjs_doc\");\n\n    function onEdit(event) {\n        const fp = new FilePicker({\n            current: $doc.img,\n            type: \"image\",\n            displayMode: \"tiles\",\n            callback: (path) => {\n                $doc.update({ img: path });\n            },\n            top: this.y,\n            left: this.x + 100,\n        });\n        return fp.browse();\n    }\n</script>\n\n<img\n    on:click={onEdit}\n    src={$doc.img}\n    title={$doc.name}\n    {...$$restProps}\n    height=\"100\"\n    width=\"100\"\n    alt=\"Character Portrait\"\n/>\n","import { IconActor } from \"../documents/actor\";\nimport { IconItem } from \"../documents/item\";\n\n// //////////// HERE BE DRAGON DROPS ////////////\n// Very useful:\n// https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#drop\n// more raw api data:\n// https://developer.mozilla.org/en-US/docs/Web/API/Document/drag_event\n\n/**\n * @typedef {object} ResolvedItemDrop\n *\n * @property {\"Item\"} type Type is an Item\n *\n * @property {IconItem} document Resolved Document\n */\n\n/**\n * @typedef {object} ResolvedActorDrop\n *\n * @property {\"Actor\"} type Type is an Actor\n *\n * @property {IconActor} document Resolved Document\n */\n\n/**\n * @typedef {object} ResolvedMacroDrop\n *\n * @property {\"Macro\"} type Type is a macro\n *\n * @property {Macro} document Resolved Document\n */\n\n/**\n * @typedef {ResolvedItemDrop | ResolvedActorDrop | ResolvedMacroDrop} ResolvedDrop\n * A union type of all the resolved drops we could have\n */\n\n\n/**\n * @typedef {object} FoundryDropData Dragged data as generated by foundry\n *\n * @property {\"Actor\" | \"Item\" | \"JournalEntry\" | \"Macro\" | \"Scene\"} type The type of dragged object\n *\n * @property {string} uuid The dragged document's uuid\n */\n\n/** \n * Safely parse a JSON string, returning null on failure instead of throwing an exception\n *\n * @param {string} str The string to parse\n *\n * @returns {any} Parsed json or null\n */\nexport function safeParseJSON(str) {\n    try {\n        let result = JSON.parse(str);\n        return result;\n    } catch {\n        return null;\n    }\n}\n\n// Resolves a native foundry actor/item drop event datatransfer to the actual contained actor/item/journal\n// This can be annoying, so we made it a dedicated method\n// Input is either a stringified JSON dropData or a uuid\n\n/**\n * Converts a foundry drop into our resolved drop\n * \n * @param {string | FoundryDropData} drop The raw drop data, either as string uuid, a Foundry Drop, or JSON of a Foundry drop\n *\n * @returns {Promise<ResolvedDrop | null>} Promise yielding the resolved drop data, or null on failure\n */\nexport async function resolveNativeDrop(drop) {\n    // Get dropped data\n    let parsed_drop = drop;\n    if (typeof drop == \"string\") {\n        parsed_drop = safeParseJSON(drop);\n    }\n    if (parsed_drop.uuid) {\nparsed_drop = parsed_drop.uuid;\n}\n    if (!parsed_drop && typeof drop == \"string\") {\n        // Either wasn't an object, or failed to parse to be one from a stringAttempt uuid route\n        let document = await fromUuid(drop);\n        if (!document) {\n            return null;\n        }\n        if (document instanceof Actor) {\n            return {\n                type: \"Actor\",\n                document,\n            };\n        } else if (document instanceof Item) {\n            return {\n                type: \"Item\",\n                document,\n            };\n        } else if (document instanceof Macro) {\n            return {\n                type: \"Macro\",\n                document,\n            };\n        } else if (document instanceof JournalEntry) {\n            return {\n                type: \"JournalEntry\",\n                document,\n            };\n        }\n    } \n    return null;\n}\n\n// A basic cache suitable for native drop lookups - a common task\n// export type DragFetcherCache = FetcherCache<string | FoundryDropData, ResolvedDropData | null>;\n// export function dragResolverCache(): DragFetcherCache {\n// return new FetcherCache(resolve_native_drop);\n// }\n\n// GlobalDragState \n/** \n * Provides a resolved document of whatever is being dragged, if a document can be resolved\n *\n * @type {ResolvedDrop | null} \n */\nexport let GlobalDragPreview = null;\n\n/**\n * Generates a CSS class for the given document type, \n * to be affixed to the document body\n *\n * @param {string} for_type The document subtype that is being dragged\n *\n * @returns {string} An appropriately named css class\n */\nfunction draggingClass(for_type) {\n    return `dragging-${for_type}`;\n}\n\n/**\n * Sets the GlobalDragPreview constant, and manages global classes appropriately for it\n *\n * @param {IconActor | IconItem | null} to What we are currently dragging, if anything\n */\nfunction setGlobalDrag(to) {\n    console.log(\"Draggin: \", to);\n    // Clear if necessary\n    if (GlobalDragPreview?.type == \"Actor\" || GlobalDragPreview?.type == \"Item\") {\n        $(\"body\").removeClass(draggingClass(GlobalDragPreview.document.type));\n    }\n\n    // Store the draggee\n    if (to instanceof Actor) {\n        GlobalDragPreview = {\n            document: to,\n            type: \"Actor\",\n        };\n    } else if (to instanceof Item) {\n        GlobalDragPreview = {\n            document: to,\n            type: \"Item\",\n        };\n    } else if (to instanceof Macro) {\n        GlobalDragPreview = {\n            document: to,\n            type: \"Macro\",\n        };\n    } else if (to instanceof Scene) {\n        GlobalDragPreview = {\n            document: to,\n            type: \"Scene\",\n        };\n    } else if (to == null) {\n        GlobalDragPreview = null;\n        return;\n    }\n\n    // Add an appropriate class\n    if (GlobalDragPreview?.type == \"Actor\" || GlobalDragPreview?.type == \"Item\") {\n        $(\"body\").addClass(draggingClass(GlobalDragPreview.document.type));\n    }\n}\n\n// Setup global drag resolution\n/**\n *\n */\nexport function applyGlobalDragListeners() {\n    let body = document.getElementsByTagName(\"body\")[0];\n    let cancel_token = { canceled: false };\n\n    // Capture when we start dragging anything anywhere - this covers regrefs and native drags\n    body.addEventListener(\n        \"dragstart\",\n        (evt) => {\n            // Attempt to recover the item\n            let target = evt.target;\n            let uuid = \"\";\n            if (target?.dataset?.uuid) {\n                // Is our set uuid\n                uuid = target.dataset.uuid;\n            } else if (target?.dataset?.documentId) {\n                // Is a foundry sidebar or compendium drag\n                let sbt = $(target).parents(\".sidebar-tab\")[0];\n                if (sbt?.dataset?.tab) {\n                    // Can deduce type based on the tab\n                    let tab = sbt.dataset.tab;\n                    uuid = `${tab.charAt(0).capitalize()}${tab.slice(1, tab.length - 1)}.${target.dataset.documentId}`;\n                } else {\n                    let cd = $(target).parents(\".compendium.directory\")[0];\n                    if (cd) {\n                        // Can deduce pack based on the directory\n                        let pack = cd.dataset.pack;\n                        uuid = `Compendium.${pack}.${target.dataset.documentId}`;\n                    }\n                }\n            } else {\n                return; // Not a uuid\n            }\n\n            // TODO: handle journals, macros, scenes\n\n            // May or may not have a uuid by now\n            // If we do, tell it to try setting global drag\n            let cancel_token_copy = cancel_token;\n            fromUuid(uuid).then((doc) => {\n                if (!cancel_token_copy.canceled) {\n                    setGlobalDrag(doc);\n                }\n            });\n        },\n        {\n            capture: true, // We don't want people preventing us from seeing this!\n            passive: true, // Improves performance. We only want to watch\n        }\n    );\n\n    // Clear whenever we stop dragging anywhere. Have to handle both drag end and drop.\n    const endListener = () => {\n        setGlobalDrag(null);\n        cancel_token.canceled = true;\n        cancel_token = { canceled: false };\n    };\n    body.addEventListener(\"dragend\", endListener, {\n        capture: true, // Same as above\n        passive: true,\n    });\n    body.addEventListener(\"drop\", () => setTimeout(endListener, 100), {\n        capture: true, // Same as above\n        passive: true,\n    });\n}\n","/**\n * Utility function for \"extending\" an action\n * \n * @param {object} action - Base Action\n *\n * @param {object} options - Options object\n * \n * @param {TJSDocument<IconActor>} options.actor - Actor we are dropping items to\n * \n * @param {Array<string>} options.types - Which item types are accepted\n *\n * @param update_logic\n *\n * @returns {import('svelte/action').ActionReturn} Action lifecycle methods.\n */\nexport function augmentAction(action, update_logic) {\n} \n\n\n/**\n * Fancy wrapper that handles initialization / cleanup of listeners, etc.\n * Can wrap another action\n * \n * @param {Record<string, ((object, Event) => any)>} listeners - Maps a callback name (e.g. \"click\") to an augmented event listener. \n *                                                               Listeners will be provided (options, event), where options is the current options value,\n *                                                               and event is the event they would normally receive.\n *                                                               These are not updated in future calls\n *\n * @param {((object) => void)} [options_validator=null] - A special logic block for validating options\n */\nexport function easyActionBuilder(listeners, options_validator = null) {\n    // Create our actual function body\n    /** @type {import('svelte/action').Action<HTMLElement, object>} */\n    const action = (node, initial_options) => {\n        // Make our re-assignable options alias, and validate it if necessary\n        options_validator?.(initial_options);\n        let current_options = initial_options;\n\n        // Instantiate + bind our listeners\n        let mapped_listeners = {};\n        for (let [k, v] of Object.entries(listeners)) {\n            mapped_listeners[k] = (event) => v(current_options, event);\n            node.addEventListener(k, mapped_listeners[k]);\n        }\n\n        // Create + return our teardown block\n        return {\n            update: (new_options) => {\n                options_validator?.(new_options);\n                current_options = new_options;\n            },\n            destroy: () => {\n                for (let [k, v] of Object.entries(listeners)) {\n                    node.removeEventListener(k, v);\n                }\n            }\n        };\n    };\n    return action;\n}\n\n\n// Used for when we need uuids in a dic\n/**\n *\n * @param obj\n */\nexport function simpleSlugifyObject(obj) {\n    return Object.fromEntries(Object.entries(obj).map(([k, v]) => [k.replaceAll(\".\", \"_\"), v]));\n}\n\n/**\n *\n * @param obj\n */\nexport function simpleUnslugifyObject(obj) {\n    return Object.fromEntries(Object.entries(obj).map(([k, v]) => [k.replaceAll(\"_\", \".\"), v]));\n}","import { GlobalDragPreview, resolveNativeDrop } from '../../util/dragdrop';\nimport { easyActionBuilder } from './util';\n\n/**\n * @callback DropHandler A callback for handling document drops\n *\n * @param {ResolvedDrop} doc The dropped document\n *\n * @param {HTMLEvent} dest Where it was dropped\n *\n * @param {DropEvent} event Event for where it being dropped\n */\n\n/**\n * @callback DropPredicate A callback for determining whether document drop is allowed\n *\n * @param {ResolvedDrop} doc The potentially dropped document\n *\n * @param {DropEvent | DragOverEvent | DragEnterEvent | DragLeaveEvent} event Event for it hovering ominously / perhaps being dropped\n */\n\n/**\n * @callback HoverHandler A callback for doing temporary ui changes when hovering over a valid drop target.\n *                        Somewhat unreliably triggered in nested situations!\n *\n * @param {ResolvedDrop} doc The potentially dropped document\n *\n * @param {HTMLElement} dest Where it would be dropped\n *\n * @param {DropEvent | DragOverEvent | DragEnterEvent | DragLeaveEvent} event Event for it hovering ominously / perhaps being dropped\n */\n\n/**\n * Svelte action to enable dropability on the specified node, \n * using the global drag state as a lookup to allow synchronous doc handling.\n * \n * Designed more as a basis for other actions\n *\n * @param {HTMLElement} node - Target element\n *\n * @param {DropHandler} options.handle - Callback provided with the data for the drag, the dest of the drag, as well as the dragover event.\n *                                       It is called once, and only on a successful drop\n *                                       Note that it is guaranteed to have passed the drop function if one was provided\n *\n * @param {DropPredicate} [options.allow=null] Optional callback provided with the dest of the drag, as well as the dragover event.\n *      It determines if the dest is a valid drop target\n * \n * @param {DropPredicate} [options.hover_handler=null] Optional callback provided with the dest of the drag, as well as the dragover event.\n *      It determines if the dest is a valid drop target\n */\nexport const dropDocs = easyActionBuilder({\n    dragover: (options, event) => {\n        // Must return false & prevent default to allow dropping\n        // Get/check data\n        if (!GlobalDragPreview) {\n            return true;\n        } // Blanket allow drops if we don't know whats dragging\n\n        // If permitted, override behavior to allow drops\n        if (options.allow_drop?.(GlobalDragPreview, this, event) ?? true) {\n            event.preventDefault();\n            return false;\n        }\n    },\n    dragenter: (options, event) => {\n        // Must return false & prevent default to allow dropping\n        if (!GlobalDragPreview) {\n            // Blanket allow drops if we don't know whats dragging\n            return true;\n        } \n        \n        // Check if we can drop. If no handler, this is always true (so long as GlobalDragPreview exists)\n        if (options.allow?.(GlobalDragPreview, event) ?? true) {\n            // curr_options.hover_handler?.(GlobalDragPreview, node, true);\n            // Override behavior to allow dropping here\n            event.preventDefault();\n            return false;\n        }\n\n        return true; // Prevents dropping\n    },\n    drop: (options, event) => {\n        // Check dropability just to be safe - some event may have trickled down here somehow\n        if (!event.dataTransfer?.getData(\"text/plain\")) {\n            return;\n        }\n\n        if (GlobalDragPreview) {\n            // We can proceed synchronously\n            if (options.allow?.(GlobalDragPreview, event) ?? true) {\n                // It's a good drop - prevent propagation and handle\n                event.stopImmediatePropagation();\n                event.preventDefault();\n                options.handle?.(GlobalDragPreview, event);\n            }\n        } else {\n            // Unfortunately, if global drag preview isn't set then it is necessary for us to aggressively cancel events to prevent possible duplicate drop handling\n            event.stopImmediatePropagation();\n            event.preventDefault();\n            let data = event.dataTransfer?.getData(\"text/plain\") ?? event.originalEvent.dataTransfer.getData(\"text/plain\");\n            resolveNativeDrop(data).then((rdd) => {\n                if (rdd && (options.allow?.(rdd, event) ?? true)) {\n                    options.handle?.(rdd, event);\n                }\n            });\n        }\n    },\n});\n\n","/**\n * @typedef {object} TransformContext\n *\n * @property {IconActor} [actor] The relevant actor\n */\n\nimport { localize } from \"./misc\";\n\n\nclass Transformer {\n    /**\n     * \n     * @param {TransformContext} ctx  Meta information\n     *\n     * @param {IcoNode} node Tagged/Text node to transform\n     *\n     * @returns {Array<IcoNode>} [] to consume, [identity] to not change, or any new value\n     */\n    apply(ctx, node) {\n        let result = this.apply_inner(ctx, node);\n        return result.filter((r) => r).map((t) => t instanceof IcoNode ? t : new IcoNode({ text: t }));\n    }\n\n    apply_inner(ctx, node) {\n        return [];\n    }\n}\n\n\nclass RegexTransformer extends Transformer {\n    /**\n     * A utility for transforming possibly many instances of a regular expression\n     * in a body of text into an arbitrary other sequence of data.\n     * \n     * @param {RegExp} regex \n     *\n     * @param {((ctx: TransformContext, groups: string[]) => Array<IcoNode | string>)} splitter Our split-handler\n     */\n    constructor(regex, splitter) {\n        super();\n        this.regex = regex;\n        this.num_groups = (new RegExp(`${regex.toString()}|`)).exec('').length - 1;\n        if (this.num_groups < 1) {\n            throw new TypeError(\"Transforms must at least have one capturing group\");\n        }\n        this.splitter = splitter;\n    }\n\n    apply_inner(ctx, node) {\n        if (node.tag) {\n            return [node];\n        }\n\n        let split = node.text.split(this.regex);\n        let result = [];\n        for (let base = 0; base < split.length; base += this.num_groups + 1) {\n            // Add the normal split result\n            result.push(split[base]);\n            // If there is more to grab, then apply func and splat that into the array\n            if (base + this.num_groups < split.length) {\n                let s = split.slice(base + 1, base + this.num_groups + 1);\n                let applied = this.splitter(ctx, s);\n                result.push(...applied);\n            }\n        }\n        return result;\n    }\n}\n\n\n/**\n * @typedef {object} NodeData\n *\n * @property {string} [options.text] The base text\n *\n * @property {string} [options.tooltip] What shows on hover\n *\n * @property {object} [options.dragdata] What should be dragged, if anything\n *\n * @property {object} [options.roll] A JSON serialized roll\n *\n * @property {object[]} [options.children] Child nodes to create\n */\n\n\n/**\n * A pseudo-html node\n */\nexport class IcoNode {\n    /**\n     * @param {NodeData} options \n     */\n    constructor(options = {}) {\n        /**\n         * HTML tag if applicable\n         *\n         * @type {string | undefined}\n         */\n        this.tag = options.tag;\n        /**\n         * Text if applicable. Lower priority than tag\n         *\n         * @type {string | undefined}\n         */\n        this.text = options.text;\n        /**\n         * HTML Element attributes if applicable. Only valid if tag exists\n         *\n         * @type {Record<string, string> | undefined}\n         */\n        this.attributes = options.attributes; // Can be undefined. Only used if tag present\n        /**\n         * Child nodes if applicable. Only valid if tag exists\n         *\n         * @type {IcoNode[] | undefined}\n         */\n        this.children = options.children?.map((t) => t instanceof IcoNode ? t : new IcoNode(t)); // Only used if tag present\n\n        // Misc attributes\n        /**\n         * Tooltip to add to a tag, if this is a tag\n         *\n         * @type {string | undefined}\n         */\n        this.tooltip = options.tooltip;\n        /**\n         * What this item should be dragged as\n         *\n         * @type {any | undefined}\n         */\n        this.dragdata = options.dragdata;\n        /**\n         * An embedded roll\n         *\n         * @type {any | undefined}\n         */\n        this.roll = options.roll ? Roll.fromData(options.roll) : undefined;\n        /**\n         * A roll formula\n         *\n         * @type {any | undefined}\n         */\n        this.formula = options.formula;\n    }\n\n    /** \n     * Back into an object \n     * \n     * @returns {NodeData} In object form\n     */\n    toObject() {\n        return {\n            tag: this.tag,\n            text: this.text,\n            attributes: this.attributes,\n            children: this.children?.map((t) => t.toObject()),\n\n            tooltip: this.tooltip,\n            dragdata: this.dragdata,\n            roll: this.roll?.toJSON(),\n            formula: this.formula,\n        };\n    }\n\n    /**\n     * Gets the string content of this node\n     *\n     * @returns {string}\n     */\n    innerText() {\n        let result = this.text ?? \"\";\n        for (let child of this.children || []) {\n            result += child.innerText();\n        }\n        return result;\n    }\n}\n\n/**\n * Initializes our transformer pipeline once all translations are available\n */\nexport function setupTransformers() {\n    // Do some stuff generic from our localizations\n    let definitions = {};\n    for (let [k, v] of [\n        ...Object.entries(game.i18n.translations.ICON.Glossary),\n        ...Object.entries(game.i18n.translations.ICON.Statuses),\n        ...Object.entries(game.i18n.translations.ICON.Effects),\n    ]) {\n        // Un-camel-case it\n        let name = k.replaceAll(/([a-z])([A-Z])/g, \"$1 $2\");\n\n        // Exclude ones that have bespoke logic\n        const exclusions = [\"fray\", \"gamble\"];\n        if (exclusions.includes(name.toLowerCase())) {\n            continue;\n        }\n\n        // Assign to definitions\n        definitions[name] = v;\n    }\n\n    // Build a transformer for each definition\n    for (let [k, v] of Object.entries(definitions)) {\n        StaticTransformers.push(new RegexTransformer(\n            new RegExp(`(${k})`, \"i\"),\n            (_c, [text]) => [new IcoNode({\n                tag: \"span\",\n                tooltip: v,\n                children: [\n                    new IcoNode({\n                        text\n                    })\n                ]\n            })]\n        ));\n    }\n\n    // And some more specific ones\n    // Substitute fray damage\n    StaticTransformers.push(new RegexTransformer(\n        /(\\[?fray\\]?)/ig,\n        (ctx) => {\n            if (ctx.actor.system.class?.fray_damage) {\n                return [ctx.actor.system.class.fray_damage.toString()];\n            } else {\n                return [\"fray\"];\n            }\n        }\n    ));\n\n    // Substitute damage die\n    StaticTransformers.push(new RegexTransformer(\n        /(\\[D\\])/g,\n        (ctx) => {\n            if (ctx.actor.system.class?.damage_die) {\n                return [`d${ctx.actor.system.class.damage_die}`];\n            } else {\n                return [\"[D]\"];\n            }\n        }\n    ));\n\n    // Make dice formulae in angle brackets rollable\n    StaticTransformers.push(new RegexTransformer(\n        /\\[\\[(\\S+)\\]\\]/g,\n        (ctx, m) => [\n            new IcoNode({\n                tag: \"span\",\n                formula: m[0],\n                children: [new IcoNode({ text: m[0] })]\n            })\n        ]\n    ));\n\n    // Make gamble rollable\n    StaticTransformers.push(new RegexTransformer(\n        /(Gamble)/ig,\n        (ctx) => [new IcoNode({\n            tag: \"span\",\n            tooltip: localize(\"ICON.Glossary.Gamble\"),\n            formula: \"1d6\",\n            children: [\n                new IcoNode({ text: \"Gamble\" })\n            ]\n        })]\n    ));\n\n    StaticTransformers.push(new RegexTransformer(\n        /(\\[name\\])/ig,\n        (ctx) => [ctx.actor?.name ?? \"[name]\"]\n    ));\n}\nexport const StaticTransformers = [];\n\n/**\n * \n * @param {HTMLElement} node \n *\n * @returns {IcoNode | null} A node if we deem this node worthy of having one\n */\nfunction htmlToNode(node) {\n    if (node.tagName === undefined) {\n        // Text node\n        if (node.textContent) {\n            return new IcoNode({\n                text: node.textContent\n            });\n        } else {\n            return null;\n        }\n    } else {\n        // An otherwise normal node\n        let tag = node.tagName;\n        let attrs = node.attributes;\n        let children = [];\n        for (let child of node.childNodes) {\n            child = htmlToNode(child);\n            if (child) {\n                children.push(child);\n            }\n        }\n        return new IcoNode({\n            tag,\n            attrs,\n            children\n        });\n    }\n}\n\n/**\n * \n * @param {string} text Full text\n *\n * @param {TransformContext} ctx Meta info some transformers care about\n *\n * @param {Transformer[]} [transformers] Which transformers to use\n *\n * @param options\n *\n * @returns {Array<IcoNode>} Fully processed text. Wrap in a div if you need to\n */\nexport function fullProcess(text, ctx, options = {}) {\n    const transformers = options.transformers ?? StaticTransformers;\n\n    // First parse to HTML\n    const parser = new DOMParser();\n    const html = parser.parseFromString(text, 'text/html');\n    const body = html.body;\n    let as_nodes = htmlToNode(body)?.children ?? [];\n\n    /**\n     * Recursively process an array of nodes. Processed bottom-up\n     *\n     * @param {Array<IcoNode>} arr \n     *\n     * @returns {Array<IcoNode>}\n     */\n    function processArray(arr) {\n        // Subprocess children first!\n        for (let item of arr) {\n            if (item.children?.length) {\n                item.children = processArray(item.children);\n            }\n        }\n\n        // Then process all current level elements with all transformers\n        for (let transformer of transformers) {\n            let result = [];\n\n            // Process the individual elements\n            for (let item of arr) {\n                let transformed = transformer.apply(ctx, item);\n                result.push(...transformed);\n            }\n\n            // Cleanup and combine consecutive text elements\n            let final_result = [];\n            for (let r of result) {\n                if (r.text === \"\") {\n                    continue;\n                } // Skip empty\n                if (r.text && final_result[final_result.length - 1]?.text) {\n                    final_result[final_result.length - 1].text += r.text;\n                } else {\n                    final_result.push(r);\n                }\n            }\n            arr = final_result;\n        }\n        return arr;\n    }\n\n    as_nodes = processArray(as_nodes);\n    return as_nodes;\n}\n\n/**\n * As fullprocess, but returns result as a single Node always (if necessary, wraps in a div.)\n * \n * @param {string} tag The tag to wrap in\n *\n * @param {string} text Raw html\n *\n * @param {TransformContext} context \n *\n * @param {object} options See fullProcess\n */\nexport function fullProcessWrapped(tag, text, context, options = {}) {\n    let result = fullProcess(text, context, options);\n    if (result.length == 1 && result[0].tag) {\n        return result[0];\n    } else {\n        return new IcoNode({\n            tag,\n            children: result\n        });\n    }\n}","<script>\n    /** @type {Roll} Roll to render */\n    export let roll;\n</script>\n\n{@html roll.toAnchor().outerHTML}\n","<script>\n    import { IcoNode } from \"../../../util/nlp\";\n    import SmallRoll from \"./dice/SmallRoll.svelte\";\n    import { createEventDispatcher } from \"svelte\";\n\n    /** @type {IcoNode} Our specific node */\n    export let node;\n\n    /** Our handler for when children ask for siblings. */\n    function handleAddSibling(evt) {\n        node.children = [...node.children, new IcoNode(evt.detail)];\n    }\n\n    const dispatch = createEventDispatcher();\n\n    /** Add a child node to this node */\n    function addChild(t) {\n        node.children = [...(node.children || []), new IcoNode(t)];\n    }\n\n    /** If configured with a formula, request a roll and add it as a node. */\n    async function requestRoll() {\n        let roll = new Roll(node.formula);\n        await roll.roll();\n        let volume = game.settings.get(\"core\", \"globalInterfaceVolume\");\n        game.audio.play(CONFIG.sounds.dice, { volume });\n        addChild({\n            roll: roll.toJSON(),\n        });\n        saveSelf();\n    }\n\n    // Request this node be persisted\n    function saveSelf() {\n        dispatch(\"savenode\", node);\n    }\n\n    /** Post the tooltip */\n    function postDescription() {\n        ChatMessage.create({\n            content: `<strong>${node.innerText()}</strong>: ${node.tooltip}`,\n        });\n    }\n\n    /** Generic click handler, multiplexes to more specific options */\n    function click() {\n        if (node.formula) {\n            requestRoll();\n        } else if (node.tooltip) {\n            postDescription();\n        }\n    }\n\n    let clickable;\n    $: clickable = !!(node.tooltip || node.formula);\n</script>\n\n{#if !node}\n    Err\n{:else if node.roll}\n    <SmallRoll roll={node.roll} />\n{:else if node.tag}\n    <svelte:element this={node.tag} on:click={click} class:clickable data-tooltip={node.tooltip ?? null}>\n        {#each node.children || [] as child}\n            <svelte:self node={child} on:addsibling={handleAddSibling} on:savenode={saveSelf} />\n        {/each}\n    </svelte:element>\n{:else}\n    {node.text}\n{/if}\n\n<style lang=\"scss\">\n    .clickable {\n        font-weight: bold;\n        cursor: pointer;\n    }\n</style>\n","<script>\n    import { getContext } from \"svelte\";\n    import { fullProcessWrapped } from \"../../../util/nlp\";\n    import NodeRenderer from \"./NodeRenderer.svelte\";\n\n    // For when you don't really care about persistence and just want to blit some text\n\n    /** @type {string} Raw text to show */\n    export let body;\n\n    export let actor = getContext(\"tjs_actor\");\n\n    // Our eventual value post processing\n    let init;\n    $: init = fullProcessWrapped(\"div\", body, { actor: $actor });\n\n    // If provided, override with this node\n    export let node_override = null;\n</script>\n\n<NodeRenderer node={node_override ?? init} on:savenode />\n","<script>\n    // UUID of an actor\n    export let uuid;\n\n    // Open the refActors sheet.\n    function openSheet(refActor) {\n        refActor.sheet.render(true, { focus: true });\n    }\n\n    function setDragData(refActor, evt) {\n        evt.stopImmediatePropagation();\n\n        // Try to find an existing world actor if possible alternative\n        let alt = game.actors.getName(refActor.name);\n\n        evt.dataTransfer.setData(\"text/plain\", JSON.stringify((alt || refActor).toDragData()));\n    }\n</script>\n\n{#await fromUuid(uuid)}\n    <span>...</span>\n{:then refActor}\n    {#if refActor}\n        <span\n            class=\"inline-container\"\n            data-uuid={uuid}\n            draggable=\"true\"\n            on:click={() => openSheet(refActor)}\n            on:dragstart={(e) => setDragData(refActor, e)}\n        >\n            {refActor.name}\n        </span>\n    {:else}\n        <span class=\"inline-container\"> ERR </span>\n    {/if}\n{/await}\n\n<style lang=\"scss\">\n    span {\n        font-weight: bold;\n        background-color: var(--tertiary-background);\n        color: var(--tertiary-color);\n        cursor: pointer;\n    }\n</style>\n","<script>\n    import { createEventDispatcher } from \"svelte\";\n    import RichTextDisplay from \"../generic/RichTextDisplay.svelte\";\n    import ActorUUIDReference from \"./ActorUUIDReference.svelte\";\n\n    // An ability choice\n    export let choice;\n\n    /** An optional object store */\n    export let overrides = {};\n\n    const dispatch = createEventDispatcher();\n\n    // Tag a savenode with a key\n    function requestPersist(key, node) {\n        dispatch(\"savenode\", [key, node]);\n    }\n</script>\n\n<div {...$$restProps}>\n    <div class=\"title\">\n        <h3>{choice.name}</h3>\n        <span>\n            {#if choice.actions == 0}\n                Free Action\n            {:else if choice.actions == 1}\n                1 Action\n            {:else if choice.actions == 2}\n                2 Actions\n            {/if}\n\n            {#if choice.resolve}\n                | {choice.resolve} Resolve\n            {/if}\n\n            {#if choice.combo === 1}\n                | +Combo\n            {:else if choice.combo === -1}\n                | -Combo\n            {/if}\n\n            {#if choice.ability.system.chapter == 2}\n                | Chapter Ⅱ\n            {:else if choice.ability.system.chapter == 3}\n                | Chapter Ⅲ\n            {/if}\n        </span>\n    </div>\n    <span>\n        <RichTextDisplay\n            body={[...choice.ranges, ...choice.tags].join(\", \")}\n            node_override={overrides[\"tags\"] ?? null}\n            on:savenode={(e) => requestPersist(\"tags\", e.detail)}\n        />\n    </span>\n    {#each choice.effects as effect, i}\n        <RichTextDisplay\n            body={effect}\n            node_override={overrides[`effect_${i}`] ?? null}\n            on:savenode={(e) => requestPersist(`effect_${i}`, e.detail)}\n        />\n    {/each}\n    {#each choice.ability.system.talents as talent, i}\n        {#if talent.unlocked}\n            <RichTextDisplay\n                body={talent.text}\n                node_override={overrides[`talent_${i}`] ?? null}\n                on:savenode={(e) => requestPersist(`talent_${i}`, e.detail)}\n            />\n        {/if}\n    {/each}\n    {#if choice.ability.system.mastery}\n        <RichTextDisplay\n            body={choice.ability.system.mastery.text}\n            node_override={overrides[\"mastery\"] ?? null}\n            on:savenode={(e) => requestPersist(\"mastery\", e.detail)}\n        />\n    {/if}\n    {#each choice.summons as summon}\n        <span>Summon: <ActorUUIDReference uuid={summon} /></span>\n    {/each}\n</div>\n\n<style lang=\"scss\">\n    .title {\n        display: flex;\n        align-items: center;\n        font-weight: bold;\n        h3 {\n            margin-bottom: 0px;\n            margin-right: 5px;\n        }\n        margin-bottom: 5px;\n    }\n</style>\n","import { TJSDialog } from '#runtime/svelte/application';\n\nexport class BoonBaneApplication extends TJSDialog {\n    static async promptBoonBane(data = {}, options = {}) {\n        return this.wait({\n            ...data,\n            buttons: {\n                bane2: {\n                    icon: \"fas fa-layer-minus\",\n                    label: \"-2 Bane\",\n                    onPress: () => -2\n                },\n                bane1: {\n                    icon: \"fas fa-circle-minus\",\n                    label: \"-1 Bane\",\n                    onPress: () => -1\n                },\n                neutral: {\n                    icon: \"fas fa-equals\",\n                    label: \"Standard\",\n                    onPress: () => 0\n                },\n                boon1: {\n                    icon: \"fas fa-circle-plus\",\n                    label: \"+1 Boon\",\n                    onPress: () => 1\n                },\n                boon2: {\n                    icon: \"fas fa-layer-plus\",\n                    label: \"+2 Boon\",\n                    onPress: () => 2\n                },\n\n            },\n            default: 'neutral'\n        }, options);\n    }\n}","import { easyActionBuilder } from \"./util\";\n\nexport const dragAsDoc = easyActionBuilder({\n    dragstart: (options, event) => {\n        if (options.doc) {\n            event.stopImmediatePropagation();\n            event.dataTransfer.setData(\"text/plain\", JSON.stringify(options.doc.toDragData()));\n        }\n    },\n}, (options) => {\n    if (options.doc && !(options.doc instanceof foundry.abstract.Document)) {\n        throw new TypeError(\"doc must be a foundry document\");\n    }\n});\n\nexport const dragAsMark = easyActionBuilder({\n    dragstart: (options, event) => {\n        if (options.doc) {\n            event.stopImmediatePropagation();\n            let mark_data = {\n                type: \"Effect\",\n                name: options.doc.name,\n                statuses: [options.doc.name],\n                icon: options.doc.img,\n                origin: options.doc.uuid\n            };\n            event.dataTransfer.setData(\"text/plain\", JSON.stringify(mark_data));\n        }\n    },\n}, (options) => {\n    if (options.doc && !(options.doc instanceof foundry.abstract.Document)) {\n        throw new TypeError(\"doc must be a foundry document\");\n    }\n});\n\n\n","<script>\n    import AbilityDetail from \"./AbilityDetail.svelte\";\n    import { TJSDialog } from \"#runtime/svelte/application\";\n    import { BoonBaneApplication } from \"../../apps/BoonBaneApplication\";\n    import { dragAsMark } from \"../../actions/drag\";\n    import RichTextDisplay from \"../generic/RichTextDisplay.svelte\";\n\n    // An ability (trait) or a relic. Can be null\n    export let item = null;\n\n    // Roll a specific ability\n    async function rollChoice(index) {\n        let choice = item.system.choices[index];\n        let boon = 0;\n        // Prompt boon if we are an attack\n        if (choice.is_attack) {\n            boon = await BoonBaneApplication.promptBoonBane({\n                content: `Select Boons/Banes for ${choice.name} Attack Roll`,\n            });\n        }\n        await ChatMessage.create({\n            [`flags.${game.system.id}`]: {\n                svelte_msg_type: \"ability\",\n                ability_uuid: item.uuid,\n                choice_index: index,\n                boon,\n            },\n        });\n    }\n\n    // Post a specific relic\n    async function postRank(index) {\n        let choice = item.system.ranks[index];\n        await ChatMessage.create({\n            content: `<h3>${item.name} Rank ${index + 1}:</h3>${choice}`,\n        });\n    }\n\n    /** Opens the sheet for the selected item */\n    function editSelected() {\n        item.sheet.render(true, { focus: true });\n    }\n\n    /** Deletes the selected item. */\n    function deleteSelected() {\n        TJSDialog.confirm({\n            content: `Delete ${item.name}?`,\n            onYes: () => {\n                // Delete the item entirely\n                item.delete();\n            },\n        });\n    }\n</script>\n\n<div class=\"preview\">\n    {#if !item}\n        <h3>Select an ability</h3>\n    {:else if item.type === \"ability\"}\n        {#each item.system.choices as choice, i}\n            <div class=\"choice\" class:bottomed={i < item.system.choices.length - 1}>\n                <AbilityDetail {choice} style=\"flex: auto\" />\n                <i class=\"fas fa-dice-d20\" on:click={() => rollChoice(i)} data-tooltip=\"Activate\" />\n            </div>\n        {/each}\n    {:else if item.type === \"relic\"}\n        {#each item.system.ranks.slice(0, item.system.rank.value) as rank, i}\n            <div class=\"rank\" class:bottomed={i < item.system.rank}>\n                <div>\n                    <RichTextDisplay body={rank} />\n                </div>\n                <i class=\"fas fa-dice-d20\" on:click={() => postRank(i)} data-tooltip=\"Activate\" />\n            </div>\n        {/each}\n    {/if}\n    {#if item}\n        <div class=\"bottom-controls\">\n            <i class=\"fas fa-bullseye\" draggable=\"true\" use:dragAsMark={{ doc: item }} data-tooltip=\"Drag To Mark\" />\n            <i class=\"fas fa-edit\" on:click={editSelected} data-tooltip=\"Edit\" />\n            <i class=\"fas fa-trash\" on:click={deleteSelected} data-tooltip=\"Delete\" />\n        </div>\n    {/if}\n</div>\n\n<style lang=\"scss\">\n    .preview {\n        height: 100%;\n        padding: 5px;\n        display: flex;\n        flex-direction: column;\n\n        .choice,\n        .rank {\n            display: flex;\n            flex-direction: row;\n            align-items: center;\n\n            &.bottomed {\n                border-bottom: var(--primary-border);\n            }\n        }\n\n        .bottom-controls {\n            margin-top: auto;\n            display: flex;\n            flex-direction: row-reverse;\n            i {\n                padding-right: 5px;\n            }\n        }\n    }\n\n    i {\n        cursor: pointer;\n    }\n</style>\n","<script>\n    import { ICON } from \"../../../consts\";\n\n    export let status;\n\n    // Save against an active effect\n    async function saveAgainst() {\n        let roll = new Roll(\"1d20\");\n        await roll.roll();\n        let value = roll.total;\n        if (value >= 10) {\n            await ae.delete();\n            ui.notifications.info(`Succeeded on save with a ${value}`);\n        } else {\n            ui.notifications.info(`Failed on save with a ${value}`);\n        }\n    }\n\n    // Is the effect ongoing? (+)\n    let ongoing;\n    $: ongoing = status.getFlag(game.system.id, ICON.flags.status_ongoing);\n\n    function setOngoing(v) {\n        status.setFlag(game.system.id, ICON.flags.status_ongoing, v);\n    }\n\n    // What is the statuscounter module current counter? Or, null if it doesn't exist\n    let count;\n    $: count = status.getFlag(\"statuscounter\", \"counter\")?.value ?? 1;\n\n    // Is the effect one we should show a counter for?\n    let show_counter;\n    $: show_counter = false;\n\n    // Definition if we can grab it\n    let definition;\n    $: definition = status.getFlag(game.system.id, \"description\") ?? \"No description\";\n\n    // Post it in chat\n    function post() {\n        ChatMessage.create({\n            content: `<strong>${status.name}</strong>  ${definition}`,\n        });\n    }\n</script>\n\n<div class=\"statuses\">\n    <img src={status.img} />\n    <span data-tooltip={definition}>\n        {status.name}\n        {#if ongoing}\n            (+)\n        {/if}\n        {#if show_counter}\n            {count}\n        {/if}\n    </span>\n\n    <!-- svelte-ignore missing-declaration -->\n    <i\n        on:click={() => ui.notifications.warn(\"Not yet supported\")}\n        class=\"fas fa-circle-plus\"\n        data-tooltip=\"Make Ongoing\"\n    />\n    <!-- svelte-ignore missing-declaration -->\n    <i on:click={post} class=\"fas fa-comment\" data-tooltip=\"Post\" />\n    <i on:click={() => status.sheet?.render(true, { focus: true })} class=\"fas fa-edit\" data-tooltip=\"Edit\" />\n    <i on:click={() => status.delete()} class=\"fas fa-trash\" data-tooltip=\"Delete\" />\n</div>\n\n<style lang=\"scss\">\n    div {\n        display: grid;\n        grid-template-columns: 48px 1fr repeat(4, 24px);\n        grid-auto-flow: dense;\n\n        align-items: center;\n\n        i {\n            cursor: pointer;\n        }\n\n        img {\n            width: 24px;\n            height: 24px;\n        }\n    }\n</style>\n","<script>\n    import { getContext } from \"svelte\";\n    import IndividualStatusDisplay from \"./IndividualStatusDisplay.svelte\";\n\n    let actor = getContext(\"tjs_actor\");\n\n    const name_alphabetical = (a, b) => a.name.localeCompare(b.name);\n    const statuses = actor.embedded.create(ActiveEffect, {\n        name: \"effects\",\n        filters: [],\n        sort: name_alphabetical,\n    });\n</script>\n\n<div class=\"statuses\">\n    <h3>Statuses</h3>\n    {#each [...$statuses] as status}\n        <IndividualStatusDisplay status={status} />    \n    {/each}\n</div>\n\n<style lang=\"scss\">\n    .statuses {\n        display: flex;\n        flex-direction: column;\n    }\n</style>\n","<script>\n    import { getContext } from \"svelte\";\n    import { IconItem } from \"../../../documents/item\";\n    import CombatDisplay from \"./CombatDisplay.svelte\";\n    import StatusDisplay from \"./StatusDisplay.svelte\";\n    import { chapterIcon } from \"../../../util/misc\";\n    import { dragAsDoc } from \"../../actions/drag\";\n    import { TJSDocument } from \"#runtime/svelte/store/fvtt/document\";\n\n    let actor = getContext(\"tjs_actor\");\n\n    // Props\n    const name_alphabetical = (a, b) => a.name.localeCompare(b.name);\n    const abilities = actor.embedded.create(Item, {\n        name: \"abilities\",\n        filters: [(i) => i.type === \"ability\" && !i.system.trait],\n        sort: name_alphabetical,\n    });\n    const traits = actor.embedded.create(Item, {\n        name: \"traits\",\n        filters: [(i) => i.type === \"ability\" && i.system.trait],\n        sort: name_alphabetical,\n    });\n    const relics = actor.embedded.create(Item, {\n        name: \"relics\",\n        filters: [(i) => i.type === \"relic\"],\n        sort: name_alphabetical,\n    });\n\n    // State\n\n    /**\n     * @type {TJSDocument<IconItem | undefined>}\n     * Either the selected trait, or the selected choice of an ability\n     */\n    let selected = new TJSDocument(undefined);\n\n    function selectItem(item) {\n        if (selected === item) {\n            selected = null;\n        } else {\n            selected = new TJSDocument(item);\n        }\n    }\n</script>\n\n<div class=\"combat-grid\">\n    <div class=\"abilities\">\n        {#if [...$abilities].length}<h3>Abilities</h3>{/if}\n        {#each [...$abilities] as ability (ability.id ?? \"err\")}\n            <div\n                class=\"ability\"\n                on:click={() => selectItem(ability)}\n                class:selected={ability === $selected}\n                draggable=\"true\"\n                use:dragAsDoc={{ doc: ability }}\n            >\n                <img class=\"icon\" src={ability.img} alt={ability.name} />\n                <span>{chapterIcon(ability.system.chapter)} {ability.name}</span>\n                <span style=\"margin-left: auto\">\n                    {ability.system.choices[0].actionPips}\n                </span>\n            </div>\n        {/each}\n        {#if [...$traits].length}<h3>Traits</h3>{/if}\n        {#each [...$traits] as trait (trait.id ?? \"err\")}\n            <div\n                class=\"trait\"\n                on:click={() => selectItem(trait)}\n                class:selected={trait === $selected}\n                draggable=\"true\"\n                use:dragAsDoc={{ doc: trait }}\n            >\n                <img class=\"icon\" src={trait.img} alt={trait.name} />\n                <span>{chapterIcon(trait.system.chapter)} {trait.name}</span>\n            </div>\n        {/each}\n        {#if [...$relics].length}<h3>Relics</h3>{/if}\n        {#each [...$relics] as relic (relic.id ?? \"err\")}\n            <div\n                class=\"relic\"\n                on:click={() => selectItem(relic)}\n                class:selected={relic === $selected}\n                draggable=\"true\"\n                use:dragAsDoc={{ doc: relic }}\n            >\n                <img class=\"icon\" src={relic.img} alt={relic.name} />\n                <span>{chapterIcon(relic.system.rank)} {relic.name}</span>\n            </div>\n        {/each}\n    </div>\n\n    <div class=\"preview\">\n        <CombatDisplay item={$selected} />\n    </div>\n\n    <div class=\"statuses\">\n        <StatusDisplay />\n    </div>\n</div>\n\n<style lang=\"scss\">\n    .combat-grid {\n        height: 100%;\n        display: grid;\n        grid-template:\n            \"abilities preview\" 2fr\n            \"abilities statuses\" 1fr / 1fr 2fr;\n\n        h3 {\n            max-width: fit-content;\n            align-self: center;\n        }\n\n        .abilities {\n            grid-area: abilities;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            border-right: var(--primary-border);\n            overflow: auto;\n\n            .ability,\n            .trait,\n            .relic {\n                width: calc(100% - 20px);\n                display: flex;\n                flex-direction: row;\n                border: var(--primary-border);\n                padding: 5px;\n                margin: 2px;\n                cursor: pointer;\n                font-weight: bold;\n                align-items: center;\n\n                .icon {\n                    width: 24px;\n                    height: 24px;\n                }\n\n                span {\n                    margin-left: 5px;\n                }\n\n                &.selected {\n                    background-color: var(--secondary-background);\n                    color: var(--secondary-color);\n                }\n            }\n        }\n\n        .preview {\n            grid-area: preview;\n            border-bottom: var(--primary-border);\n        }\n\n        .statuses {\n            padding: 5px;\n            grid-area: statuses;\n            display: flex;\n            flex-direction: column;\n        }\n    }\n</style>\n","<script>\n    import { getContext } from \"svelte\";\n    import { resolveDotpath } from \"../../../util/paths\";\n    import { updateDoc } from \"../../actions/update\";\n\n    /** @type {string} Label to show */\n    export let name;\n\n    /** @type {string} Path within doc */\n    export let path;\n\n    /** @type {boolean} Can we edit the max val? */\n    export let edit_max = false;\n\n    let percent;\n    $: percent = Math.round(resolveDotpath($doc, `${path}.value`) / resolveDotpath($doc, `${path}.max`) * 100);\n\n    export let doc = getContext(\"tjs_actor\");\n</script>\n\n<div style=\"background: linear-gradient(to right, var(--secondary-background) {percent}%, #00000000 {percent}%)\">\n    <span>{name}</span>\n    <input type=\"number\" use:updateDoc={{ doc, path: `${path}.value` }} />\n    <span> / </span>\n    {#if edit_max}\n        <input type=\"number\" use:updateDoc={{ doc, path: `${path}.max` }} />\n    {:else}\n        <span>{resolveDotpath($doc, `${path}.max`)}</span>\n    {/if}\n</div>\n\n\n<style lang=\"scss\">\n    div {\n        display: grid;\n        grid-template-columns: 1fr 30px 10px 25px;\n        align-items: center;\n        text-align: center;\n        border: var(--primary-border);\n        border-radius: 10px;\n        padding: 2px;\n        margin: 2px;\n    }\n</style>\n","<script>\n    import BoundedNumberDisplay from \"../generic/BoundedNumberDisplay.svelte\";\n    import { localize } from \"../../../util/misc\";\n    import { updateDoc } from \"../../actions/update\";\n    import { getContext } from \"svelte\";\n\n    let actor = getContext(\"tjs_actor\");\n</script>\n\n<div {...$$restProps}>\n    <div class:bloodied={$actor.system.bloodied}>\n        <BoundedNumberDisplay name={localize(\"ICON.Harm.Health\")} path=\"system.hp\" />\n    </div>\n    <BoundedNumberDisplay name={localize(\"ICON.Harm.Vigor\")} path=\"system.vigor\" />\n    {#if $actor.system.wounds?.max}\n        <BoundedNumberDisplay name={localize(\"ICON.Harm.Wounds\")} path=\"system.wounds\" />\n    {/if}\n    {#if $actor.type === \"player\"}\n        <label for=\"resolve\">{localize(\"ICON.Resolve\")}</label>\n        <input name=\"resolve\" type=\"number\" use:updateDoc={{doc: actor, path: \"system.resolve\"}} />\n    {/if}\n    <span class=\"noborder\">Def: {$actor.system.class?.defense ?? 0}</span>\n    <span>Die: D{$actor.system.class?.damage_die ?? 0}</span>\n    <span>Fray: {$actor.system.class?.fray_damage ?? 0}</span>\n    <span>Speed: {$actor.system.class?.speed ?? 0}</span>\n    <span>Dash: {$actor.system.class?.dash ?? 0}</span>\n    {#if $actor.type === \"player\"}\n        <label for=\"combo\" id=\"combolabel\">{localize(\"ICON.Combo\")}</label>\n        <input name=\"combo\" type=\"checkbox\" use:updateDoc={{doc: actor, path: \"system.combo\"}} />\n    {/if}\n</div>\n\n<style lang=\"scss\">\n    div {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n\n        span, input, label {\n            padding-left: 3px;\n            &:not(:last-child) {\n                padding-right: 3px;\n            }\n        }\n        span:not(.noborder), #combolabel {\n            border-left: var(--primary-border);\n        }\n\n        .bloodied {\n            color: red;\n        }\n\n        input {\n            width: 24px;\n            text-align: center;\n        }\n    }\n</style>\n","<script>\n    import { createEventDispatcher } from \"svelte\";\n\n    export let size = 3;\n    export let value = 0;\n    export let width = \"128px\";\n\n    // Taken from a medium article https://marian-caikovski.medium.com/drawing-sectors-and-pie-charts-with-svg-paths-b99b5b6bf7bd\n    function createSlicePath(radius, startAngle, endAngle, origin) {\n        origin ??= {x: 0, y: 0};\n        const isCircle = endAngle - startAngle === 360;\n        if (isCircle) {\n            endAngle--;\n        }\n        const start = polarToCartesian(origin, radius, startAngle);\n        const end = polarToCartesian(origin, radius, endAngle);\n        const largeArcFlag = endAngle - startAngle <= 180 ? 0 : 1;\n        const d = [\"M\", start.x, start.y, \"A\", radius, radius, 0, largeArcFlag, 1, end.x, end.y];\n        if (isCircle) {\n            d.push(\"Z\");\n        } else {\n            d.push(\"L\", origin.x, origin.y, \"L\", start.x, start.y, \"Z\");\n        }\n        return d.join(\" \");\n    }\n\n    // Converts coordinates\n    function polarToCartesian(origin, radius, angleInDegrees) {\n        let radians = ((angleInDegrees - 90) * Math.PI) / 180;\n        return {\n            x: Math.round(origin.x + radius * Math.cos(radians)),\n            y: Math.round(origin.y + radius * Math.sin(radians)),\n        };\n    }\n\n    // Make an iterable for our clock size. Reactive to allow resizing (is this necessary?)\n    let slices;\n    $: {\n        slices = [];\n        let rot = 360 / size; // Rotation of each slice\n        for (let i = 0; i < size; i++) {\n            let filled = i < value\n            slices.push({\n                class:  filled ? \"filled\" : \"unfilled\",\n                path: createSlicePath(90, rot * i, rot * (i + 1), {x: 100, y: 100}),\n                value: (value ==  i + 1) ? i : i + 1\n            });\n        }\n    }\n\n    // Dispatches 'change'\n\tconst dispatch = createEventDispatcher();\n</script>\n\n<svg viewbox=\"0 0 200 200\" style=\"width: {width}; height: {width}\" >\n    <g class=\"sectors\">\n        {#each slices as slice}\n            <path d={slice.path} class=\"{slice.class}\" on:click={() => dispatch('change', slice.value)} />\n        {/each}\n    </g>\n</svg>\n\n<style lang=\"scss\">\n    path {\n        cursor: pointer;\n        stroke: var(--clock-border);\n        stroke-width: 5;\n    }\n    path.filled {\n        fill: var(--clock-fill);\n    }\n    path.unfilled {\n        fill: var(--clock-empty);\n    }\n</style>\n","<script>\n    import { getContext } from \"svelte\";\n    import Clock from \"./Clock.svelte\";\n    import { resolveDotpath } from \"../../../util/paths\";\n    import { updateDoc } from \"../../actions/update\";\n\n    /** @type {string} Path to the clock*/\n    export let path;\n\n    /** @type {boolean} Should the name be an input? */\n    export let title_editable = true;\n\n    /** @type {string} Size of the clock */\n    export let clock_width;\n\n    /** @type {string} Whether to display horizontally */\n    export let inline = false;\n\n    /** @type {boolean} Show title at all */\n    export let title = true;\n\n    let actor = getContext(\"tjs_actor\");\n\n    let clock;\n    $: clock = resolveDotpath($actor, path);\n\n    function handleChange(event) {\n        $actor.update({ [`${path}.value`]: event.detail });\n    }\n</script>\n\n<div class:flexrow={inline} class:flexcol={!inline}>\n    {#if title}\n        {#if title_editable}\n            <input type=\"text\" use:updateDoc={{ doc: actor, path: `${path}.name` }} />\n        {:else}\n            <span>{clock.name}</span>\n        {/if}\n    {/if}\n    <Clock value={clock.value} size={clock.size} width={clock_width} on:change={handleChange} />\n</div>\n\n<style lang=\"scss\">\n    div {\n        align-items: center;\n    }\n</style>\n","<script>\n    import { getContext } from \"svelte\";\n    import { localize } from \"../../../util/misc\";\n    import DocClock from \"../../components/generic/DocClock.svelte\";\n    import BoundedNumberDisplay from \"../../components/generic/BoundedNumberDisplay.svelte\";\n    import { TJSDialog } from \"#runtime/svelte/application\";\n    import { TJSDocument } from \"#runtime/svelte/store/fvtt/document\";\n    import { slide, blur } from \"svelte/transition\";\n    import { updateDoc } from \"../../actions/update\";\n\n    let actor = getContext(\"tjs_actor\");\n    let doc = actor; // Alias\n\n    // Total pending xp\n    let total_xp;\n    $: {\n        let xp = $actor.system.xp_tracker;\n        total_xp = xp.ideals.value + xp.challenges.value + xp.ambitions.value + xp.burdens.value;\n    }\n\n    // Relics\n    const name_alphabetical = (a, b) => a.name.localeCompare(b.name);\n    const relics = actor.embedded.create(Item, {\n        name: \"relics\",\n        filters: [(i) => i.type === \"relic\"],\n        sort: name_alphabetical,\n    });\n\n    // Commit all xp and clear all clocks\n    function commitXP() {\n        $actor.update({\n            \"system.xp_tracker\": {\n                \"ideal.value\": 0,\n                \"challenges.value\": 0,\n                \"ambitions.value\": 0,\n                \"burdens.value\": 0,\n            },\n            \"system.xp\": $actor.system.xp.value + total_xp,\n        });\n    }\n\n    // Reduce xp back to modulo 15 and increment level\n    function levelUp() {\n        $actor.update({\n            \"system.xp\": $actor.system.xp.value - 15,\n            \"system.level\": $actor.system.level + 1,\n        });\n    }\n    let can_level;\n    $: can_level = $actor.system.level < 12 && $actor.system.xp.value >= 15;\n\n    // Show all build warnings\n    function showWarnings() {\n        TJSDialog.prompt({\n            content: $actor.system.progression.warnings.join(\"<br>\"),\n        });\n    }\n\n    // Upgrade the specified relic\n    function upgradeRelic(relic) {\n        relic.update({\n            \"system.rank\": relic.system.rank.value + 1,\n            \"system.infused_dust\": relic.system.infused_dust.value - relic.system.infused_dust.max,\n        });\n    }\n</script>\n\n<section>\n    <div class=\"xp\">\n        <h2>XP Tracking</h2>\n        <BoundedNumberDisplay name={localize(\"ICON.XP\")} path=\"system.xp\" />\n        {#each [[\"ICON.XPTracking.Ideal\", \"system.xp_tracker.ideals\"], [\"ICON.XPTracking.Challenge\", \"system.xp_tracker.challenges\"], [\"ICON.XPTracking.Ambition\", \"system.xp_tracker.ambitions\"], [\"ICON.XPTracking.Burdens\", \"system.xp_tracker.burdens\"]] as [text, path]}\n            <div class=\"opportunity\">\n                <i class=\"fas fa-chevron-right\" />\n                <span>{localize(text)}</span>\n                <DocClock clock_width=\"30px\" {path} title={false} />\n            </div>\n        {/each}\n        <button on:click={commitXP}>End Session - {total_xp} XP</button>\n        {#if can_level}\n            <button on:click={levelUp}>Level Up!</button>\n        {/if}\n\n        <!-- The two branching paths in character building -->\n        {#each [[\"four\", 4], [\"eight\", 8]] as [key, threshold]}\n            {#if $doc.system.level >= threshold}\n                <div>\n                    <h4>At level {key} I chose:</h4>\n                    <div class=\"flexrow\">\n                        <select use:updateDoc={{doc, path: `system.level_choices.${key}.combat`}}>\n                            <option value=\"job\">+1 Job</option>\n                            <option value=\"mastery\">+1 Mastery +2 Abilities</option>\n                        </select>\n                        <select use:updateDoc={{doc, path: `system.level_choices.${key}.narrative`}}>\n                            <option value=\"actions\">+2 Action Pips</option>\n                            <option value=\"power\">+1 Bond Power</option>\n                        </select>\n                    </div>\n                </div>\n            {/if}\n        {/each}\n\n\n        {#if $actor.system.progression.warnings.length}\n            <button on:click={showWarnings}>{$actor.system.progression.warnings.length} Build Warnings</button>\n        {/if}\n    </div>\n    <div class=\"relics\">\n        <h2>Relics</h2>\n        <BoundedNumberDisplay name={localize(\"ICON.Dust\")} path=\"system.dust\" />\n        {#each [...$relics] as relic}\n            <div>\n                <h3 class=\"clickable\" on:click={() => relic.sheet.render(true, { focus: true })}>{relic.name}</h3>\n                <div class=\"flexrow\">\n                    {#if relic.system.rank.value < 4}\n                        <BoundedNumberDisplay\n                            name={localize(relic.system.rank.value < 3 ? \"ICON.Upgrade\" : \"ICON.Aspect\")}\n                            doc={new TJSDocument(relic)}\n                            path=\"system.infused_dust\"\n                        />\n                        {#if relic.system.infused_dust.value >= relic.system.infused_dust.max}\n                            <button transition:blur on:click={() => upgradeRelic(relic)}>\n                                Upgrade\n                            </button>\n                        {/if}\n                    {/if}\n                </div>\n                {#each relic.system.ranks.slice(0, relic.system.rank.value) as rank}\n                    {@html rank}\n                {/each}\n            </div>\n        {/each}\n    </div>\n    <div class=\"burdens\">\n        <h2>Burdens</h2>\n        {#each Object.entries($actor.system.burdens) as [key, _clock]}\n            <DocClock clock_width=\"60px\" path={`system.burdens.${key}`} />\n        {/each}\n    </div>\n    <div class=\"ambitions\">\n        <h2>Ambitions</h2>\n        {#each Object.entries($actor.system.ambitions) as [key, _clock]}\n            <DocClock clock_width=\"60px\" path={`system.ambitions.${key}`} />\n        {/each}\n    </div>\n</section>\n\n<style lang=\"scss\">\n    section {\n        padding: 5px 5px 0px 5px;\n        flex: 1 0 auto;\n\n        max-height: calc(100% - 126px);\n        display: grid;\n        grid-template:\n            \"xp relics burdens\" 1fr\n            \"xp relics ambitions\" 1fr / 1fr 1fr 1fr;\n\n        height: 100%;\n\n        h2 {\n            text-align: center;\n        }\n\n        > div {\n            padding: 0px 3px;\n        }\n\n        .xp {\n            border-right: var(--primary-border);\n            grid-area: xp;\n\n            .opportunity {\n                display: flex;\n                align-items: center;\n                border-bottom: var(--primary-border);\n                padding: 5px 0px;\n\n                span {\n                    margin-left: 5px;\n                }\n            }\n        }\n        .relics {\n            border-right: var(--primary-border);\n            grid-area: relics;\n        }\n        .burdens {\n            grid-area: burdens;\n            border-bottom: var(--primary-border);\n        }\n        .ambitions {\n            grid-area: ambitions;\n        }\n    }\n</style>\n","<script>\n    import { createEventDispatcher } from \"svelte\";\n\n    /** @type {number} Number of segments */\n    export let size;\n\n    /** @type {number} Number of filled segments */\n    export let value;\n\n    /** @type {number} Number of alternately filled segments. Prioritized over normally filled segments */\n    export let alt_value;\n\n    // Generate our segments automagically \n    let segments;\n    $: {\n        segments = [];\n        for(let i=1; i <= size; i++) {\n            segments.push({\n                filled: alt_value < i && i <= value,\n                alt_filled: i <= alt_value\n            })\n        }\n    }\n\n    // Dispatches 'change'\n\tconst dispatch = createEventDispatcher();\n</script>\n\n<div>\n    {#each segments as seg, i}\n        <div class=\"segment\" \n        class:filled={seg.filled} \n        class:alt-filled={seg.alt_filled} \n        on:click={() => dispatch(\"change\", (i+1) === value ? i : i+1)} \n        on:contextmenu={() => dispatch(\"alt_change\", (i+1) === alt_value ? i : i+1)} />\n    {/each}\n</div>\n\n<style lang=\"scss\">\n    div {\n        // display: grid;\n        // grid-template: 1fr / 1fr;\n        // grid-auto-columns: 1fr;\n        display: flex;\n\n        .segment {\n            clip-path: polygon(50% 0, 100% 50%, 50% 100%, 0 50%);\n            background-color: var(--clock-empty);\n            width: 20px;\n            height: 20px;\n            cursor: pointer;\n            margin: 1px;\n        }\n\n        .segment.filled {\n            background-color: var(--clock-fill);\n        }\n\n        .segment.alt-filled {\n            background-color: var(--clock-alt-fill);\n        }\n    }\n</style>\n\n\n","<!-- This is necessary for Svelte to generate accessors TRL can access for `elementRoot` -->\n<svelte:options accessors={true} />\n\n<script>\n    import { ApplicationShell } from \"#runtime/svelte/component/core\";\n    import { scale } from \"svelte/transition\";\n    import { localize } from \"../../util/misc\";\n\n    export let elementRoot;\n\n\n    // Helper consts\n    const EFFECTS = [\"None\", \"Limited\", \"Standard\", \"Great\", \"Super\"];\n    const POSITIONS = [\"Desperate\", \"Risky\", \"Controlled\"];\n\n    // State/props\n    export let purpose = \"\";\n    export let dice = 1;\n    let effect = EFFECTS[2];\n    let position = POSITIONS[1];\n\n    // Helper functions\n    function formula() {\n        if (dice <= 0) {\n            return \"2d6kl1\";\n        } else {\n            return `${dice}d6kh1`;\n        }\n    }\n\n    // Handlers\n    async function doRoll(position, effect, subtype) {\n        let roll = new Roll(formula());\n        await roll.roll();\n        await ChatMessage.create({\n            [`flags.${game.system.id}`]: {\n                svelte_msg_type: \"narrative\",\n                subtype,\n                position,\n                effect,\n                purpose,\n                actor_uuid: \"\",\n                roll_data: roll.toJSON(),\n            },\n        });\n    }\n</script>\n\n<!-- ApplicationShell provides the popOut / application shell frame, header bar, content areas -->\n<!-- ApplicationShell exports `elementRoot` which is the outer application shell element -->\n<ApplicationShell bind:elementRoot transition={scale} transitionOptions={{ duration: 200 }}>\n    <main>\n        <h3>{localize(\"ICON.Rolls.Narrative.Purpose\")}:</h3>\n        <div class=\"purposebox\">\n            <input type=\"text\" bind:value={purpose} />\n        </div>\n        <h3>{localize(\"ICON.Rolls.Narrative.NumDice\")}:</h3>\n        <div class=\"dicebox\">\n            {#each [0, 1, 2, 3, 4, 5, 6] as count}\n                <button\n                    class=\"dice\"\n                    class:selected={count == dice}\n                    class:zero={count == 0}\n                    on:click={() => (dice = count)}\n                >\n                    {count}\n                </button>\n            {/each}\n            <button class=\"roll\" on:click={() => doRoll(null, null, \"Fortune\")}>\n                {localize(\"ICON.Rolls.Narrative.Fortune\")}\n            </button>\n        </div>\n        <h3>{localize(\"ICON.Rolls.Narrative.PosEffect\")}:</h3>\n        <div class=\"rollbox\">\n            <div class=\"flexcol choices\">\n                {#each POSITIONS as p}\n                    <button on:click={() => (position = p)} class:selected={position == p}>\n                        {localize(`ICON.Position.${p}`)}\n                    </button>\n                {/each}\n            </div>\n            <div class=\"flexcol choices\">\n                {#each EFFECTS as e}\n                    <button on:click={() => (effect = e)} class:selected={effect == e}>\n                        {localize(`ICON.Effect.${e}`)}\n                    </button>\n                {/each}\n            </div>\n            <button class=\"roll\" on:click={() => doRoll(position, effect, \"Action\")}>\n                {localize(\"ICON.Rolls.Narrative.Action\")}\n            </button>\n        </div>\n    </main>\n</ApplicationShell>\n\n<style lang=\"scss\">\n    main {\n        display: flex;\n        flex-direction: column;\n    }\n\n    .roll {\n        width: 120px;\n        background-color: lightblue;\n    }\n\n    .dicebox {\n        display: flex;\n        flex-direction: row;\n\n        .dice {\n            transition: filter 0.1s;\n            border-radius: 4px;\n            width: 30px;\n            height: 30px;\n            border: none;\n            text-align: center;\n            font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n            font-size: large;\n            margin: 5px;\n\n            // Unselected style\n            font-weight: normal;\n            opacity: 40%;\n            background-color: black;\n            color: white;\n\n            &.selected {\n                opacity: 100%;\n                font-weight: bolder;\n            }\n        }\n    }\n\n    .rollbox {\n        display: grid;\n        grid-template: repeat(1, 1fr) / repeat(3, 1fr);\n        align-items: center;\n        justify-items: center;\n\n        .choices button {\n            opacity: 40%;\n            background-color: black;\n            color: white;\n            margin: 2px;\n            width: 100%;\n            cursor: pointer;\n            padding: 0px;\n\n            &.selected {\n                opacity: 100%;\n            }\n        }\n    }\n</style>\n","import { SvelteApplication } from '#runtime/svelte/application';\n\nimport FitdRollShell from './FitdRollShell.svelte';\n\nlet singletonId = null;\nexport default class ForgedRollApplication extends SvelteApplication {\n   /**\n    * Default Application options\n    *\n    * @returns {object} options - Application options.\n    * @see https://foundryvtt.com/api/classes/client.Application.html#options\n    */\n   static get defaultOptions() {\n      return foundry.utils.mergeObject(super.defaultOptions, {\n         id: \"narrative_roll\",\n         title: 'ICON.Rolls.Narrative.Title',  // Automatically localized from `lang/en.json`.\n         width: 400,\n         height: \"auto\",\n\n         svelte: {\n            class: FitdRollShell,\n            target: document.body,\n            intro: true,\n         },\n\n         classes: [\"icon\", \"app\", \"fitd-roll\"],\n         resizable: false,\n         minimizable: false,\n         positionOrtho: false,\n         zIndex: null,\n      });\n   }\n\n   static async show({ x, y, initial_dice, initial_purpose } = {}) {\n      let app;\n      if (singletonId && ui.windows[singletonId]) {\n         app = ui.windows[singletonId];\n         app.svelte.applicationShell.dice = initial_dice ?? 1;\n         app.svelte.applicationShell.purpose = initial_purpose ?? \"\";\n      } else {\n         app = new ForgedRollApplication({\n            svelte: {\n               props: {\n                  dice: initial_dice ?? 1,\n                  purpose: initial_purpose ?? \"\"\n               }\n            }\n         });\n      } \n\n      app.position.set({\n         top: y,\n         left: x\n      });\n      await app.render(true, { focus: true });\n      singletonId = app.appId;\n   }\n}","<script>\n    import { getContext } from \"svelte\";\n    import { resolveDotpath, stepwiseResolveDotpath } from \"../../util/paths\";\n    import SegBar from \"./generic/SegBar.svelte\";\n    import ForgedRollApplication from \"../apps/FitdRollDialog\";\n\n    /** @type {string} Path to the action*/\n    export let path;\n\n    let actor = getContext(\"tjs_actor\");\n\n    // Resolve our value path\n    let srp, name, value;\n    $: srp = stepwiseResolveDotpath($actor, path);\n    $: name = srp[srp.length - 1].pathlet;\n    $: value = srp[srp.length - 1].val;\n\n    // And our burden penalty path!\n    let penalty_path = path;\n    $: penalty_path = path.replace(\".actions.\", \".action_penalties.\");\n    $: penalty_value = resolveDotpath($actor, penalty_path);\n\n    /**\n     * Set a new action rating\n     * @param {number} target_value The new value\n     */\n    function setValue(target_value) {\n        let new_value = target_value === value ? value - 1 : target_value;\n        let new_penalty = Math.min(penalty_value, new_value); // Reduce penalty to equal value\n        $actor.update({\n            [path]: new_value,\n            [penalty_path]: new_penalty,\n        });\n    }\n\n    /**\n     * Set a new action penalty\n     * @param {number} target_value The new penalty\n     */\n    function setPenalty(target_value) {\n        let new_penalty = target_value === penalty_value ? penalty_value - 1 : target_value;\n        new_penalty = Math.min(new_penalty, value);\n        $actor.update({\n            [penalty_path]: new_penalty,\n        });\n    }\n\n    function promptRoll() {\n        let rect = this.parentElement.getBoundingClientRect();\n        ForgedRollApplication.show({\n            x: rect.right,\n            y: rect.top,\n            initial_purpose: `${name} roll`,\n            initial_dice: value - penalty_value,\n        });\n    }\n</script>\n\n<div>\n    <span on:click={promptRoll}>{name.toUpperCase()}</span>\n    <SegBar\n        {value}\n        alt_value={penalty_value}\n        size={4}\n        on:change={(e) => setValue(e.detail)}\n        on:alt_change={(e) => setPenalty(e.detail)}\n    />\n</div>\n\n<style lang=\"scss\">\n    span {\n        cursor: pointer;\n    }\n    div {\n        display: grid;\n        grid-template: 1fr / 70px 80px;\n        align-items: center;\n    }\n</style>\n","<script>\n    import { slide } from \"svelte/transition\";\n    import { TJSDialog } from \"#runtime/svelte/application\";\n    import { dragAsDoc } from \"../../actions/drag\";\n    /** @type {TJSDocument<IconItem>}*/\n    export let power;\n\n    let expanded = false;\n    function toggleExpanded() {\n        expanded = !expanded;\n    }\n\n    function sendToChat(evt) {\n        evt.stopPropagation();\n        ChatMessage.create({\n            content: `${power.name}<br>${power.system.description}`,\n        });\n    }\n\n    /** Deletes the selected item. choices are deleted individually first. */\n    function promptDelete() {\n        TJSDialog.confirm({\n            content: `Delete ${power.name}?`,\n            onYes: () => power.delete(),\n        });\n    }\n</script>\n\n<div class=\"root\">\n    <div\n        class=\"header\"\n        on:click={() => (expanded = !expanded)}\n        data-uuid={power.uuid}\n        draggable=\"true\"\n        use:dragAsDoc={{ doc: power }}\n    >\n        <img class=\"icon hover\" src=\"icons/skills/social/diplomacy-writing-letter.webp\" />\n        <img class=\"icon cover\" src={power.img} on:click={sendToChat} />\n        <span>{power.name}</span>\n    </div>\n    {#if expanded}\n        <div class=\"description\" transition:slide>\n            <div>{@html power.system.description}</div>\n            <div style=\"float: right\">\n                <i class=\"fas fa-edit\" on:click={power.sheet.render(true, { focus: true })} />\n                <i class=\"fas fa-trash\" on:click={promptDelete} />\n            </div>\n        </div>\n    {/if}\n</div>\n\n<style lang=\"scss\">\n    .root {\n        display: flex;\n        flex-direction: column;\n        border: var(--primary-border);\n        border-radius: 10px;\n        padding: 5px;\n        margin: 2px;\n        grid-template: 30px 1fr / 1fr;\n    }\n    .header {\n        cursor: pointer;\n        font-weight: bold;\n        align-items: center;\n        display: flex;\n        flex-direction: row;\n        .icon {\n            width: 24px;\n            height: 24px;\n            transition: opacity 0.3s;\n            &.cover:hover {\n                opacity: 0%;\n            }\n            &.cover {\n                margin-left: -24px;\n            }\n        }\n        span {\n            margin-left: 5px;\n        }\n    }\n    i {\n        cursor: pointer;\n        margin-right: 5px;\n    }\n</style>\n","<script>\n    import { getContext } from \"svelte\";\n    import { localize } from \"../../../util/misc\";\n    import BoundedNumberDisplay from \"../../components/generic/BoundedNumberDisplay.svelte\";\n    import ActionRating from \"../../components/ActionRating.svelte\";\n    import PreviewBondPower from \"../../components/preview/PreviewBondPower.svelte\";\n    import { dragAsDoc } from \"../../actions/drag\";\n\n    let actor = getContext(\"tjs_actor\");\n\n    // Initialize our embedded categories\n    const name_alphabetical = (a, b) => a.name.localeCompare(b.name);\n    const bond_powers = actor.embedded.create(Item, {\n        name: \"bond-powers\",\n        filters: [(i) => i.type === \"bond-power\"],\n        sort: name_alphabetical,\n    });\n\n    /**\n     * Open the current bond for editing\n     */\n    function editBond() {\n        $actor.system.bond.sheet.render(true, { focus: true });\n    }\n</script>\n\n<section class=\"sheet-body narrative\">\n    <!-- Narrative Tab -->\n    <div class=\"leftcol\">\n        <div class=\"actions\">\n            {#each Object.keys($actor.system.actions) as action_name}\n                <ActionRating path={`system.actions.${action_name}`} />\n            {/each}\n        </div>\n        <div class=\"flexrow\">\n            <BoundedNumberDisplay name={localize(\"ICON.Strain\")} path=\"system.strain\" />\n            <BoundedNumberDisplay name={localize(\"ICON.Effort\")} path=\"system.effort\" />\n        </div>\n    </div>\n    <div class=\"midcol\">\n        {#each [...$bond_powers] as bp (bp.id)}\n            <PreviewBondPower power={bp} />\n        {/each}\n    </div>\n    <div class=\"rightcol\">\n        <div class=\"bond\">\n            {#if $actor.system.bond}\n                <h2\n                    style=\"text-align: center;\"\n                    data-tooltip={ $actor.system.bond.system.description }\n                    use:dragAsDoc={{ doc: $actor.system.bond }}\n                    draggable=\"true\"\n                >\n                    {$actor.system.bond.name}\n                    <i class=\"fas fa-edit fa-xs\" on:click={editBond} />\n                </h2>\n\n                <span>\n                    <strong>{localize(\"ICON.Bonds.SecondWind\")}</strong>\n                    {@html $actor.system.bond.system.second_wind}\n                </span>\n                <span>\n                    <strong>{localize(\"ICON.Bonds.SpecialAbility\")}:</strong>\n                    {@html $actor.system.bond.system.special_ability}\n                </span>\n                <span><strong>{localize(\"ICON.Bonds.Ideals\")}:</strong></span>\n                <ul>\n                    {#each $actor.system.bond.system.ideals as ideal}\n                        <li>{ideal}</li>\n                    {/each}\n                </ul>\n            {:else}\n                <h2>No Bonds</h2>\n                <p>{localize(\"ICON.Tutorial.AddBond\")}</p>\n            {/if}\n        </div>\n    </div>\n</section>\n\n<style lang=\"scss\">\n    section {\n        padding: 5px 5px 0px 5px;\n        flex: 1 0 auto;\n        max-height: calc(100% - 125px);\n\n        display: grid;\n        grid-template: 1fr / 220px 1fr 220px;\n        height: 100%;\n\n        .leftcol,\n        .midcol {\n            border-right: var(--primary-border);\n            padding-right: 10px;\n        }\n        .midcol,\n        .rightcol {\n            padding-left: 10px;\n        }\n\n        .actions {\n            grid-area: actions;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            border-bottom: var(--primary-border);\n            padding-bottom: 10px;\n        }\n    }\n</style>\n","import { writable } from \"svelte/store\";\n\n/** \n * Retrieves writeable stores by a unique key.\n * If the store does not exist, create it and set its vaalue to null\n */\nexport class KeyStoreLookup {\n    constructor() {\n        this.stores = new Map();\n    }\n\n    /**\n     * Retrieve the store with the provided name\n     *\n     * @param {string} key Key to lookup\n     *\n     * @param {any} initial initial value if it does not exist\n     */\n    get(key, initial = null) {\n        if (!this.stores.has(key)) {\n            this.stores.set(key, writable(initial));\n        }\n        return this.stores.get(key);\n    }\n\n    /**\n     * Nulls the specified key, effectively resetting any view dependent on it back to just showing initial tokens\n     *\n     * @param {string} key Key to clear\n     */\n    clear(key) {\n        this.stores.get(key).set(null);\n    }\n\n    /**\n     * Test function - should theoretically\n     */\n    clearAll() {\n        for (let key of this.stores.keys()) {\nthis.clear(key);\n}\n    }\n\n    /**\n     * Set all of object into our entries. This is worded horribly\n     *\n     * @param {Record<string, any>} obj \n     */\n    setFrom(obj) {\n        for (let [k, v] of Object.entries(obj)) {\n            this.get(k).set(v);\n        }\n    }\n}\n\n// Currently selected tokens\nexport const SELECTED_TOKENS = writable(new Set());\n\nHooks.on(\"controlToken\", (token, controlled) => {\n    if (controlled) {\n        SELECTED_TOKENS.update((s) => {\n            s.add(token);\n            return s;\n        });\n    } else {\n        SELECTED_TOKENS.update((s) => {\n            s.delete(token);\n            return s;\n        });\n    }\n});\n\n// Use this for tab selection\nexport const TAB_STORES = new KeyStoreLookup();","<script>\n    import { getContext } from \"svelte\";\n    import { updateDoc } from \"../actions/update\";\n    import { localize } from \"../../util/misc\";\n    import Tabs from \"../components/generic/Tabs.svelte\";\n    import Portrait from \"../components/Portrait.svelte\";\n    import { dropDocs } from \"../actions/drop\";\n    import CombatHud from \"../components/combat/CombatHud.svelte\";\n    import StatsDisplay from \"../components/combat/StatsDisplay.svelte\";\n    import { dragAsDoc } from \"../actions/drag\";\n    import Progression from \"./player/Progression.svelte\";\n    import Narrative from \"./player/Narrative.svelte\";\n    import { TAB_STORES } from \"../../util/stores\";\n\n    let actor = getContext(\"tjs_actor\");\n    let doc = actor; // Alias\n    // Set our tabs\n    const tabs = [\"ICON.Narrative\", \"ICON.Combat\", \"ICON.Progression\"].map((s) => ({\n        label: localize(s),\n        key: s,\n    }));\n    let selected_tab = TAB_STORES.get($actor.uuid, \"ICON.Narrative\");\n\n    /**\n     * Add dropped items to this actor\n     * @param {import(\"../../util/dragdrop\").ResolvedDrop} drop\n     */\n    function handleDrop(drop) {\n        // Destroy old job or bond\n        if (drop.type === \"Item\") {\n            if (drop.document.type === \"bond\") $actor.system.bond?.delete();\n            if (drop.document.type === \"job\") $actor.system.job?.delete();\n        }\n        // Create the item\n        $actor.createEmbeddedDocuments(\"Item\", [foundry.utils.duplicate(drop.document.toObject(true))]);\n    }\n\n    /**\n     * Test whether to allow the specified drop\n     * @param {import(\"../../util/dragdrop\").ResolvedDrop} drop Resolved drop data\n     */\n    function allowDrop(drop) {\n        return drop.type == \"Item\" && [\"bond-power\", \"bond\", \"job\", \"ability\", \"relic\"].includes(drop.document.type);\n    }\n    /**\n     * Open the current job for editing\n     */\n    function editJob() {\n        $actor.system.job.sheet.render(true, { focus: true });\n    }\n</script>\n\n<main use:dropDocs={{ handle: handleDrop, allow: allowDrop }}>\n    <!-- Sheet Header -->\n    <header>\n        <Portrait style=\"grid-area: pic\" />\n        <input style=\"grid-area: name\" type=\"text\" use:updateDoc={{ doc, path: \"name\" }} />\n        <input\n            style=\"grid-area: player_name\"\n            type=\"text\"\n            use:updateDoc={{ doc, path: \"system.player_name\" }}\n            placeholder=\"Player Name\"\n        />\n        <div style=\"grid-area: narr\" class=\"header-information\">\n            <span><strong>{localize(\"ICON.Kintype\")}:</strong></span>\n            <input type=\"text\" use:updateDoc={{ doc, path: \"system.kin\" }} />\n            <span><strong>{localize(\"ICON.Culture\")}:</strong> </span>\n            <input type=\"text\" use:updateDoc={{ doc, path: \"system.culture\" }} />\n            <span data-tooltip={$actor.system.bond ? null : localize(\"ICON.Tutorial.AddBond\")}>\n                <strong>{localize(\"ICON.Bonds.Bond\")}:</strong>\n            </span>\n            <span>{$actor.system.bond?.name ?? \"None\"}</span>\n        </div>\n        <div style=\"grid-area: comb\" class=\"header-information\">\n            <span><strong>{localize(\"ICON.Class\")}:</strong></span>\n            <span>{$actor.system.class?.player_class_name ?? \"None\"}</span>\n            <span data-tooltip={$actor.system.job ? null : localize(\"ICON.Tutorial.AddJob\")}>\n                <strong>{localize(\"ICON.Job\")}:</strong>\n            </span>\n            <span draggable=\"true\" use:dragAsDoc={{ doc: $actor.system.job }}>\n                {#if $actor.system.job}\n                    {$actor.system.job?.name}\n                    <i class=\"fas fa-edit\" style=\"float: right; cursor: pointer\" on:click={editJob} />\n                {:else}\n                    None\n                {/if}\n            </span>\n            <span>{localize(\"ICON.Level\")}:</span>\n            <input type=\"number\" use:updateDoc={{ doc, path: \"system.level\" }} />\n        </div>\n\n        <div style=\"grid-area: tabs\">\n            <!-- Sheet Tab Navigation -->\n            <Tabs {tabs} horizontal={false} bind:selected={$selected_tab} />\n        </div>\n    </header>\n\n    <!-- Sheet Body -->\n    {#if $selected_tab == \"ICON.Narrative\"}\n        <Narrative />\n    {:else if $selected_tab === \"ICON.Combat\"}\n        <section class=\"sheet-body combat\">\n            {#if $actor.system.job}\n                <StatsDisplay style=\"grid-area: stats\" />\n                <CombatHud />\n            {:else}\n                <span>\n                    {localize(\"ICON.Tutorial.AddJob\")}\n                </span> \n            {/if}\n        </section>\n    {:else if $selected_tab == \"ICON.Progression\"}\n        <Progression />\n    {:else}\n        <span>Tab does not exist</span>\n    {/if}\n</main>\n\n<style lang=\"scss\">\n    main {\n        height: 100%;\n        overflow: auto;\n        display: flex;\n        flex-direction: column;\n    }\n\n    header {\n        flex: 0 1 auto;\n        display: grid;\n        grid-template:\n            \"pic    name   player_name tabs\" 20px\n            \"pic    narr   comb        tabs\" 80px / 110px 1fr 1fr 1fr;\n        gap: 5px;\n        padding: 10px;\n\n        .header-information {\n            display: grid;\n            grid-template: 1fr 1fr 1fr / 1fr 1fr;\n            align-items: center;\n        }\n    }\n\n    .sheet-body {\n        padding: 5px 5px 0px 5px;\n        flex: 1 0 auto;\n        max-height: calc(100% - 162px);\n    }\n</style>\n","import { isObject } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\r\n * Provides a helper class to determine the version of the Foundry platform starting a version `9`.\r\n *\r\n * Note: You must use any of these utility methods after the Foundry `init` hook.\r\n */\r\nclass FVTTVersion\r\n{\r\n   static #regexMajorVersion = /(\\d+)\\./;\r\n\r\n   /**\r\n    * Returns true when Foundry is at least the specific major version number provided.\r\n    *\r\n    * @param {number}   version - Major version to check against.\r\n    *\r\n    * @returns {boolean} Foundry version is at least the major version specified.\r\n    */\r\n   static isAtLeast(version)\r\n   {\r\n      if (!Number.isInteger(version) && version < 9)\r\n      {\r\n         throw new TypeError(`'version' is not a positive integer greater than or equals '9'.`);\r\n      }\r\n\r\n      return !globalThis.foundry.utils.isNewerVersion(version, globalThis.game.version ??\r\n       globalThis.game?.data?.version);\r\n   }\r\n\r\n   /**\r\n    * Returns true when Foundry is between the min / max major version numbers provided.\r\n    *\r\n    * @param {number}   min - Major minimum version to check against.\r\n    *\r\n    * @param {number}   max - Major maximum version to check against.\r\n    *\r\n    * @returns {boolean} Foundry version is at least the major version specified.\r\n    */\r\n   static isBetween(min, max)\r\n   {\r\n      if (!Number.isInteger(min) && min < 9)\r\n      {\r\n         throw new TypeError(\r\n          `FVTTVersion.isBetween error: 'min' is not a positive integer greater than or equals '9'.`);\r\n      }\r\n\r\n      if (!Number.isInteger(max) && max < 9)\r\n      {\r\n         throw new TypeError(\r\n          `FVTTVersion.isBetween error: 'max' is not a positive integer greater than or equals '9'.`);\r\n      }\r\n\r\n      if (min > max)\r\n      {\r\n         throw new TypeError(`FVTTVersion.isBetween error: 'min' is greater than 'max'.`);\r\n      }\r\n\r\n      const match = this.#regexMajorVersion.exec(globalThis.game.version ?? globalThis.game?.data?.version);\r\n      if (!match)\r\n      {\r\n         throw new Error(`FVTTVersion.isBetween error: Could not parse 'globalThis.game.version'.`);\r\n      }\r\n\r\n      const version = parseInt(match[1], 10);\r\n\r\n      return version >= min && version <= max;\r\n   }\r\n}\n\n/**\r\n * Loads FVTT core fonts supporting `FontConfig` on Foundry v10+.\r\n *\r\n * Note: This class contains code modified from Foundry VTT core client code. There are only so many ways to process\r\n * core Foundry data structures correctly.\r\n */\r\nclass FontManager\r\n{\r\n   /**\r\n    * Collect all the font definitions and combine them.\r\n    *\r\n    * @returns { {[key: string]: globalThis.FontFamilyDefinition}[] } Core font definitions.\r\n    */\r\n   static getCoreDefinitions()\r\n   {\r\n      /** @type { {[key: string]: globalThis.FontFamilyDefinition}[] } */\r\n      const fonts = [];\r\n\r\n      if (FVTTVersion.isAtLeast(10))\r\n      {\r\n         let legacyFamilies;\r\n\r\n         /**\r\n          * @deprecated since v10, so check that it exists.\r\n          */\r\n         if (Array.isArray(globalThis.CONFIG?._fontFamilies))\r\n         {\r\n            legacyFamilies = globalThis.CONFIG._fontFamilies.reduce((obj, f) =>\r\n            {\r\n               obj[f] = { editor: true, fonts: [] };\r\n               return obj;\r\n            }, {});\r\n         }\r\n\r\n         if (Array.isArray(globalThis.CONFIG?.fontDefinitions))\r\n         {\r\n            fonts.push(globalThis.foundry.utils.duplicate(globalThis.CONFIG.fontDefinitions));\r\n         }\r\n\r\n         const coreFonts = globalThis.game?.settings.get('core', 'fonts');\r\n         if (Array.isArray(coreFonts))\r\n         {\r\n            fonts.push(globalThis.foundry.utils.duplicate(coreFonts));\r\n         }\r\n\r\n         if (legacyFamilies) { fonts.push(legacyFamilies); }\r\n      }\r\n      else\r\n      {\r\n         if (Array.isArray(globalThis.CONFIG?.fontFamilies))\r\n         {\r\n            // Handle v9 and below legacy font families.\r\n            const legacyFamilies = globalThis.CONFIG.fontFamilies.reduce((obj, f) =>\r\n            {\r\n               obj[f] = { editor: true, fonts: [] };\r\n               return obj;\r\n            }, {});\r\n\r\n            fonts.push(legacyFamilies);\r\n         }\r\n      }\r\n\r\n      FontManager.removeDuplicateDefinitions(fonts);\r\n\r\n      return fonts;\r\n   }\r\n\r\n   /**\r\n    * Load a font definition.\r\n    *\r\n    * @param {string}               fontSpecification - The font specification.\r\n    *\r\n    * @param {string}               family - The font family name (case-sensitive).\r\n    *\r\n    * @param {globalThis.FontFamilyDefinition} definition - The font family definition.\r\n    *\r\n    * @param {Document}             document - Target Document to load font into.\r\n    *\r\n    * @returns {Promise<boolean>} Returns true if the font was successfully loaded.\r\n    */\r\n   static async #loadFont(fontSpecification, family, definition, document)\r\n   {\r\n      try\r\n      {\r\n         for (const fontEntry of definition.fonts)\r\n         {\r\n            // Collect URLs from FontDefinition.\r\n            const urls = fontEntry.urls.map((url) => `url(\"${url}\")`).join(', ');\r\n\r\n            // Note: 'font' contains 'FontFaceDescriptors' data.\r\n            const fontFace = new FontFace(family, urls, fontEntry);\r\n            await fontFace.load();\r\n\r\n            document.fonts.add(fontFace);\r\n         }\r\n\r\n         await document.fonts.load(fontSpecification);\r\n      }\r\n      catch (err)\r\n      {\r\n         console.warn(`Font family \"${family}\" failed to load: `, err);\r\n         return false;\r\n      }\r\n\r\n      if (!document.fonts.check(fontSpecification))\r\n      {\r\n         console.warn(`Font family \"${family}\" failed to load.`);\r\n         return false;\r\n      }\r\n\r\n      return true;\r\n   }\r\n\r\n   /**\r\n    * Ensure that fonts have loaded and are ready for use.\r\n    * Enforce a maximum timeout in milliseconds.\r\n    * Proceed after that point even if fonts are not yet available.\r\n    *\r\n    * @param {object} [opts] - Optional parameters.\r\n    *\r\n    * @param {number} [opts.ms=4500] - The maximum time to spend loading fonts before proceeding.\r\n    *\r\n    * @param {Document} [opts.document] - The target document to load the fonts into.\r\n    *\r\n    * @param {boolean} [opts.editor=true] - When true verifies the `editor` field of {@link FontFamilyDefinition}.\r\n    *\r\n    * @param {(\r\n    *    {[key: string]: globalThis.FontFamilyDefinition}[] |\r\n    *    {[key: string]: globalThis.FontFamilyDefinition}\r\n    * )} [opts.fonts] - A custom set of font family definitions to load. If not defined the core font family definitions\r\n    *    are loaded.\r\n    *\r\n    * @returns {Promise<void>}\r\n    */\r\n   static async loadFonts({ ms = 4500, document = globalThis.document, editor = true, fonts } = {})\r\n   {\r\n      // TODO sanity checks\r\n\r\n      const allFonts = fonts ? Array.isArray(fonts) ? fonts : [fonts] : this.getCoreDefinitions();\r\n\r\n      const promises = [];\r\n\r\n      for (const definitions of allFonts)\r\n      {\r\n         if (isObject(definitions))\r\n         {\r\n            for (const [family, definition] of Object.entries(definitions))\r\n            {\r\n               // Don't load a font that is not marked to be used in the editor.\r\n               if (editor && (typeof definition.editor !== 'boolean' || !definition.editor)) { continue; }\r\n\r\n               const fontSpecification = `1rem \"${family}\"`;\r\n\r\n               // Early out if the font is already loaded.\r\n               if (document.fonts.check(fontSpecification)) { continue; }\r\n\r\n               promises.push(this.#loadFont(fontSpecification, family, definition, document));\r\n            }\r\n         }\r\n      }\r\n\r\n      const timeout = new Promise((resolve) => setTimeout(resolve, ms));\r\n      const ready = Promise.all(promises).then(() => document.fonts.ready);\r\n\r\n      return Promise.race([ready, timeout]);\r\n   }\r\n\r\n   /**\r\n    * Removes duplicate font definitions.\r\n    *\r\n    * @param { {[key: string]: globalThis.FontFamilyDefinition}[] }  fonts - An array of FontFamilyDefinition objects\r\n    *        to process.\r\n    *\r\n    * @returns { {[key: string]: globalThis.FontFamilyDefinition}[] } Filtered font definitions.\r\n    */\r\n   static removeDuplicateDefinitions(fonts)\r\n   {\r\n      if (!Array.isArray(fonts))\r\n      {\r\n         throw new TypeError(`FontManager.removeDuplicateDefinitions error: 'fonts' is not an array.`);\r\n      }\r\n\r\n      const familySet = new Set();\r\n\r\n      for (const definitions of fonts)\r\n      {\r\n         if (!isObject(definitions))\r\n         {\r\n            throw new TypeError(`FontManager.removeDuplicateDefinitions error: 'definitions' is not an object.`);\r\n         }\r\n\r\n         for (const family of Object.keys(definitions))\r\n         {\r\n            // Remove duplicate from current definitions set.\r\n            if (familySet.has(family))\r\n            {\r\n               delete definitions[family];\r\n            }\r\n            else\r\n            {\r\n               familySet.add(family);\r\n            }\r\n         }\r\n      }\r\n\r\n      return fonts;\r\n   }\r\n}\n\n/**\r\n * Parses the core Foundry style sheet creating an indexed object of properties by selector.\r\n */\r\nclass FoundryStyles\r\n{\r\n   static #sheet = void 0;\r\n\r\n   /** @type {Map<string, {[key: string]: string}>} */\r\n   static #sheetMap = new Map();\r\n\r\n   static #initialized = false;\r\n\r\n   /**\r\n    * Called once on initialization / first usage. Parses the core foundry style sheet.\r\n    */\r\n   static #initialize()\r\n   {\r\n      this.#initialized = true;\r\n\r\n      const styleSheets = Array.from(document.styleSheets).filter((entry) => entry.href !== null);\r\n\r\n      let sheet;\r\n\r\n      const foundryStyleSheet = globalThis.foundry.utils.getRoute('/css/style.css');\r\n\r\n      // Find the core Foundry stylesheet.\r\n      for (const styleSheet of styleSheets)\r\n      {\r\n         let url;\r\n\r\n         try\r\n         {\r\n            url = new URL(styleSheet.href);\r\n         }\r\n         catch (err) { continue; }\r\n\r\n         if (typeof url.pathname === 'string' && url.pathname === foundryStyleSheet)\r\n         {\r\n            this.#sheet = sheet = styleSheet;\r\n            break;\r\n         }\r\n      }\r\n\r\n      // Quit now if the Foundry style sheet was not found.\r\n      if (!sheet) { return; }\r\n\r\n      // Parse each CSSStyleRule and build the map of selectors to parsed properties.\r\n      for (const rule of sheet.cssRules)\r\n      {\r\n         if (!(rule instanceof CSSStyleRule)) { continue; }\r\n\r\n         const obj = {};\r\n\r\n         // Parse `cssText` into an object of properties & values.\r\n         for (const entry of rule.style.cssText.split(';'))\r\n         {\r\n            const parts = entry.split(':');\r\n\r\n            // Sanity check.\r\n            if (parts.length < 2) { continue; }\r\n\r\n            obj[parts[0].trim()] = parts[1].trim();\r\n         }\r\n\r\n         this.#sheetMap.set(rule.selectorText, obj);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Gets the properties object associated with the selector. Try and use a direct match otherwise all keys\r\n    * are iterated to find a selector string that includes the `selector`.\r\n    *\r\n    * @param {string}   selector - Selector to find.\r\n    *\r\n    * @returns { {[key: string]: string} } Properties object.\r\n    */\r\n   static getProperties(selector)\r\n   {\r\n      if (!this.#initialized) { this.#initialize(); }\r\n\r\n      // If there is a direct selector match then return a value immediately.\r\n      if (this.#sheetMap.has(selector))\r\n      {\r\n         return this.#sheetMap.get(selector);\r\n      }\r\n\r\n      for (const key of this.#sheetMap.keys())\r\n      {\r\n         if (key.includes(selector)) { return this.#sheetMap.get(key); }\r\n      }\r\n\r\n      return void 0;\r\n   }\r\n\r\n   /**\r\n    * Gets a specific property value from the given `selector` and `property` key. Try and use a direct selector\r\n    * match otherwise all keys are iterated to find a selector string that includes `selector`.\r\n    *\r\n    * @param {string}   selector - Selector to find.\r\n    *\r\n    * @param {string}   property - Specific property to locate.\r\n    *\r\n    * @returns {string|undefined} Property value.\r\n    */\r\n   static getProperty(selector, property)\r\n   {\r\n      if (!this.#initialized) { this.#initialize(); }\r\n\r\n      // If there is a direct selector match then return a value immediately.\r\n      if (this.#sheetMap.has(selector))\r\n      {\r\n         const data = this.#sheetMap.get(selector);\r\n         return isObject(data) && property in data ? data[property] : void 0;\r\n      }\r\n\r\n      for (const key of this.#sheetMap.keys())\r\n      {\r\n         if (key.includes(selector))\r\n         {\r\n            const data = this.#sheetMap.get(key);\r\n            if (isObject(data) && property in data) { return data[property]; }\r\n         }\r\n      }\r\n\r\n      return void 0;\r\n   }\r\n}\n\nexport { FVTTVersion, FontManager, FoundryStyles };\n//# sourceMappingURL=index.js.map\n","import { TJSStyleManager } from '@typhonjs-fvtt/runtime/util/browser';\r\n\r\nexport const cssVariables = new TJSStyleManager({ docKey: '#__tjs-root-styles', version: 1 });\r\n","import { clamp } from '@typhonjs-fvtt/runtime/math/util';\n\n/**\r\n * Provides helper utilities to manipulate the PM editor view for various options from TJSProseMirror component.\r\n */\r\nclass PMImpl\r\n{\r\n   /**\r\n    * Handles `options.initialSelection`: Sets the initial cursor / selection range to the start, end, or selects\r\n    * all text.\r\n    *\r\n    * @param {globalThis.EditorView}  view - PM editor view.\r\n    *\r\n    * @param {object}  options - TJSProseMirror options.\r\n    */\r\n   static setInitialSelection(view, options)\r\n   {\r\n      const tr = view.state.tr;\r\n      const doc = tr.doc;\r\n\r\n      const initialSelection = options.initialSelection;\r\n\r\n      const type = initialSelection === 'all' || initialSelection === 'end' || initialSelection === 'start' ?\r\n       initialSelection : 'start';\r\n\r\n      const minPos = globalThis.ProseMirror.TextSelection.atStart(doc).from;\r\n      const maxPos = globalThis.ProseMirror.TextSelection.atEnd(doc).to;\r\n\r\n      let transaction;\r\n\r\n      switch (type)\r\n      {\r\n         case 'all':\r\n         {\r\n            const resolvedFrom = clamp(0, minPos, maxPos);\r\n            const resolvedEnd = clamp(doc.content.size, minPos, maxPos);\r\n            transaction = tr.setSelection(globalThis.ProseMirror.TextSelection.create(doc, resolvedFrom, resolvedEnd));\r\n            break;\r\n         }\r\n\r\n         case 'end':\r\n         {\r\n            const resolvedFrom = clamp(doc.content.size, minPos, maxPos);\r\n            const resolvedEnd = clamp(doc.content.size, minPos, maxPos);\r\n            transaction = tr.setSelection(globalThis.ProseMirror.TextSelection.create(doc, resolvedFrom, resolvedEnd));\r\n            break;\r\n         }\r\n\r\n         case 'start':\r\n         {\r\n            const resolvedFrom = clamp(0, minPos, maxPos);\r\n            const resolvedEnd = clamp(0, minPos, maxPos);\r\n            transaction = tr.setSelection(globalThis.ProseMirror.TextSelection.create(doc, resolvedFrom, resolvedEnd));\r\n            break;\r\n         }\r\n      }\r\n\r\n      if (transaction)\r\n      {\r\n         transaction.scrollIntoView();\r\n\r\n         view.dispatch(transaction);\r\n      }\r\n   }\r\n}\n\nexport { PMImpl };\n//# sourceMappingURL=index.js.map\n","// Protect for absent global `ProseMirror` on Foundry v9.\r\nconst ProseMirrorKeyMaps = globalThis.ProseMirror ? globalThis.ProseMirror.ProseMirrorKeyMaps : class {};\r\n\r\n/**\r\n * Provides an additional key mapping to `Escape` to destroy / cancel the active editor.\r\n */\r\nclass TJSKeyMaps extends ProseMirrorKeyMaps\r\n{\r\n   /** @type {Function} */\r\n   #onQuit;\r\n\r\n   /**\r\n    * @param {globalThis.Schema}   schema - The ProseMirror schema to build keymaps for.\r\n    *\r\n    * @param {object}   [options] - Additional options to configure the plugin's behaviour.\r\n    *\r\n    * @param {Function} [options.onSave] - A function to call when Ctrl+S is pressed.\r\n    *\r\n    * @param {Function} [options.onQuit] - A function to call when Ctrl+Q is pressed.\r\n    */\r\n   constructor(schema, options)\r\n   {\r\n      super(schema, options);\r\n\r\n      if (typeof options.onQuit === 'function') { this.#onQuit = options.onQuit; }\r\n   }\r\n\r\n   // eslint-disable-next jsdoc/check-types\r\n   /**\r\n    * Swaps the Foundry default `Escape` / selectParentNode to `Mod-p` and enables `onQuit` function for `Escape`.\r\n    *\r\n    * @returns { {[key: string]: globalThis.ProseMirrorCommand} } ProseMirror keymap data.\r\n    */\r\n   buildMapping()\r\n   {\r\n      const mapping = super.buildMapping();\r\n\r\n      // Add onQuit callback if defined.\r\n      if (this.#onQuit)\r\n      {\r\n         // Swap Foundry core mapping for `Escape` / selectParentNode to `Mod-p`.\r\n         if (mapping['Escape']) { mapping['Mod-p'] = mapping['Escape']; }\r\n\r\n         mapping['Escape'] = () => this.#onQuit();\r\n      }\r\n\r\n      return mapping;\r\n   }\r\n}\n\n// Protect for absent global `ProseMirror` on Foundry v9.\r\nconst Plugin = globalThis.ProseMirror ? globalThis.ProseMirror.Plugin : class {};\r\n\r\n/**\r\n * A ProseMirror plugin to transform pasted text that is a raw document UUID into a document link suitable for\r\n * `TextEditor.enrichHTML`.\r\n */\r\nclass TJSPasteUUID\r\n{\r\n   /**\r\n    * Defines a regex to check for the shape of a raw Foundry document UUID.\r\n    *\r\n    * @type {RegExp}\r\n    */\r\n   static #s_UUID_REGEX = /(\\.).*([a-zA-Z0-9]{16})/;\r\n\r\n   /**\r\n    * @returns {Plugin<any>} PM Plugin.\r\n    */\r\n   static build()\r\n   {\r\n      const instance = new this();\r\n      return new Plugin({\r\n         // key: new PluginKey('tjsPasteRawUUID'), // TODO: Add back when exported by Foundry / ProseMirror bundle.\r\n         props: {\r\n            transformPastedText: (text) => instance.#transformUUID(text)\r\n         }\r\n      });\r\n   }\r\n\r\n   /**\r\n    * Transforms pasted text. Check if pasted test matches the shape of a raw UUID. If so do a lookup and if a\r\n    * document is retrieved transform it to a document link.\r\n    *\r\n    * @param {string}   text - pasted text to transform.\r\n    *\r\n    * @returns {string} Potentially transformed pasted text.\r\n    */\r\n   #transformUUID(text)\r\n   {\r\n      if (typeof text === 'string')\r\n      {\r\n         if (TJSPasteUUID.#s_UUID_REGEX.test(text))\r\n         {\r\n            const uuidDoc = globalThis.fromUuidSync(text);\r\n            if (uuidDoc)\r\n            {\r\n               text = `@UUID[${text}]{${typeof uuidDoc.name === 'string' ? uuidDoc.name : 'Unknown'}}`;\r\n            }\r\n         }\r\n      }\r\n\r\n      return text;\r\n   }\r\n}\n\nexport { TJSKeyMaps, TJSPasteUUID };\n//# sourceMappingURL=index.js.map\n","<script>\r\n   /**\r\n    * Provides a reactive wrapper for Foundry ProseMirror editor support. Allows editing Foundry document data or\r\n    * directly from content prop. Automatic HTML enrichment occurs for the content when saved.\r\n    *\r\n    * There are no required props, but the following are available to set.\r\n    * `content` - Provides an initial content string; you can bind to `content` from a parent component to get reactive\r\n    *             updates when `content` changes. Two-way binding.\r\n    *\r\n    * `enrichedContent` - Provides the enriched content via {@link TextEditor.enrichHTML} when `content` changes.\r\n    *             You can bind to `enrichedContent` from a parent component to get reactive updates though it is not\r\n    *             recommended to change `enrichedContent` externally. One-way binding.\r\n    *\r\n    * `options` - Defines the options object for this component and passed on to the Foundry TinyMCE support.\r\n    *             Please review all the options defined below {@link TJSProseMirrorOptions}.\r\n    *\r\n    *\r\n    * Notable options passed onto Foundry ProseMirror support.\r\n    * ---------------------------------\r\n    *\r\n    * `options.collaborate` - [boolean: false] When a `document` and `fieldName` is provided set this to true to enable\r\n    *                         collaborative editing.\r\n    *\r\n    * `options.plugins` - [object] An additional set of ProseMirror plugins to load.\r\n    *\r\n    *\r\n    * Events: There are three events fired when the editor is canceled, saved, and started.\r\n    * ---------------------------------\r\n    * `editor:cancel` - Fired when editing is canceled by a user action or reactive response to document changes.\r\n    *\r\n    * `editor:document:deleted` - Fired when the edited document is deleted. Access the document from\r\n    *                             `event.detail.document`.\r\n    *\r\n    * `editor:enrichedContent` - Fired when content is enriched. Access enriched content from\r\n    *                            `event.detail.enrichedContent`.\r\n    *\r\n    * `editor:save` - Fired when editing is saved. Access the content from `event.detail.content`.\r\n    *\r\n    * `editor:start` - Fired when editing is started.\r\n    *\r\n    * The following CSS variables control the associated styles with the default values.\r\n    *\r\n    * `.editor` HTMLDivElement:\r\n    * ---------------------------------\r\n    * --tjs-editor-background - none\r\n    * --tjs-editor-border - none\r\n    * --tjs-editor-border-radius - 0\r\n    * --tjs-editor-height - 100%\r\n    * --tjs-editor-margin - 0\r\n    * --tjs-editor-overflow - auto\r\n    * --tjs-editor-transition\r\n    * --tjs-editor-width - 100%\r\n    *\r\n    * `.editor` HTMLDivElement; properties available when activated:\r\n    * ---------------------------------\r\n    * --tjs-editor-active-box-shadow, unset; Foundry default: 0 0 5px var(--color-shadow-primary)\r\n    * --tjs-editor-active-outline - unset\r\n    * --tjs-editor-active-overflow - unset; When inactive the editor overflow is auto; when active overflow is unset.\r\n    *\r\n    * `.editor` HTMLDivElement; properties available when inactive, but manually focused:\r\n    * ---------------------------------\r\n    * --tjs-editor-inactive-box-shadow-focus-visible - fallback: --tjs-default-box-shadow-focus-visible\r\n    * --tjs-editor-inactive-outline-focus-visible - fallback: --tjs-default-outline-focus-visible; default: revert\r\n    * --tjs-editor-inactive-transition-focus-visible - fallback: --tjs-default-transition-focus-visible\r\n    *\r\n    * `.editor` HTMLDivElement; properties available when inactive, but hovered:\r\n    * ---------------------------------\r\n    * --tjs-editor-inactive-cursor-hover - text\r\n    * --tjs-editor-inactive-box-shadow-hover - unset\r\n    * --tjs-editor-inactive-outline-hover - unset\r\n    * --tjs-editor-inactive-user-select-hover - text\r\n    *\r\n    * `.editor-content` HTMLDivElement; when editing - the content overflow is set to auto:\r\n    * ---------------------------------\r\n    * --tjs-editor-content-overflow - auto\r\n    * --tjs-editor-content-padding - 0 0 0 0.25em\r\n    *\r\n    * `.editor-container` HTMLDivElement; when editing - removes default margins.\r\n    * ---------------------------------\r\n    * --tjs-editor-container-margin - 0\r\n    *\r\n    * .editor-edit; Defines the position of the edit button from top / right absolute positioning:\r\n    * ---------------------------------\r\n    * --tjs-editor-edit-button-right - 5px\r\n    * --tjs-editor-edit-button-top - 0\r\n    *\r\n    * .editor-menu; Defines the toolbar / menu.\r\n    * ---------------------------------\r\n    * --tjs-editor-toolbar-background - rgba(0, 0, 0, 0.1)\r\n    * --tjs-editor-toolbar-border-radius - 6px\r\n    * --tjs-editor-toolbar-box-shadow - 0 2px 2px -2px rgb(34 47 62 / 10%), 0 8px 8px -4px rgb(34 47 62 / 7%)\r\n    * --tjs-editor-toolbar-padding - 2px 0\r\n    * --tjs-editor-toolbar-width - 100%\r\n    */\r\n\r\n   /**\r\n    * @typedef {object} TJSProseMirrorOptions\r\n    *\r\n    * @property {boolean}   [button=true] Provides an edit button to start editing. When button is false editing is\r\n    * always enabled.\r\n    *\r\n    * @property {string[]}  [classes] An array of strings to add to the `.editor` element classes. This allows easier\r\n    * setting of CSS variables across a range of various editor components.\r\n    *\r\n    * @property {boolean}   [clickToEdit=false] When true the edit button is not shown and a click on the editor\r\n    * content initializes the editor.\r\n    *\r\n    * @property {boolean}   [collaborate=false] Enables ProseMirror collaboration; requires a document to be set.\r\n    *\r\n    * @property {foundry.abstract.Document}   [document] Set to a Foundry document to load and save content from it.\r\n    * Requires `fieldName` to be set.\r\n    *\r\n    * @property {{ sanitizeWithVideo: function }}   [DOMPurify] The DOMPurify export from\r\n    * `@typhonjs-fvtt/runtime/security/client/dompurify`. Sanitizes content client side. Note: TinyMCE already does essential\r\n    * `<script>` sanitization, so this is just an extra option that is available as an extra precaution.\r\n    *\r\n    * @property {boolean}   [editable=true] Prevents editing and hides button. When set to false any active editor\r\n    * is cancelled.\r\n    *\r\n    * @property {boolean}   [enrichContent=true] When set to false content won't be enriched by `TextEditor.enrichHTML`.\r\n    *\r\n    * @property {string}    [fieldName] A field name to load and save to / from associated document. IE `a.b.c`.\r\n    *\r\n    * @property {'all'|'end'|'start'}   [initialSelection='start'] Initial selection range; 'all', 'end' or 'start'.\r\n    *\r\n    * @property {string}    [keyCode='Enter'] Defines the key event code to activate the editor when focused.\r\n    *\r\n    * @property {Object<string, string>}   [styles] Additional CSS property names and values to set as inline styles.\r\n    * This is useful for dynamically overriding any built in styles and in particular setting CSS variables supported.\r\n    */\r\n\r\n   /**\r\n    * The following options that both {@link TJSTinyMCE} and {@link TJSContentEdit} support likely won't be implemented\r\n    * for the ProseMirror component as they involve significant effort in modifying ProseMirror which is not trivial at\r\n    * all without potentially weeks of work or entirely replacing the built-in Foundry ProseMirror toolbar / support.\r\n    *\r\n    * // @property {Object<FontFamilyDefinition>}    [fonts] An additional object defining module / custom fonts to\r\n    * // load specific to this editor.\r\n    *\r\n    * // @property {number}    [maxCharacterLength] When defined as an integer greater than 0 this limits the max\r\n    * // characters that can be entered.\r\n    *\r\n    * // @property {boolean}   [preventEnterKey=false] When true this prevents enter key from creating a new line /\r\n    * // paragraph.\r\n    *\r\n    * // @property {boolean}   [preventPaste=false] Prevents pasting content into the editor.\r\n    *\r\n    * // @property {boolean}   [saveOnBlur=false] When true any loss of focus / blur from the editor saves the editor\r\n    * // state.\r\n    *\r\n    * // @property {boolean}   [saveOnEnterKey=false] When true saves the editor state when the enter key is pressed.\r\n    * // This is useful when configuring the editor for single line entry.\r\n    */\r\n\r\n   /**\r\n    * @typedef {object} PMEditorExtra Defines extra data passed to TJSEditorOptions ProseMirror plugin.\r\n    *\r\n    * @property {string} initialSelectionDefault The default value if `options.initialSelection is not defined.\r\n    */\r\n\r\n   import {\r\n      createEventDispatcher,\r\n      onDestroy,\r\n      onMount,\r\n      tick\r\n   }                        from 'svelte';\r\n\r\n   import { applyStyles }   from '@typhonjs-fvtt/runtime/svelte/action/dom';\r\n   import { TJSDocument }   from '@typhonjs-fvtt/runtime/svelte/store/fvtt/document';\r\n   import { isObject }      from '@typhonjs-fvtt/runtime/util/object';\r\n\r\n   import { PMImpl }        from '@typhonjs-fvtt/svelte-standard/prosemirror';\r\n   import * as Plugins  \tfrom '@typhonjs-fvtt/svelte-standard/prosemirror/plugins';\r\n\r\n   /** @type {string} */\r\n   export let content = '';\r\n\r\n   /** @type {string} */\r\n   export let enrichedContent = '';\r\n\r\n   /**\r\n    * Provides the options object that can be reactively updated. See documentation above.\r\n    *\r\n    * @type {TJSProseMirrorOptions}\r\n    */\r\n   export let options = {};\r\n\r\n   const dispatch = createEventDispatcher();\r\n\r\n   // Provides reactive updates for any associated Foundry document.\r\n   const doc = new TJSDocument({ delete: onDocumentDeleted });\r\n\r\n   /** @type {boolean} */\r\n   let clickToEdit;\r\n\r\n   /** @type {boolean} */\r\n   let editable = true;\r\n\r\n   /** @type {HTMLDivElement} */\r\n   let editorContentEl;\r\n\r\n   /** @type {ProseMirrorEditor} */\r\n   let editor;\r\n\r\n   /** @type {boolean} */\r\n   let editorActive = false;\r\n\r\n   /** @type {boolean} */\r\n   let editorButton;\r\n\r\n   /** @type {HTMLDivElement} */\r\n   let editorEl;\r\n\r\n   /** @type {string} */\r\n   let keyCode;\r\n\r\n   /** @type {boolean} */\r\n   let keyFocused = false;\r\n\r\n   /**\r\n    * Respond to changes in `options.editable`.\r\n    */\r\n   $:\r\n   {\r\n      editable = typeof options.editable === 'boolean' ? options.editable : true;\r\n      if (!editable) { destroyEditor(); }\r\n   }\r\n\r\n   /**\r\n    * When `options.editable` & `options.clickToEdit` is true and the editor is not active enable clickToEdit.\r\n    */\r\n   $: clickToEdit = !editorActive && editable &&\r\n    (typeof options.clickToEdit === 'boolean' ? options.clickToEdit : false);\r\n\r\n   /**\r\n    * When `options.button` & `options.editable` is true and the editor is not active and `clickToEdit` is false\r\n    * enable the edit button.\r\n    */\r\n   $: editorButton = !editorActive && editable && (typeof options.button === 'boolean' ? options.button : true) &&\r\n    !clickToEdit;\r\n\r\n   /**\r\n    * Allows another KeyboardEvent.code to be used to activate the editor.\r\n    */\r\n   $: keyCode = typeof options.keyCode === 'string' ? options.keyCode : 'Enter';\r\n\r\n   /**\r\n    * Respond to changes in `options.document`\r\n    */\r\n   $: if (options.document !== void 0)\r\n   {\r\n      if (!(options.document instanceof globalThis.foundry.abstract.Document))\r\n      {\r\n         throw new TypeError(`TJSProseMirror error: 'options.document' is not a Foundry document.`);\r\n      }\r\n\r\n      if (typeof options.fieldName !== 'string')\r\n      {\r\n         throw new TypeError(\r\n          `TJSProseMirror error: 'options.document' is defined, but 'options.fieldName' is not a string.`);\r\n      }\r\n\r\n      // Remove any existing editor if document changes.\r\n      if (options.document !== $doc)\r\n      {\r\n         enrichedContent = '';\r\n         content = '';\r\n         destroyEditor();\r\n      }\r\n\r\n      doc.set(options.document);\r\n   }\r\n   else\r\n   {\r\n      // Remove any existing editor if there was a document set, but now it is removed.\r\n      if ($doc)\r\n      {\r\n         enrichedContent = '';\r\n         content = '';\r\n\r\n         destroyEditor();\r\n\r\n         doc.set(void 0);\r\n      }\r\n   }\r\n\r\n   // If there is a valid document then retrieve content from `fieldName` otherwise use `content` string.\r\n   $:\r\n   {\r\n      content = $doc !== void 0 ? globalThis.foundry.utils.getProperty($doc, options.fieldName) :\r\n       typeof content === 'string' ? content : '';\r\n\r\n      // Avoid double trigger of reactive statement as enriching content is async.\r\n      onContentChanged(content, typeof options.enrichContent === 'boolean' ? options.enrichContent : true);\r\n   }\r\n\r\n   onDestroy(() =>\r\n   {\r\n      // Handle the case when the component is destroyed / IE application closed, but the editor isn't saved.\r\n      if (editorActive)\r\n      {\r\n         saveEditor({ remove: typeof options.button === 'boolean' ? options.button : true });\r\n      }\r\n      else\r\n      {\r\n         destroyEditor();\r\n      }\r\n   });\r\n\r\n   /**\r\n    * If `options.editable` is true and `options.button` && `options.clickToEdit` is false then start the editor on\r\n    * mount.\r\n    */\r\n   onMount(() => { if (editable && !editorButton && !clickToEdit) { initEditor(); } });\r\n\r\n   /**\r\n    * Destroys any active editor.\r\n    */\r\n   function destroyEditor(fireCancel = true)\r\n   {\r\n      if (editor)\r\n      {\r\n         editor.destroy();\r\n         editor = void 0;\r\n\r\n         // Post on next micro-task to allow any event propagation for `Escape` key to trigger first.\r\n         setTimeout(() => { editorActive = false; }, 0);\r\n\r\n         // If the editor was initialized by keyboard action then focus it after a short delay to allow the template\r\n         // to update.\r\n         if (keyFocused)\r\n         {\r\n            keyFocused = false;\r\n\r\n            setTimeout(() =>\r\n            {\r\n               if (editorEl instanceof HTMLElement && editorEl?.isConnected) { editorEl.focus(); }\r\n            }, 100);\r\n         }\r\n\r\n         if (fireCancel) { dispatch('editor:cancel'); }\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Initializes editor.\r\n    *\r\n    * @returns {Promise<void>}\r\n    */\r\n   async function initEditor()\r\n   {\r\n      // If editor button is enabled then remove the menu / editing interface on save.\r\n      const remove = typeof options.button === 'boolean' ? options.button : true;\r\n\r\n      const editorOptions = {\r\n         ...options,\r\n\r\n         plugins: {\r\n            ...ProseMirror.defaultPlugins,\r\n\r\n            menu: ProseMirror.ProseMirrorMenu.build(ProseMirror.defaultSchema, {\r\n               destroyOnSave: remove,\r\n               onSave: () => saveEditor({ remove })\r\n            }),\r\n\r\n            keyMaps: Plugins.TJSKeyMaps.build(ProseMirror.defaultSchema, {\r\n               onSave: () => saveEditor({ remove }),\r\n               onQuit: () => destroyEditor()\r\n            }),\r\n\r\n            tjsPasteRawUUID: Plugins.TJSPasteUUID.build(),\r\n\r\n            ...(isObject(options.plugins) ? options.plugins : {})\r\n         }\r\n      };\r\n\r\n      editorActive = true;\r\n\r\n      // Editor is now active; wait until the template updates w/ new bound `editorContentEl`.\r\n      await tick();\r\n\r\n      editor = await ProseMirrorEditor.create(editorContentEl, content, editorOptions);\r\n\r\n      // `.editor-container` div is added automatically; add inline style to set margin to 0.\r\n      const containerEl = editorEl.querySelector('.editor-container');\r\n      if (containerEl) { containerEl.style = 'margin: var(--tjs-editor-container-margin, 0)'; }\r\n\r\n      editor.view.focus();\r\n\r\n      PMImpl.setInitialSelection(editor.view, options);\r\n\r\n      dispatch('editor:start');\r\n   }\r\n\r\n   /**\r\n    * Potentially handles initializing the editor when it is not active and `options.clickToEdit` is true.\r\n    *\r\n    * @param {MouseEvent}   event -\r\n    */\r\n   function onClick(event)\r\n   {\r\n      if (!editorActive && clickToEdit) { initEditor(); }\r\n   }\r\n\r\n   /**\r\n    * Separated into a standalone method so applying async value to enriched content doesn't double trigger a reactive\r\n    * statement twice.\r\n    *\r\n    * @param {string}   content - Content prop.\r\n    *\r\n    * @param {boolean}  enrichContent - `options.enrichContent` or default of `true.\r\n    *\r\n    * @returns {Promise<void>}\r\n    */\r\n   async function onContentChanged(content, enrichContent)\r\n   {\r\n      if (typeof content === 'string')\r\n      {\r\n         if (enrichContent)\r\n         {\r\n            enrichedContent = await TextEditor.enrichHTML(content, { async: true, secrets: globalThis.game.user.isGM });\r\n         }\r\n         else\r\n         {\r\n            enrichedContent = content;\r\n         }\r\n      }\r\n      else\r\n      {\r\n         enrichedContent = '';\r\n      }\r\n\r\n      dispatch('editor:enrichedContent', { enrichedContent });\r\n   }\r\n\r\n   /**\r\n    * Handles cleaning up the editor state after any associated document has been deleted.\r\n    *\r\n    * @param {foundry.abstract.Document} document - The deleted document.\r\n    */\r\n   function onDocumentDeleted(document)\r\n   {\r\n      options.document = void 0;\r\n\r\n      destroyEditor();\r\n\r\n      dispatch('editor:document:deleted', { document });\r\n\r\n      content = '';\r\n      enrichedContent = '';\r\n   }\r\n\r\n   /**\r\n    * Prevents `Escape` key or `Ctrl-s` from propagating when the editor is active preventing the app from being closed.\r\n    * The `Escape` key is used to close the active editor first. Foundry by default when `Ctrl-s` is pressed as of v10\r\n    * scrolls the canvas down which is undesired when saving an editor as well.\r\n    *\r\n    * @param {KeyboardEvent}    event - A keyboard event from `.editor`.\r\n    */\r\n   function onKeydown(event)\r\n   {\r\n      if (editorActive)\r\n      {\r\n         if (event.code === 'Escape' || (event.code === 'KeyS' && (event.ctrlKey || event.metaKey)))\r\n         {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n         }\r\n      }\r\n      else\r\n      {\r\n         if (event.code === keyCode)\r\n         {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n         }\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Handle activating the editor if key codes match.\r\n    *\r\n    * @param {KeyboardEvent}    event - A KeyboardEvent.\r\n    */\r\n   function onKeyup(event)\r\n   {\r\n      if (event.code === keyCode)\r\n      {\r\n         if (!editorActive)\r\n         {\r\n            keyFocused = true;\r\n            initEditor();\r\n         }\r\n\r\n         event.preventDefault();\r\n         event.stopPropagation();\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Saves the editor contents to the associated document or updates content directly.\r\n    *\r\n    * @param {object}   [opts] - Optional parameters.\r\n    *\r\n    * @param {boolean}  [opts.remove=true] - Removes the editor.\r\n    */\r\n   function saveEditor({ remove = true } = {})\r\n   {\r\n      if (editor)\r\n      {\r\n         if (editor.isDirty())\r\n         {\r\n            let data = ProseMirror.dom.serializeString(editor.view.state.doc);\r\n\r\n            // Perform client side sanitization if DOMPurify is available in options.\r\n            // ProseMirror does essential `<script>` based sanitization, so this is just an extra option to provide\r\n            // specific sanitization.\r\n            if (options?.DOMPurify && typeof options?.DOMPurify?.sanitizeWithVideo === 'function')\r\n            {\r\n               data = options.DOMPurify.sanitizeWithVideo(data);\r\n            }\r\n\r\n            // Save to document if available\r\n            if ($doc && options.fieldName)\r\n            {\r\n               $doc.update({ [options.fieldName]: data })\r\n            }\r\n            else // Otherwise save to content.\r\n            {\r\n               content = data;\r\n            }\r\n\r\n            dispatch('editor:save', { content: data });\r\n         }\r\n\r\n         // Remove the editor\r\n         if (remove) { destroyEditor(false); }\r\n      }\r\n   }\r\n</script>\r\n\r\n<div bind:this={editorEl}\r\n     class=\"editor prosemirror tjs-editor {Array.isArray(options.classes) ? options.classes.join(' ') : ''}\"\r\n     class:click-to-edit={clickToEdit}\r\n     class:editor-active={editorActive}\r\n     use:applyStyles={options.styles}\r\n     on:click={onClick}\r\n     on:keydown={onKeydown}\r\n     on:keyup={onKeyup}\r\n     role=textbox\r\n     tabindex=0>\r\n    {#if editorButton}\r\n        <!-- svelte-ignore a11y-missing-attribute a11y-click-events-have-key-events -->\r\n        <a class=editor-edit on:click={() => initEditor()} role=button tabindex=-1><i class=\"fas fa-edit\"></i></a>\r\n    {/if}\r\n    {#if editorActive}\r\n        <div bind:this={editorContentEl} class=editor-content />\r\n    {:else}\r\n        <div class=editor-enriched>\r\n            {@html enrichedContent}\r\n        </div>\r\n    {/if}\r\n</div>\r\n\r\n<style>\r\n    .editor {\r\n        background: var(--tjs-editor-background, none);\r\n        border: var(--tjs-editor-border, none);\r\n        border-radius: var(--tjs-editor-border-radius, 0);\r\n        height: var(--tjs-editor-height, 100%);\r\n        margin: var(--tjs-editor-margin, 0);\r\n        outline-offset: var(--tjs-editor-outline-offset, 0.25em);\r\n        overflow: var(--tjs-editor-overflow, auto);\r\n        transition: var(--tjs-editor-transition);\r\n        width: var(--tjs-editor-width, 100%);\r\n\r\n        /* For Firefox. */\r\n        scrollbar-width: thin;\r\n    }\r\n\r\n    /**\r\n     * This class is added to editor when `editorActive` is true and unsets overflow allowing content to be scrollable\r\n     * keeping the menu bar always visible at the top of the component.\r\n     */\r\n    .editor-active {\r\n        box-shadow: var(--tjs-editor-active-box-shadow);\r\n        outline: var(--tjs-editor-active-outline);\r\n        overflow: var(--tjs-editor-active-overflow, unset);\r\n    }\r\n\r\n    /**\r\n     * Defines cursor and box-shadow / outline when the editor is inactive and hovered.\r\n     */\r\n    .tjs-editor:not(.editor-active):focus-visible {\r\n        box-shadow: var(--tjs-editor-inactive-box-shadow-focus-visible, var(--tjs-default-box-shadow-focus-visible));\r\n        outline: var(--tjs-editor-inactive-outline-focus-visible, var(--tjs-default-outline-focus-visible, revert));\r\n        transition: var(--tjs-editor-inactive-transition-focus-visible, var(--tjs-default-transition-focus-visible));\r\n    }\r\n\r\n    /**\r\n     * Defines cursor and box-shadow / outline when the editor is inactive and hovered, but not manually focused.\r\n     */\r\n    .tjs-editor:not(.editor-active):not(:focus-visible):hover {\r\n        box-shadow: var(--tjs-editor-inactive-box-shadow-hover);\r\n        outline: var(--tjs-editor-inactive-outline-hover);\r\n    }\r\n\r\n    /**\r\n     * Defines user-select when the editor is inactive and hovered.\r\n     */\r\n    .tjs-editor:not(.editor-active):hover {\r\n        user-select: var(--tjs-editor-inactive-user-select-hover, text);\r\n    }\r\n\r\n    /**\r\n     * Defines cursor when the editor is not active, but configured for click to edit. Give the user some indication\r\n     * via showing the text cursor across the whole editor element.\r\n     */\r\n    .tjs-editor.click-to-edit:not(.editor-active):hover {\r\n        cursor: var(--tjs-editor-inactive-cursor-hover, text);\r\n    }\r\n\r\n    .editor-content {\r\n        overflow: var(--tjs-editor-content-overflow, auto);\r\n        padding: var(--tjs-editor-content-padding, 0 0 0 0.25em);\r\n\r\n        /* For Firefox. */\r\n        scrollbar-width: thin;\r\n    }\r\n\r\n    .editor-edit {\r\n        right: var(--tjs-editor-edit-button-right, 5px);\r\n        top: var(--tjs-editor-edit-button-top, 0);\r\n    }\r\n\r\n    .editor-enriched {\r\n        padding: var(--tjs-editor-content-padding, 0 0 0 0.25em);\r\n    }\r\n\r\n    /* Controls whether the editor content text is selectable when the editor is inactive. */\r\n    .tjs-editor:not(.editor-active) .editor-enriched {\r\n        user-select: var(--tjs-editor-inactive-user-select-hover, text);\r\n    }\r\n\r\n    /* Don't add an initial margin top to first paragraph element in `.editor-content`. */\r\n    .tjs-editor .editor-container .editor-content :global(p:first-of-type) {\r\n        margin-top: 0;\r\n    }\r\n\r\n    .tjs-editor .editor-enriched :global(p:first-of-type) {\r\n        margin-top: 0;\r\n    }\r\n\r\n    /* Provides global styles scoped to `.tjs-editor` for dynamic `.editor-menu` element */\r\n    .tjs-editor :global(.editor-menu) {\r\n        background: var(--tjs-editor-toolbar-background, rgba(0, 0, 0, 0.1));\r\n        border-radius: var(--tjs-editor-toolbar-border-radius, 6px);\r\n        box-shadow: var(--tjs-editor-toolbar-box-shadow, 0 2px 2px -2px rgb(34 47 62 / 10%), 0 8px 8px -4px rgb(34 47 62 / 7%));\r\n        margin-bottom: 0.25em;\r\n        padding: var(--tjs-editor-toolbar-padding, 2px 0);\r\n        width: var(--tjs-editor-toolbar-width, 100%);\r\n\r\n        transition: box-shadow 500ms ease-in-out;\r\n    }\r\n\r\n    /* Removes the awkward 1rem padding from core */\r\n    .tjs-editor.prosemirror.editing-source :global(textarea) {\r\n        padding: 0;\r\n    }\r\n</style>\r\n","import { SvelteApplication }  from '@typhonjs-fvtt/runtime/svelte/application';\r\nimport { isObject }           from '@typhonjs-fvtt/runtime/util/object';\r\n\r\nimport { FoundryStyles }      from '@typhonjs-fvtt/svelte-standard/fvtt';\r\n\r\nimport { cssVariables }       from '../internal/index.js';     // TODO: Figure out better build to use #internal again.\r\n\r\nexport * from './button/index.js';\r\nexport * from './color/index.js';\r\nexport * from './container/index.js';\r\nexport * from './editor/index.js';\r\nexport * from './folder/index.js';\r\nexport * from './form/index.js';\r\nexport * from './label/index.js';\r\nexport * from './layers/index.js';\r\nexport * from './menu/index.js';\r\nexport * from './settings/index.js';\r\n\r\n// -------------------------------------------------------------------------------------------------------------------\r\n\r\n/**\r\n * Assign all TyphonJS thematic CSS variables.\r\n */\r\n\r\ncssVariables.setProperties({\r\n   // For components w/ transparent background checkered pattern.\r\n   '--tjs-checkerboard-background-dark': 'rgb(205, 205, 205)',\r\n   '--tjs-checkerboard-background-10': `url('data:image/svg+xml;utf8,<svg preserveAspectRatio=\"none\"  viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"0\" y=\"0\" width=\"5\" height=\"5\" fill=\"transparent\" /><rect x=\"5\" y=\"5\" width=\"5\" height=\"5\" fill=\"transparent\" /><rect x=\"5\" y=\"0\" width=\"5\" height=\"5\" fill=\"white\" /><rect x=\"0\" y=\"5\" width=\"5\" height=\"5\" fill=\"white\" /></svg>') 0 0 / 10px 10px, var(--tjs-checkerboard-background-dark, rgb(205, 205, 205))`\r\n}, false);\r\n\r\n// -------------------------------------------------------------------------------------------------------------------\r\n\r\n/**\r\n * Assign all TyphonJS CSS variables to Foundry defaults.\r\n */\r\n\r\ncssVariables.setProperties({\r\n   '--tjs-action-ripple-background': 'rgba(0, 0, 0, 0.35)'\r\n}, false);\r\n\r\n// -------------------------------------------------------------------------------------------------------------------\r\n\r\ncssVariables.setProperties({\r\n   '--tjs-icon-button-background-hover': 'rgba(0, 0, 0, 0.10)',\r\n   '--tjs-icon-button-background-selected': 'rgba(0, 0, 0, 0.20)',\r\n}, false);\r\n\r\n{\r\n   /**\r\n    * All input related components including: TJSSelect,\r\n    */\r\n   const props = FoundryStyles.getProperties('input[type=\"text\"], input[type=\"number\"]');\r\n\r\n   if (isObject(props))\r\n   {\r\n      cssVariables.setProperties({\r\n         '--tjs-input-background': 'background' in props ? props.background : 'rgba(0, 0, 0, 0.05)',\r\n         '--tjs-input-border': 'border' in props ? props.border : '1px solid var(--color-border-light-tertiary)',\r\n         '--tjs-input-border-radius': 'border-radius' in props ? props['border-radius'] : '3px',\r\n         '--tjs-input-height': 'height' in props ? props.height : 'var(--form-field-height)',\r\n         '--tjs-input-min-width': 'min-width' in props ? props['min-width'] : '20px',\r\n         '--tjs-input-padding': 'padding' in props ? props['padding'] : '1px 3px',\r\n         '--tjs-input-width': 'width' in props ? props.width : 'calc(100% - 2px)',\r\n\r\n         // Set default values that are only to be referenced and not set.\r\n         '--_tjs-default-input-height': 'height' in props ? props.height : 'var(--form-field-height)',\r\n\r\n         // Set directly / no lookup:\r\n         '--tjs-input-border-color': 'var(--color-border-light-tertiary)',\r\n      }, false);\r\n   }\r\n}\r\n\r\ncssVariables.setProperties({\r\n   // `popup` is for components that are slightly elevated, but connected to an application;\r\n   // see: TJSMenu / TJSContextMenu / TJSColordPicker\r\n   '--tjs-default-popup-background': 'var(--color-text-dark-header, #23221d)',\r\n   '--tjs-default-popup-border': '1px solid var(--color-border-dark, #000)',\r\n   '--tjs-default-popup-box-shadow': '0 0 2px var(--color-shadow-dark, #000)',\r\n   '--tjs-default-popup-primary-color': 'var(--color-text-light-primary, #b5b3a4)',\r\n   '--tjs-default-popup-highlight-color': 'var(--color-text-light-highlight, #f0f0e0)',\r\n\r\n   // `popover` is for components that are elevated and independent; see: TJSContextMenu\r\n   '--tjs-default-popover-border': '1px solid var(--color-border-dark, #000)',\r\n   '--tjs-default-popover-box-shadow': '0 0 10px var(--color-shadow-dark, #000)',\r\n}, false);\r\n\r\n// Handle `PopOut!` module hooks to allow applications to popout to their own browser window -------------------------\r\n\r\nHooks.on('PopOut:loading', (app, popout) =>\r\n{\r\n   if (app instanceof SvelteApplication)\r\n   {\r\n      // Clone and load `svelte-standard` CSS variables into new window document.\r\n      popout.document.addEventListener('DOMContentLoaded', () => cssVariables.clone(popout.document));\r\n   }\r\n});\r\n","<svelte:options accessors={true} />\n\n<script>\n    import { ApplicationShell } from \"#runtime/svelte/component/core\";\n\n    import { TJSProseMirror } from \"#standard/component\";\n\n    export let doc;\n    export let path;\n\n    /**\n     * You can set a document to load / save content from given a `fieldName` in the format of `a.b.c`.\n     * When you set a document you can also enable collaboration.\n     *\n     * The simplest example is:\n     *\n     * <TJSProseMirror options={{document: <doc>, fieldName: 'some.data.path'}} />\n     *\n     * The following options data is mostly commented out. For the most part though the values shown for configuration\n     * show the default values _or_ in some cases the type of data that you need to set.\n     */\n    let options;\n    $: options = {\n        document: doc, // An item to edit description; note: replace w/ valid doc.\n        fieldName: path, // Path to data in `a.b.c`; note: this is a v10 field name.\n        collaborate: true, // Enables collaboration; requires document.\n        button: true, // Show edit button to launch editor when hovered; when false editor is open by default.\n        // classes: ['foo', 'bar'],   // Adds additional classes to `.tjs-editor` element.\n        // clickToEdit: false,  // Clicking editor content initializes the editor; hides the edit button.\n        // DOMPurify,        // You can pass DOMPurify from `#runtime/dompurify though ProseMirror does\n        // essential client side sanitation; IE stripping `<script>` tags, etc.\n        editable: true, // Enable / disable editing\n        enrichContent: true, // The default is true, but if you set it to false content is not enriched.\n        initialSelection: \"start\", // The initial selection / cursor position: 'all', 'end', or 'start'.\n        // styles: { '--tjs-editor-toolbar-background': 'red' } // Apply any inline styles / CSS variables\n    };\n</script>\n\n<div>\n    <TJSProseMirror {options} />\n</div>\n\n<style lang=\"scss\">\n    :global(.prosemirror .editor-container .editor-content) {\n        position: relative;\n    }\n</style>\n","<script>\n    import { getContext } from \"svelte\";\n    import { updateDoc } from \"../actions/update\";\n    import { localize } from \"../../util/misc\";\n    import Tabs from \"../components/generic/Tabs.svelte\";\n    import Portrait from \"../components/Portrait.svelte\";\n    import { dropDocs } from \"../actions/drop\";\n    import CombatHud from \"../components/combat/CombatHud.svelte\";\n    import { FOE_COLORS, GENERIC_COLORS } from \"../../models/items/job\";\n    import StatsDisplay from \"../components/combat/StatsDisplay.svelte\";\n    import ProseMirrorEditor from \"../components/generic/ProseMirrorEditor.svelte\";\n    import { TAB_STORES } from \"../../util/stores\";\n\n    let actor = getContext(\"tjs_actor\");\n    let doc = actor; // Alias\n\n    // Set our tabs\n    const tabs = [\"ICON.Foe.Abilities\", \"ICON.Foe.Description\", \"ICON.Foe.Stats\"].map((s) => ({\n        label: localize(s),\n        key: s,\n    }));\n    let selected_tab = TAB_STORES.get($actor.uuid, \"ICON.Foe.Abilities\");\n\n    // Handle dropped documents\n    function handleDrop(drop) {\n        $actor.createEmbeddedDocuments(\"Item\", [foundry.utils.duplicate(drop.document.toObject(true))]);\n    }\n\n    function allowDrop(drop) {\n        return drop.type == \"Item\" && [\"ability\"].includes(drop.document.type);\n    }\n</script>\n\n<main use:dropDocs={{ handle: handleDrop, allow: allowDrop }}>\n    <!-- Sheet Header -->\n    <header>\n        <Portrait style=\"grid-area: pic\" />\n        <div style=\"grid-area: name\" class=\"iflexrow\">\n            <label for=\"name\">Name:</label>\n            <input type=\"text\" name=\"name\" use:updateDoc={{ doc, path: \"name\" }} />\n        </div>\n        <select style=\"grid-area: template\" use:updateDoc={{ doc, path: \"system.template\" }}>\n            {#each [\"Normal\", \"Elite\", \"Mob\", \"Legend\"] as t}\n                <option value={t}>{t}</option>\n            {/each}\n        </select>\n        <div style=\"grid-area: faction\" class=\"iflexrow\">\n            <label for=\"faction\">Faction:</label>\n            <input name=\"faction\" type=\"text\" use:updateDoc={{ doc, path: \"system.faction\" }} />\n        </div>\n        <select style=\"grid-area: class\" use:updateDoc={{ doc, path: \"system.class.color\" }}>\n            {#each FOE_COLORS as c, i}\n                <option value={GENERIC_COLORS[i]}>{c}</option>\n            {/each}\n        </select>\n        <StatsDisplay style=\"grid-area: stats\" />\n        <div style=\"grid-area: tabs\">\n            <Tabs horizontal={false} {tabs} bind:selected={$selected_tab} />\n        </div>\n    </header>\n\n    <!-- Sheet Tab Navigation -->\n\n    <!-- Sheet Body -->\n    <section class=\"sheet-body\">\n        {#if $selected_tab == \"ICON.Foe.Abilities\"}\n            <CombatHud />\n        {:else if $selected_tab === \"ICON.Foe.Description\"}\n            <div class=\"flexcol\">\n                <h2>{localize(\"ICON.Description\")}</h2>\n                <ProseMirrorEditor doc={$doc} path={\"system.description\" } />\n                <h2>{localize(\"ICON.Foe.Setup\")}</h2>\n                <ProseMirrorEditor doc={$doc} path={\"system.setup\" } />\n            </div>\n        {:else if $selected_tab === \"ICON.Foe.Stats\"}\n            <div class=\"flexcol\">\n                {#each [\"defense\", \"damage_die\", \"fray_damage\", \"speed\", \"dash\", \"vitality\", \"armor\"] as stat}\n                    <label for={stat}>{stat}:</label>\n                    <input name={stat} type=\"number\" use:updateDoc={{ doc, path: `system.class.${stat}` }} />\n                {/each}\n            </div>\n        {:else}\n            <span>Tab does not exist</span>\n        {/if}\n    </section>\n</main>\n\n<style lang=\"scss\">\n    main {\n        height: 100%;\n        overflow: auto;\n        display: flex;\n        flex-direction: column;\n    }\n\n    header {\n        flex: 0 1 auto;\n        display: grid;\n        grid-template:\n            \"pic    name    template    tabs\" 30px\n            \"pic    faction class       tabs\" 30px\n            \"pic    stats       stats           tabs\" 30px / 120px 1fr 1fr 120px;\n        gap: 5px;\n        padding: 10px;\n        align-items: center;\n        label {\n            width: 80px;\n        }\n    }\n\n    .sheet-body {\n        padding: 5px;\n        flex: 1 0 auto;\n        max-height: calc(100% - 120px);\n    }\n</style>\n","<script>\n    import { getContext } from \"svelte\";\n    import { resolveDotpath } from \"../../../util/paths\";\n    import { updateDoc } from \"../../actions/update\";\n    import ProseMirrorEditor from \"./ProseMirrorEditor.svelte\";\n\n    /** @type {string} Title to show */\n    export let title = \"Title\";\n\n    /** @type {string} Path to the array*/\n    export let path;\n\n    /** @type {string} Is it numbers? */\n    export let numeric = false;\n\n    /** @type {boolean} Should we use a prosemirror editor? */\n    export let prose = false;\n\n    let doc = getContext(\"tjs_doc\");\n\n    let array;\n    $: array = resolveDotpath($doc, path);\n\n    // Adds an item to the array\n    function handleAdd() {\n        $doc.update({[path]: [...array, \"\"]});\n    }\n\n    // Delete an item in the array\n    function handleDelete(index) {\n        $doc.update({[path]: [...array.slice(0, index), ...array.slice(index+1)]});\n    }\n</script>\n\n<div class=\"flexcol\">\n    <h3>{title} <i class=\"fas fa-plus\" on:click={() => handleAdd()}></i></h3>\n    {#each array as _item, index}\n        <div class=\"flexrow\">\n            {#if prose}\n                <ProseMirrorEditor doc={$doc} path={`${path}.${index}`} />\n            {:else}\n                <input type={numeric ? \"number\" : \"text\"} use:updateDoc={{doc, path: `${path}.${index}`}} />\n            {/if}\n            <i class=\"fas fa-trash\" on:click={() => handleDelete(index)}/>\n        </div> \n    {/each}\n</div>\n\n<style lang=\"scss\">\n    i {\n        cursor: pointer;\n        max-width: 32px;\n        padding-left: 12px;\n        margin-top: 6px;\n    }\n</style>\n\n\n","<script>\n    import { getContext } from \"svelte\";\n    import { updateDoc } from \"../actions/update\";\n    import Portrait from \"../components/Portrait.svelte\";\n    import EditableDocArray from \"../components/generic/EditableDocArray.svelte\";\n    import ProseMirrorEditor from \"../components/generic/ProseMirrorEditor.svelte\";\n\n    let actor = getContext(\"tjs_actor\");\n    let doc = actor; // Alias\n</script>\n\n<main>\n    <!-- Sheet Header -->\n    <header>\n        <Portrait style=\"grid-area: pic\" />\n\n        <div style=\"grid-area: options\">\n            <label for=\"object\"><h3>Object?:</h3></label>\n            <input name=\"object\" type=\"checkbox\" use:updateDoc={{ doc, path: `system.is_object` }} />\n        </div>\n        <div style=\"grid-area: name\">\n            <label for=\"name\"><h3>Name:</h3></label>\n            <input name=\"name\" type=\"text\" use:updateDoc={{ doc, path: \"name\" }} />\n        </div>\n    </header>\n\n    <!-- Sheet Tab Navigation -->\n\n    <!-- Sheet Body -->\n    <section class=\"sheet-body\">\n        <div class=\"flexcol\">\n            <h3>Summon Effects:</h3>\n            <ProseMirrorEditor doc={$doc} path={\"system.summon_effects\"} />\n\n            <h3>Summon Actions:</h3>\n            <ProseMirrorEditor doc={$doc} path={\"system.summon_actions\"} />\n\n            <EditableDocArray title=\"Tags\" path={\"system.tags\"} />\n        </div>\n    </section>\n</main>\n\n<style lang=\"scss\">\n    main {\n        height: 100%;\n        overflow: auto;\n        display: flex;\n        flex-direction: column;\n    }\n\n    header {\n        display: grid;\n        grid-template: \"pic options name\" 90px / 90px 1fr 1fr;\n    }\n\n    .sheet-body {\n        padding: 5px;\n        flex: 1 0 auto;\n        max-height: calc(100% - 140px);\n    }\n</style>\n","<script>\n    import { getContext } from \"svelte\";\n    import { updateDoc } from \"../actions/update\";\n    import { dropDocs } from \"../actions/drop\";\n    import Portrait from \"../components/Portrait.svelte\";\n    import EditableDocArray from \"../components/generic/EditableDocArray.svelte\";\n    import Tabs from \"../components/generic/Tabs.svelte\";\n    import ProseMirrorEditor from \"../components/generic/ProseMirrorEditor.svelte\";\n    import { TAB_STORES } from \"../../util/stores\";\n    import ActorUuidReference from \"../components/combat/ActorUUIDReference.svelte\";\n\n    let actor = getContext(\"tjs_actor\");\n    let item = getContext(\"tjs_item\"); // Alias\n    let doc = item;\n\n    // Our tab\n    let tab_choices = [];\n    $: tab_choices = $item.system.choices.map((s, i) => ({\n        label: s.name ?? `${i + 1}`,\n        key: i,\n    }));\n    let selected_tab = TAB_STORES.get($doc.uuid, 0);\n\n    // Fetch selected choice - fix if tab is too high\n    let selected_choice = {};\n    $: selected_choice = $item.system.choices[$selected_tab];\n\n    function addChoice() {\n        $doc.update({\n            [`system.choices`]: [...$doc.system.choices, {}],\n        });\n    }\n\n    // Handle dropped documents\n    function handleDrop(drop) {\n        let summons = selected_choice.summons;\n        summons = [...summons, drop.document.uuid];\n        $doc.update({\n            [`system.choices.${$selected_tab}.summons`]: summons,\n        });\n    }\n\n    function allowDrop(drop) {\n        return drop.type == \"Actor\" && [\"summon\"].includes(drop.document.type);\n    }\n\n    // Delete the summon at the specified index for the current choice\n    function deleteSummon(index) {\n        let summons = selected_choice.summons;\n        summons = [...summons.slice(0, index), ...summons.slice(index + 1)];\n        $doc.update({\n            [`system.choices.${$selected_tab}.summons`]: summons,\n        });\n    }\n\n    // Delete the currently selected choice\n    function deleteCurrentOption() {\n        $doc.update({\n            [`system.choices`]: [\n                ...$doc.system.choices.slice(0, $selected_tab),\n                ...$doc.system.choices.slice($selected_tab + 1),\n            ],\n        });\n    }\n</script>\n\n<main use:dropDocs={{ handle: handleDrop, allow: allowDrop }}>\n    <!-- Sheet Header -->\n    <header>\n        <Portrait style=\"grid-area: pic\" />\n        <div style=\"grid-area: name\">\n            <label for=\"name\">Name:</label>\n            <input name=\"name\" type=\"text\" use:updateDoc={{ doc, path: \"name\" }} />\n        </div>\n        <div style=\"grid-area: options\">\n            <label for=\"chapter\">Chapter:</label>\n            <input type=\"text\" name=\"chapter\" use:updateDoc={{ doc, path: \"system.chapter\" }} />\n            <label for=\"trait\">Is Trait?:</label>\n            <input type=\"checkbox\" name=\"trait\" use:updateDoc={{ doc, path: \"system.trait\" }} />\n        </div>\n        <div class=\"option-select\" style=\"grid-area: tabs\">\n            <div>\n                <Tabs horizontal={true} tabs={tab_choices} bind:selected={$selected_tab} />\n            </div>\n            <i class=\"add-choice fas fa-plus\" on:click={() => addChoice()} />\n        </div>\n    </header>\n\n    <!-- Sheet Body -->\n    <section class=\"sheet-body\">\n        <div class=\"flexcol\">\n            {#if selected_choice}\n                <div class=\"block\">\n                    <h3><label for=\"name\">Name:</label></h3>\n                    <input\n                        name=\"name\"\n                        type=\"text\"\n                        use:updateDoc={{ doc, path: `system.choices.${$selected_tab}.name` }}\n                    />\n                </div>\n\n                <div class=\"block\">\n                    <h3>Narrative Description:</h3>\n                    <ProseMirrorEditor doc={$doc} path={`system.choices.${$selected_tab}.description`} />\n                </div>\n\n                <div class=\"flexrow\">\n                    <div class=\"block\">\n                        <h3><label for=\"actions\">Actions:</label></h3>\n                        <input\n                            name=\"actions\"\n                            type=\"number\"\n                            use:updateDoc={{ doc, path: `system.choices.${$selected_tab}.actions` }}\n                        />\n                    </div>\n\n                    <div class=\"block\">\n                        <h3><label for=\"round_action\">Round Action:</label></h3>\n                        <div class=\"flexrow\">\n                            <input\n                                name=\"round_action\"\n                                type=\"checkbox\"\n                                use:updateDoc={{ doc, path: `system.choices.${$selected_tab}.round_action` }}\n                            />\n                            {#if selected_choice.round_action}\n                                Yes\n                            {:else}\n                                No\n                            {/if}\n                        </div>\n                    </div>\n\n                    <div class=\"block\">\n                        <h3><label for=\"combo\">Combo:</label></h3>\n                        <select name=\"combo\" use:updateDoc={{ doc, path: `system.choices.${$selected_tab}.combo` }}>\n                            {#each [[\"None\", 0], [\"Start\", 1], [\"Finisher\", -1]] as c}\n                                <option value={c[1]}>{c[0]}</option>\n                            {/each}\n                        </select>\n                    </div>\n\n                    <div class=\"block\">\n                        <h3><label for=\"resolve\">Resolve:</label></h3>\n                        <input\n                            name=\"resolve\"\n                            type=\"number\"\n                            use:updateDoc={{ doc, path: `system.choices.${$selected_tab}.resolve` }}\n                        />\n                    </div>\n                </div>\n\n                <div class=\"block\">\n                    <h3><label for=\"trigger\">Interrupt Trigger:</label></h3>\n                    <input\n                        name=\"trigger\"\n                        type=\"text\"\n                        use:updateDoc={{ doc, path: `system.choices.${$selected_tab}.trigger` }}\n                    />\n                </div>\n\n                <div class=\"flexrow\">\n                    <div class=\"block\">\n                        <EditableDocArray title=\"Ranges\" path={`system.choices.${$selected_tab}.ranges`} />\n                    </div>\n\n                    <div class=\"block\">\n                        <EditableDocArray title=\"Tags\" path={`system.choices.${$selected_tab}.tags`} />\n                    </div>\n                    <div class=\"block\">\n                        <h3>Summons <em> - Drag to add! </em></h3>\n                        {#each selected_choice.summons as uuid, index}\n                            <div class=\"flexrow\">\n                                <ActorUuidReference {uuid} />\n                                <i class=\"fas fa-trash\" style=\"max-width: 32px;\" on:click={() => deleteSummon(index)} />\n                            </div>\n                        {/each}\n                    </div>\n                </div>\n\n                <div class=\"block\">\n                    <EditableDocArray title=\"Effects\" path={`system.choices.${$selected_tab}.effects`} prose={true} />\n                </div>\n\n                <div class=\"flexrow\">\n                    <div class=\"block\">\n                        <h3>Talents</h3>\n                        {#each $doc.system.talents as talent, index}\n                            <div class=\"flexrow\">\n                                <span style=\"flex: 0\">{\"I\".repeat(index + 1)}.</span>\n                                <ProseMirrorEditor doc={$doc} path={`system.talents.${index}.text`} />\n                                <input type=\"checkbox\" use:updateDoc={{ doc, path: `system.talents.${index}.unlocked` }} />\n                            </div>\n                        {/each}\n                    </div>\n\n                    <div class=\"block\">\n                        <h3>\n                            Mastery:\n                            <input type=\"text\" placeholder=\"Name\" use:updateDoc={{ doc, path: `system.mastery.name` }} />\n                        </h3>\n                        <div class=\"flexrow\">\n                            <ProseMirrorEditor doc={$doc} path={`system.mastery.text`} />\n                            <input type=\"checkbox\" use:updateDoc={{ doc, path: `system.mastery.unlocked` }} />\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block\">\n                    <EditableDocArray title=\"Special Requirements\" path={\"system.special_requirements\"} />\n                </div>\n\n                {#if $item.system.choices.length > 1}\n                    <button on:click={deleteCurrentOption}>Delete Option</button>\n                {/if}\n            {/if}\n        </div>\n    </section>\n</main>\n\n<style lang=\"scss\">\n    main {\n        padding: 5px;\n        height: 100%;\n        overflow: auto;\n        display: flex;\n        flex-direction: column;\n    }\n\n    .block {\n        border: var(--primary-border);\n        padding: 5px;\n        margin: -1px;\n    }\n\n    header {\n        display: grid;\n        grid-template:\n            \"pic name options\" 60px\n            \"pic tabs tabs\" 60px / 120px 1fr 1fr;\n    }\n\n    .sheet-body {\n        padding: 5px;\n        flex: 1 0 auto;\n        max-height: calc(100% - 140px);\n    }\n\n    .option-select {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        div {\n            flex: 1 0 auto;\n        }\n    }\n    i {\n        margin-left: auto;\n        margin-right: 16px;\n        cursor: pointer;\n    }\n</style>\n","<script>\n    import { getContext } from \"svelte\";\n    import { updateDoc } from \"../actions/update\";\n    import Portrait from \"../components/Portrait.svelte\";\n    import EditableDocArray from \"../components/generic/EditableDocArray.svelte\";\n    import ProseMirrorEditor from \"../components/generic/ProseMirrorEditor.svelte\";\n\n    let actor = getContext(\"tjs_actor\");\n    let item = getContext(\"tjs_item\"); // Alias\n    let doc = item;\n</script>\n\n<main>\n    <!-- Sheet Header -->\n    <header>\n        <Portrait style=\"grid-area: pic\" />\n        <div style=\"grid-area: name\">\n            <label for=\"name\">Name:</label>\n            <input name=\"name\" type=\"text\" use:updateDoc={{ doc, path: \"name\" }} />\n        </div>\n    </header>\n\n    <!-- Sheet Body -->\n    <section class=\"sheet-body\">\n        <div class=\"flexcol\">\n            <span>Description:</span>\n            <ProseMirrorEditor doc={$doc} path={\"system.description\" } />\n\n            <EditableDocArray title=\"Ideals\" path={\"system.ideals\"}></EditableDocArray>\n\n            <span>Second Wind:</span>\n            <ProseMirrorEditor doc={$doc} path={\"system.second_wind\" } />\n\n            <span>Special Ability:</span>\n            <ProseMirrorEditor doc={$doc} path={\"system.special_ability\" } />\n\n            <EditableDocArray title=\"Action Upgrades\" path={\"system.plus_two_options\"}></EditableDocArray>\n\n            <span> TODO: Gear, powers list, etc </span>\n        </div>\n    </section>\n</main>\n\n<style lang=\"scss\">\n    main {\n        background-color: #99d9ea;\n        height: 100%;\n        overflow: auto;\n        display: flex;\n        flex-direction: column;\n    }\n\n    header {\n        display: grid;\n        grid-template:\n            \"pic name\" 120px / 120px 1fr;\n    }\n\n    .sheet-body {\n        padding: 5px;\n        flex: 1 0 auto;\n        max-height: calc(100% - 140px);\n    }\n</style>\n","<script>\n    import { getContext } from \"svelte\";\n    import { updateDoc } from \"../actions/update\";\n    import Portrait from \"../components/Portrait.svelte\";\n    import Tabs from \"../components/generic/Tabs.svelte\";\n    import { GENERIC_COLORS, PLAYER_COLORS } from \"../../models/items/job\";\n    import { localize } from \"../../util/misc\";\n    import ProseMirrorEditor from \"../components/generic/ProseMirrorEditor.svelte\";\n\n    let actor = getContext(\"tjs_actor\");\n    let item = getContext(\"tjs_item\"); // Alias\n    let doc = item;\n\n    // Set our tabs\n    const tabs = [\"ICON.JobSheet.Details\", \"ICON.JobSheet.Abilities\", \"ICON.JobSheet.Attributes\"].map((s) => ({\n        label: localize(s),\n        key: s,\n    }));\n    let selected_tab = \"ICON.JobSheet.Details\";\n</script>\n\n<main>\n    <!-- Sheet Header -->\n    <header>\n        <Portrait style=\"grid-area: pic\" />\n        <div style=\"grid-area: name\">\n            <label for=\"name\">Name:</label>\n            <input name=\"name\" type=\"text\" use:updateDoc={{ doc, path: \"name\" }} />\n        </div>\n        <div style=\"grid-area: tabs\">\n            <Tabs horizontal={false} {tabs} bind:selected={selected_tab} />\n        </div>\n    </header>\n\n    <!-- Sheet Body -->\n    <section class=\"sheet-body\">\n        {#if selected_tab === \"ICON.JobSheet.Details\"}\n            <div class=\"flexcol\">\n                <span>Description:</span>\n                <ProseMirrorEditor doc={$doc} path={\"system.description\"} />\n            </div>\n        {:else if selected_tab === \"ICON.JobSheet.Abilities\"}\n            <span> TODO: Abilities previews </span>\n        {:else if selected_tab === \"ICON.JobSheet.Attributes\"}\n            <div class=\"flexcol\">\n                <label for=\"color\">Color</label>\n                <select name=\"color\" use:updateDoc={{ doc, path: \"system.class.color\" }}>\n                    {#each PLAYER_COLORS as c, i}\n                        <option value={GENERIC_COLORS[i]}>{c}</option>\n                    {/each}\n                </select>\n                {#each [\"defense\", \"damage_die\", \"fray_damage\", \"speed\", \"dash\", \"vitality\", \"armor\"] as stat}\n                    <label for={stat}>{stat}:</label>\n                    <input name={stat} type=\"number\" use:updateDoc={{ doc, path: `system.class.${stat}` }} />\n                {/each}\n            </div>\n        {:else}\n            <span>Error</span>\n        {/if}\n    </section>\n</main>\n\n<style lang=\"scss\">\n    main {\n        background-color: #99d9ea;\n        height: 100%;\n        overflow: auto;\n        display: flex;\n        flex-direction: column;\n    }\n\n    header {\n        display: grid;\n        grid-template: \"pic name tabs\" 120px / 120px 1fr 1fr;\n    }\n\n    .sheet-body {\n        padding: 5px;\n        flex: 1 0 auto;\n        max-height: calc(100% - 140px);\n    }\n</style>\n","<script>\n    import { getContext } from \"svelte\";\n    import { updateDoc } from \"../actions/update\";\n    import Portrait from \"../components/Portrait.svelte\";\n    import ProseMirrorEditor from \"../components/generic/ProseMirrorEditor.svelte\";\n\n    let actor = getContext(\"tjs_actor\");\n    let item = getContext(\"tjs_item\"); // Alias\n    let doc = item;\n</script>\n\n<main>\n    <!-- Sheet Header -->\n    <header>\n        <Portrait style=\"grid-area: pic\" />\n        <div style=\"grid-area: name\">\n            <label for=\"name\">Name:</label>\n            <input name=\"name\" type=\"text\" use:updateDoc={{ doc, path: \"name\" }} />\n        </div>\n    </header>\n\n    <!-- Sheet Body -->\n    <section class=\"sheet-body\">\n        <div class=\"flexcol\">\n            <span>Description:</span>\n            <ProseMirrorEditor doc={$doc} path={\"system.description\" } />\n        </div>\n    </section>\n</main>\n\n<style lang=\"scss\">\n    main {\n        background-color: #99d9ea;\n        height: 100%;\n        overflow: auto;\n        display: flex;\n        flex-direction: column;\n    }\n\n    header {\n        display: grid;\n        grid-template:\n            \"pic power_name\" 120px / 120px 1fr;\n    }\n\n    .sheet-body {\n        padding: 5px;\n        flex: 1 0 auto;\n        max-height: calc(100% - 140px);\n    }\n</style>\n","<script>\n    import { getContext } from \"svelte\";\n    import { updateDoc } from \"../actions/update\";\n    import Portrait from \"../components/Portrait.svelte\";\n    import { localize } from \"../../util/misc\";\n    import ProseMirrorEditor from \"../components/generic/ProseMirrorEditor.svelte\";\n    import Tabs from \"../components/generic/Tabs.svelte\";\n    import { TAB_STORES } from \"../../util/stores\";\n    import BoundedNumberDisplay from \"../components/generic/BoundedNumberDisplay.svelte\";\n\n    let actor = getContext(\"tjs_actor\");\n    let item = getContext(\"tjs_item\"); // Alias\n    let doc = item;\n\n    const tabs = [\"ICON.Relics.Description\", \"ICON.Relics.Mechanics\"].map((s) => ({\n        label: localize(s),\n        key: s,\n    }));\n    let selected_tab = TAB_STORES.get($item.uuid, \"ICON.Relics.Description\");\n</script>\n\n<main>\n    <!-- Sheet Header -->\n    <header>\n        <Portrait style=\"grid-area: pic\" />\n        <div style=\"grid-area: name\">\n            <label for=\"name\">Name:</label>\n            <input name=\"name\" type=\"text\" use:updateDoc={{ doc, path: \"name\" }} />\n        </div>\n        <div style=\"grid-area: tabs\">\n            <Tabs horizontal={false} {tabs} bind:selected={$selected_tab} />\n        </div>\n    </header>\n\n    <!-- Sheet Body -->\n    <section class=\"sheet-body\">\n        <div class=\"flexcol\">\n            {#if $selected_tab === \"ICON.Relics.Description\"}\n                <h3>Description:</h3>\n                <ProseMirrorEditor doc={$doc} path={\"system.description\"} />\n                <h3>Aspect Quest:</h3>\n                <ProseMirrorEditor doc={$doc} path={\"system.aspect_quest\"} />\n                <div class=\"flexrow\">\n                    <div>\n                        <BoundedNumberDisplay name=\"Rank\" path={\"system.rank\"} />\n                    </div>\n                    <div>\n                        <BoundedNumberDisplay name=\"Dust\" path={\"system.infused_dust\"} />\n                    </div>\n                </div>\n            {:else if $selected_tab === \"ICON.Relics.Mechanics\"}\n                <h3>Rank 1:</h3>\n                <ProseMirrorEditor doc={$doc} path={\"system.ranks.0\"} />\n                <h3>Rank 2:</h3>\n                <ProseMirrorEditor doc={$doc} path={\"system.ranks.1\"} />\n                <h3>Rank 3:</h3>\n                <ProseMirrorEditor doc={$doc} path={\"system.ranks.2\"} />\n                <h3>Aspected:</h3>\n                <ProseMirrorEditor doc={$doc} path={\"system.ranks.3\"} />\n            {:else}\n                <span> ERROR {$selected_tab}</span>\n            {/if}\n        </div>\n    </section>\n</main>\n\n<style lang=\"scss\">\n    main {\n        background-color: #99d9ea;\n        height: 100%;\n        overflow: auto;\n        display: flex;\n        flex-direction: column;\n    }\n\n    header {\n        display: grid;\n        grid-template: \"pic name tabs\" 120px / 120px 1fr 120px;\n    }\n\n    .sheet-body {\n        padding: 5px;\n        flex: 1 0 auto;\n        max-height: calc(100% - 140px);\n    }\n</style>\n","<svelte:options accessors={true} />\n\n<script>\n    import { setContext } from \"svelte\";\n    import { TJSApplicationShell } from \"#runtime/svelte/component/core\";\n    // import DocStringField from \"../../components/DocStringField.svelte\";\n    import { scale } from \"svelte/transition\";\n    import PlayerSheet from \"./PlayerSheet.svelte\";\n    import FoeSheet from \"./FoeSheet.svelte\";\n    import SummonSheet from \"./SummonSheet.svelte\";\n    import AbilitySheet from \"./AbilitySheet.svelte\";\n    import BondSheet from \"./BondSheet.svelte\";\n    import JobSheet from \"./JobSheet.svelte\";\n    import BondPowerSheet from \"./BondPowerSheet.svelte\";\n    import RelicSheet from \"./RelicSheet.svelte\";\n\n    export let elementRoot = void 0;\n\n    /** @type {TJSDocument<IconActor | IconItem>} */\n    export let tjs_doc;\n\n    // For anything deeper than root doc\n    setContext(\"tjs_actor\", tjs_doc); // TODO: conditional on tjs item\n    setContext(\"tjs_item\", tjs_doc); // TODO: Only if an item\n    setContext(\"tjs_doc\", tjs_doc); // Always the root doc\n    setContext(\"unique_prefix\", tjs_doc.uuid); // For Node logic\n</script>\n\n<TJSApplicationShell bind:elementRoot transition={scale} transitionOptions={{ duration: 100 }}>\n    {#if $tjs_doc.type == \"player\"}\n        <PlayerSheet />\n    {:else if $tjs_doc.type == \"foe\"}\n        <FoeSheet />\n    {:else if $tjs_doc.type == \"summon\"}\n        <SummonSheet />\n    {:else if $tjs_doc.type == \"ability\"}\n        <AbilitySheet />\n    {:else if $tjs_doc.type == \"bond\"}\n        <BondSheet />\n    {:else if $tjs_doc.type == \"bond-power\"}\n        <BondPowerSheet />\n    {:else if $tjs_doc.type == \"job\"}\n        <JobSheet />\n    {:else if $tjs_doc.type == \"relic\"}\n        <RelicSheet />\n    {:else}\n        <span>Unsupported doc</span>\n    {/if}\n</TJSApplicationShell>\n","import { SvelteApplication } from \"#runtime/svelte/application\";\nimport { TJSDocument } from \"#runtime/svelte/store/fvtt/document\";\nimport DocSheetAppShell from \"./DocSheetAppShell.svelte\";\n\nexport default class TJSDocSheet extends SvelteApplication {\n  /**\n   * \n   * @param {IconActor | IconItem} doc Document to display\n   *\n   * @param {object} options Application options\n   */\n  constructor(doc, options = {}) {\n    super({\n      id: `doc_${doc.uuid.replaceAll(\".\", \"_\")}`,\n      title: doc.name + (doc.isToken ? \" [TOKEN]\" : \"\"),\n      svelte: {\n        props: {\n          tjs_doc: new TJSDocument(doc),\n        },\n      },\n    });\n    this.doc = doc;\n  }\n\n  _getHeaderButtons() {\n    let buttons = [...super._getHeaderButtons()];\n    if (this.doc instanceof Actor) {\n      // Ripped from foundy\n      const canConfigure = game.user.isGM || (this.actor.isOwner && game.user.can(\"TOKEN_CONFIGURE\"));\n      if (canConfigure) {\n        const closeIndex = buttons.findIndex((btn) => btn.label === \"Close\");\n        buttons.splice(closeIndex, 0, {\n          label: this.doc.token ? \"Token\" : \"TOKEN.TitlePrototype\",\n          class: \"configure-token\",\n          icon: \"fas fa-user-circle\",\n          onclick: (ev) => this._onConfigureToken(ev)\n        });\n      }\n    }\n    return buttons;\n  }\n\n  // Ripped straight from foundry\n  _onConfigureToken(event) {\n    event.preventDefault();\n    const renderOptions = {\n      left: Math.max(this.position.left - 560 - 10, 10),\n      top: this.position.top\n    };\n    if (this.token) {\nreturn this.token.sheet.render(true, renderOptions);\n} else {\nnew CONFIG.Token.prototypeSheetClass(this.doc.prototypeToken, renderOptions).render(true);\n}\n  }\n\n  /**\n   * Default Application options\n   */\n  static ticker = 0;\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      // TODO: How to get normal Foundry buttons in the window header?\n      classes: [\"icon\", \"sheet\", \"actor\"],\n      resizable: true,\n      minimizable: true,\n      // popOut: false,\n      width: 800,\n      height: 800,\n      positionOrtho: false,\n      title: \"Document Sheet\",\n      zIndex: null,\n      svelte: {\n        class: DocSheetAppShell,\n        target: document.body,\n        intro: true,\n        props: {},\n      },\n    });\n  }\n}\n","import TJSDocSheet from \"../view/sheets/DocSheetApp\";\n\n/**\n *\n */\nexport function setupSheets() {\n    Actors.unregisterSheet(\"core\", ActorSheet);\n    Items.unregisterSheet(\"core\", ItemSheet);\n    Actors.registerSheet(game.system.id, TJSDocSheet, { types: [\"player\", \"foe\", \"summon\"], makeDefault: true });\n    Items.registerSheet(game.system.id, TJSDocSheet, { types: [\"ability\", \"bond\", \"job\", \"bond-power\", \"relic\"], makeDefault: true });\n}\n","<svelte:options accessors={true} />\n\n<script>\n    import { ApplicationShell } from \"#runtime/svelte/component/core\";\n    import { TJSDocument } from \"#runtime/svelte/store/fvtt/document\";\n    import { TJSProseMirror } from \"#standard/component\";\n\n    export let elementRoot;\n\n    let actor = new TJSDocument(game.actors.contents[0]);\n    let base_options = {\n        document: $actor,\n        fieldName: \"name\",\n        collaborate: true,\n        button: true,\n        editable: true,\n        initialSelection: \"start\",\n    };\n</script>\n\n<ApplicationShell bind:elementRoot>\n    <main>\n        <h1>Basic application</h1>\n        <span>{$actor.name}</span>\n        <div>\n        <TJSProseMirror options={base_options} />\n        </div>\n        <div>\n        <TJSProseMirror options={base_options} />\n        </div>\n\n    </main>\n</ApplicationShell>\n\n<style lang=\"scss\">\n    main {\n        text-align: center;\n        display: flex;\n        flex-direction: column;\n    }\n</style>\n","import { SvelteApplication } from '#runtime/svelte/application';\n\nimport BasicAppShell from './BasicAppShell.svelte';\n\nexport default class BasicApplication extends SvelteApplication {\n   /**\n    * Default Application options\n    *\n    * @returns {object} options - Application options.\n    * @see https://foundryvtt.com/api/Application.html#options\n    */\n   static get defaultOptions() {\n      return foundry.utils.mergeObject(super.defaultOptions, {\n         title: 'ICON.title',  // Automatically localized from `lang/en.json`.\n         width: 420,\n         height: 520,\n\n         svelte: {\n            class: BasicAppShell,\n            target: document.body\n         }\n      });\n   }\n}","<!-- Super simple Svelte component that takes in a prop and outputs it. -->\n<script>\n    import { setContext } from \"svelte\";\n    import { TJSDocument } from \"#runtime/svelte/store/fvtt/document\";\n    import { IcoNode } from \"../../util/nlp\";\n    import AbilityDetail from \"../components/combat/AbilityDetail.svelte\";\n    import NodeRenderer from \"../components/generic/NodeRenderer.svelte\";\n    import { KeyStoreLookup } from \"../../util/stores\";\n    import { writable } from \"svelte/store\";\n\n    // import { fly, fade } from \"svelte/transition\";\n\n    /** @type {ChatMessage} */\n    export let msg;\n    let tjs_msg = new TJSDocument(msg);\n    let flags = {};\n    $: flags = $tjs_msg.flags[game.system.id] ?? {};\n\n    /**\n     * Attack roll formula, which may or may not be used\n     * @type {string}\n     */\n    let attack_roll_formula;\n    $: attack_roll_formula = flags.boon === 0 ? \"1d20\" : boon > 0 ? `1d20 + ${boon}d6kh1` : `1d20 - ${-boon}d6kh1`;\n\n    // Deduce the item\n    let item = new TJSDocument(undefined);\n    $: item.set(fromUuidSync(flags.ability_uuid) ?? undefined);\n\n    // Setup context\n    let actor = new TJSDocument(undefined);\n    $: actor.set($item.actor ?? undefined);\n\n    // Shorthand for the selected choice\n    let choice = null;\n    $: choice = $item?.system.choices[flags.choice_index] ?? null;\n\n    // Defaults for our nodes etc\n    let attack_roll_node = null;\n    $: (attack_roll_node = new IcoNode({ text: \"Attack: \" })), new IcoNode({ formula: attack_roll_formula });\n\n    /**\n     * For ability roll persistence etc\n     * @type {Record<string, object>}\n     */\n    let overrides = {};\n    $: {\n        for(let [k, v] of Object.entries(flags.nodes ?? {})) {\n            overrides[k] = new IcoNode(v);\n        }\n    }\n\n    function persist(key, node) {\n        msg.update({\n            [`flags.${game.system.id}.nodes.${key}`]: node.toObject(),\n        });\n    }\n</script>\n\n<div class=\"icon flexcol\">\n    {#if item}\n        {#if choice?.is_attack}\n            <NodeRenderer node={attack_roll_node} on:savenode={(evt) => persist(\"attack\", evt.detail)} />\n        {/if}\n\n        {#if choice}\n            <AbilityDetail {choice} {overrides} on:savenode={(evt) => persist(evt.detail[0], evt.detail[1])} />\n        {:else}\n            <span>Error: Ability choice could not be resolved</span>\n        {/if}\n    {:else}\n        Item deleted\n    {/if}\n</div>\n","<script>\n    import { createEventDispatcher } from \"svelte\";\n    import { ICON } from \"../../../consts\";\n    import { quickDamage } from \"../../../util/harm\";\n\n    // How much damage/vigor it grants\n    /**\n     * @type {string | number}\n     */\n    export let value;\n    let svalue;\n    $: svalue = value.toString();\n    let smalltext;\n    $: smalltext = svalue.length > 1;\n\n    // Dispatch harm\n    function hurt(type) {\n        dispatch(\"harm\", {\n            type,\n            value: svalue\n        });\n    }\n\n    function edit(evt) {\n        evt.stopPropagation();\n        evt.preventDefault();\n    }\n\n    const dispatch = createEventDispatcher();\n</script>\n\n<div class=\"root\" {...$$restProps}>\n    <div class=\"underlay\">\n        <span class:smalltext>{value}</span>\n    </div>\n    <div class=\"overlay\">\n        {#each [\"damage\", \"piercing\", \"divine\", \"vigor\"] as type}\n            <i\n                style=\"grid-area: {type}\"\n                class=\"{ICON.css[type]} fa-lg\"\n                on:click={() => hurt(type)}\n                data-tooltip=\"{type} {value}\"\n            />\n        {/each}\n    </div>\n</div>\n\n<style lang=\"scss\">\n    div {\n        width: 56px;\n        height: 56px;\n\n        text-align: center;\n        align-items: center;\n        justify-content: center;\n\n        color: var(--secondary-color);\n    }\n\n    .root {\n        margin: 4px;\n        border: var(--secondary-border);\n        background-color: var(--secondary-background);\n        border-radius: 5px;\n        border-radius: 15px;\n        position: relative;\n    }\n\n    .underlay {\n        position: absolute;\n        display: flex;\n        align-items: center;\n\n        span {\n            font-weight: bold;\n            font-size: 46px;\n            font-family: monospace;\n\n            &.smalltext {\n                font-size: 26px;\n            }\n        }\n    }\n\n    .overlay {\n        position: absolute;\n        display: grid;\n\n        // Fade in on hover\n        transition: opacity 0.3s;\n        opacity: 0;\n        &:hover {\n            opacity: 0.8;\n        }\n\n        grid-template:\n            \"damage piercing\" 28px\n            \"divine vigor\" 28px / 28px 28px;\n\n        i {\n            color: rgb(18, 35, 57);\n            cursor: pointer;\n            &:hover {\n                opacity: 1.0;\n                color: rgb(133, 228, 255);\n            }\n        }\n    }\n</style>\n","<!-- This is necessary for Svelte to generate accessors TRL can access for `elementRoot` -->\n<svelte:options accessors={true} />\n\n<script>\n    import { ApplicationShell } from \"#runtime/svelte/component/core\";\n    import { computeHarm, quickDamage } from \"../../util/harm\";\n    import { SELECTED_TOKENS } from \"../../util/stores\";\n    import HarmControl from \"../components/combat/HarmControl.svelte\";\n\n    import { slide } from \"svelte/transition\";\n\n    export let elementRoot;\n\n    /** @type {number} Our editable damage field*/\n    let custom = 0;\n\n    function emitHarm(evt) {\n        let { type, value } = evt.detail;\n        let items = [];\n        for (let v of $SELECTED_TOKENS.values()) {\n            if (v.actor) items.push([v.actor, computeHarm(v.actor, type, value, [])]);\n        }\n        if (items.length) {\n            quickDamage(items);\n        }\n    }\n</script>\n\n<!-- ApplicationShell provides the popOut / application shell frame, header bar, content areas -->\n<!-- ApplicationShell exports `elementRoot` which is the outer application shell element -->\n<ApplicationShell bind:elementRoot>\n    <main>\n        <div class=\"targs\">\n            <span>Targets:</span>\n            {#each $SELECTED_TOKENS as st (st.id)}\n                <img\n                    transition:slide={{ axis: \"x\", duration: 200 }}\n                    src={st.document.texture?.src}\n                    data-tooltip={st.name}\n                />\n            {/each}\n            {#if $SELECTED_TOKENS.size === 0}\n                <span>Select tokens to apply damage to</span>\n            {/if}\n        </div>\n        <div class=\"standard\">\n            {#each [1, 2, 3, 4, 999, \"25%\", custom] as value}\n                <HarmControl {value} on:harm={emitHarm} />\n            {/each}\n        </div>\n        <div class=\"customs\" data-tooltip=\"Custom damage\">\n            <input type=\"number\" bind:value={custom} />\n        </div>\n    </main>\n</ApplicationShell>\n\n<style lang=\"scss\">\n    main {\n        display: grid;\n        grid-template:\n            \"targs targs\" 64px\n            \"std  custom\" 64px / 1fr 1fr;\n    }\n\n    .targs {\n        grid-area: targs;\n        border-bottom: var(--primary-border);\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n\n        img {\n            width: 56px;\n            width: 56px;\n            margin: 4px;\n        }\n\n        span {\n            padding-right: 4px;\n        }\n    }\n\n    .standard {\n        grid-area: std;\n        border-right: var(--primary-border);\n    }\n\n    .customs {\n        grid-area: custom;\n        input {\n            height: 100%;\n            border-radius: 50%;\n            text-align: center;\n            font-size: 30px;\n        }\n    }\n\n    .standard,\n    .customs {\n        display: flex;\n    }\n</style>\n","\nimport { SvelteApplication } from '#runtime/svelte/application';\n\nimport HarmShell from './HarmShell.svelte';\n\nexport default class HarmApplication extends SvelteApplication {\n   /**\n    * Default Application options\n    *\n    * @returns {object} options - Application options.\n    * @see https://foundryvtt.com/api/Application.html#options\n    */\n   static get defaultOptions() {\n      return foundry.utils.mergeObject(super.defaultOptions, {\n         id: \"ICON.harm\",\n         title: 'ICON.Harm.Title',\n         width: 64 * 8,\n         height: 128 + 30,\n         classes: [\"icon\"],\n         zIndex: null,\n\n         svelte: {\n            class: HarmShell,\n            target: document.body\n         }\n      });\n   }\n}","let my_socket;\n\nHooks.once(\"socketlib.ready\", () => {\n\tmy_socket = socketlib.registerSystem(game.system.id);\n\tmy_socket.register(\"update-message\", updateMessageInner);\n});\n\n\n/**\n *\n * @param id\n *\n * @param data\n */\nfunction updateMessageInner(id, data) {\n    let msg = game.messages.get(id);\n    if (msg) {\n        msg.update(data);\n    }\n}\n\n/**\n * Allows for updating any message so long as a GM is online\n * \n * @param {ChatMessage} message \n *\n * @param {any} data Update data\n */\nexport async function adminUpdateMessage(message, data) {\n    await my_socket.executeAsGM(\"update-message\", message.id, data);\n}","import { IconActor } from \"../documents/actor\";\nimport { simpleSlugifyObject, simpleUnslugifyObject } from \"../view/actions/util\";\nimport HarmApplication from \"../view/apps/HarmApplication\";\nimport { adminUpdateMessage } from \"./socket\";\n\nHooks.on(\"getSceneControlButtons\", (controls) => {\n    let tokenControls = controls.find((control) => control.name === \"token\");\n    tokenControls.tools.push({\n        name: \"iconharm\",\n        title: \"ICON.Harm.Title\",\n        icon: \"fas fa-spider\",\n        onClick: async (away) => {\n            showHarmApplication();\n        },\n        button: true\n    });\n});\n\nlet harmAppId = null;\n\n/**\n * Shows the harm application singleton\n */\nexport async function showHarmApplication() {\n    let app;\n    if (harmAppId && ui.windows[harmAppId]) {\n        app = ui.windows[harmAppId];\n    } else {\n        app = new HarmApplication();\n    }\n    await app.render(true, { focus: true });\n    harmAppId = app.appId;\n}\n\n/**\n * @typedef {object} HarmInstance Records an instance of computed harm. \n *\n * @property {\"damage\" | \"divine\" | \"piercing\" | \"vigor\"} type The damage/heal type that is to be applied\n * \n * @property {number} original_amount The original amount of damage, pre any reductions\n * \n * @property {Array<[string, value]>} deltas The changes to final damage by flags & armor, as key-value pairs. Ordered!\n * \n * @property {number} amount The numeric change that is to be applied\n * \n * @property {Array<\"resistance\" | \"immune\" | \"vulnerable\" | \"weakened\" | \"pacified\">} flags \n *           All auxilary effects on damage, tracked so we can cycle them and sanely track the value.\n */\n\n/**\n * @typedef {object} HarmRecord Records an instance of applied harm\n * \n * @property {HarmInstance} harm The harm instance that was applied\n * \n * @property {string} actor UUID of actor it was applied to\n * \n * @property {number} original_hp The original hp value\n *\n * @property {number} final_hp The hp value post harm/heal\n *\n * @property {boolean} original_bloodied Were they bloodied before?\n *\n * @property {boolean} final_bloodied Are they bloodied after?\n * \n * @property {number} original_vigor The original vigor value\n *\n * @property {number} final_vigor The vigor value post harm/heal\n */\n\n/**\n * @typedef {Record<string, Array<HarmRecord>} HarmManifest Tracks harm to several actors, in the order it was inflicted\n */\n\n/**\n * Compute an instance of harm against an actor\n * \n * It is on the players to appropriately apply flags!\n * \n * @param {IconActor} actor The actor to target\n *\n * @param {\"damage\" | \"piercing\" | \"divine\" | \"vigor\"} type The harm/heal type\n *\n * @param {number | \"25%\" | \"50%\" | \"75%\" | \"vit\"} amount The amount to harm/heal\n *\n * @param {HarmInstance[\"flags\"]} flags The flags to apply\n *\n * @returns {HarmInstance} A full harm instance\n */\nexport function computeHarm(actor, type, amount, flags) {\n    if (!(actor instanceof IconActor)) {\n        throw new TypeError(\"First argument must be an actor\");\n    }\n    const valid_types = [\"damage\", \"piercing\", \"divine\", \"vigor\"];\n    if (!valid_types.includes(type)) {\n        throw new TypeError(`Second argument must be one of ${valid_types.join('|')}, not ${type}`);\n    }\n\n    // First parse the amount\n    if (typeof amount === \"string\") {\n        switch (amount) {\n            case \"25%\":\n                amount = Math.round(actor.system.hp.max / 4 * 1);\n                break;\n            case \"50%\":\n                amount = Math.round(actor.system.hp.max / 4 * 2);\n                break;\n            case \"75%\":\n                amount = Math.round(actor.system.hp.max / 4 * 3);\n                break;\n            case \"vit\":\n            case \"vitality\":\n                amount = actor.system.class?.vitality ?? 0;\n                break;\n            default:\n                // Parse it as a string\n                amount = parseInt(amount);\n                if (isNaN(amount)) {\n                    throw new TypeError(\"Third argument must be a number, or 25%|50%|75%|vit\");\n                }\n        }\n    }\n\n    // Then handle the type/flags/armor\n    let original_amount = amount;\n    let deltas = [];\n\n    // Attacker effects apply first\n    if (flags.includes(\"weakened\") && amount > 1) {\n        amount--;\n        deltas.push([\"weakened\", -1]);\n    }\n    if (flags.includes(\"pacified\")) {\n        let prior = amount;\n        amount = Math.ceil(amount / 2);\n        let delta = amount - prior;\n        if (delta) {\n            deltas.push([\"pacified\", delta]);\n        }\n    }\n\n    // All types except vigor are increased by vulnerable\n    if (flags.includes(\"vulnerable\") && type !== \"vigor\") {\n        if (amount) {\n            deltas.push([\"vulnerable\", 1]);\n            amount++;\n        }\n    }\n\n    switch (type) {\n        case \"damage\":\n            // Reduced by armor\n            let prior_armor = amount;\n            amount = Math.max(0, amount - (actor.system.class?.armor ?? 0));\n            let armor_delta = amount - prior_armor;\n            if (armor_delta) {\n                deltas.push([\"armor\", armor_delta]);\n            }\n        case \"piercing\":\n            // Reduced by resistance AFTER armor. \n            if (flags.includes(\"resistance\")) {\n                let prior_resist = amount;\n                amount = Math.ceil(amount / 2);\n                let resist_delta = amount - prior_resist;\n                if (resist_delta) {\n                    deltas.push([\"resistance\",]);\n                }\n            }\n        case \"divine\":\n            // No reductions target-side really applies to divines except immunity\n            if (flags.includes(\"immune\")) {\n                if (amount) {\n                    deltas.push([\"immune\", amount]);\n                }\n                amount = 0;\n            }\n            break;\n        case \"vigor\":\n            // Rarely will we really want to halve or ignore vigor, but it doesn't hurt to have it as an option\n            if (flags.includes(\"immune\")) {\n                if (amount) {\n                    deltas.push([\"immune\", amount]);\n                }\n                amount = 0;\n            }\n            break;\n    }\n\n    // Freeze to enforce immutability\n    return Object.freeze({\n        type,\n        original_amount,\n        amount,\n        deltas,\n        flags\n    });\n}\n\n/**\n * Computes the before/after hp values if the given harm instance is applied to an actor.\n * \n * Harm instances are not modified. \n * Does not actually modify actor\n * Note that inflictHarm should be called between each planHarm, \n * or else the plans will be made without context of each other.\n * \n * @param {IconActor} actor The actor to affect\n *\n * @param {HarmInstance[]} harm_instances The harm instance to apply\n *\n * @returns {HarmRecord[]} Records of the damage applied\n */\nexport function planHarm(actor, harm_instances) {\n    let result = [];\n\n    // Get initial values\n    let final_hp = actor.system.hp.value;\n    let final_vigor = actor.system.vigor.value;\n    let bloodied_threshold = (actor.system.true_max_hp ?? actor.system.hp.max) / 2;\n\n    for (let harm_instance of harm_instances) {\n        let { amount, type } = harm_instance;\n        let step_original_hp = final_hp; // From the last step\n        let step_original_vigor = final_vigor; // From the last step\n\n        // Handle application\n        if (type === \"vigor\") {\n            final_vigor = step_original_vigor + amount;\n            if (final_vigor > actor.system.class.vitality ?? 0) { // If no vitality, forbid\n                final_vigor = actor.system.class.vitality ?? 0;\n            }\n        } else if (type === \"divine\") {\n            // Ignores vigor\n            final_hp = step_original_hp - amount;\n            if (final_hp < 0) {\n                final_hp = 0;\n            }\n        } else {\n            // If vigor totally covers it, only affect vigor\n            if (step_original_vigor >= amount) {\n                final_vigor = step_original_vigor - amount;\n            } else {\n                // Otherwise assume damage is split\n                amount -= step_original_vigor;\n                final_vigor = 0;\n                final_hp = step_original_hp - amount;\n                if (final_hp < 0) {\n                    final_hp = 0;\n                }\n            }\n        }\n\n        // Return our record\n        result.push({\n            harm: harm_instance,\n            actor: actor.uuid,\n            original_hp: step_original_hp,\n            original_vigor: step_original_vigor,\n            original_bloodied: step_original_hp <= bloodied_threshold,\n            final_hp,\n            final_vigor,\n            final_bloodied: final_hp <= bloodied_threshold,\n        });\n    }\n    return result;\n}\n\n/**\n * Apply the given harm manifest, in a vacuum. Basically just does damage to a unit!\n * \n * @param {HarmManifest} harm_manifest The manifest to apply\n */\nexport async function applyManifest(harm_manifest) {\n    let promises = [];\n    for (let [uuid, records] of Object.entries(harm_manifest)) {\n        let actor = fromUuidSync(uuid);\n        if (!actor) {\n            ui.notifications.warn(`Could not resolve actor ${uuid}`);\n            continue;\n        }\n        let final = records[records.length - 1];\n        if (!final) {\n            continue;\n        } // Empty list\n        promises.push(actor.update({\n            \"system.hp.value\": final.final_hp,\n            \"system.vigor.value\": final.final_vigor,\n        }));\n    }\n    await Promise.all(promises);\n}\n\n/**\n * Assumes a manifest whose HarmInstances have been edited in place.\n * Rebuilds its harm records from the embedded harm instances.\n * \n * @param {HarmManifest} manifest The manifest to rebuild\n *\n * @returns {HarmManifest} New manfiest\n */\nexport function replayManifest(manifest) {\n    let new_manifest = {};\n    for (let [uuid, records] of Object.entries(manifest)) {\n        let actor = fromUuidSync(uuid);\n        if (!actor) {\n            ui.notifications.warn(`Could not resolve actor ${uuid}`);\n            continue;\n        }\n        new_manifest[uuid] = planHarm(actor, records.map((r) => r.harm));\n    }\n    return new_manifest;\n}\n\n/**\n * Get or create the most recent HarmManifest chat message.\n *\n * @returns {Promise<ChatMessage>} message\n */\nexport async function getCurrentHarmManifestMessage() {\n    // Only look at the most recent message\n    let mrm = game.messages.contents[game.messages.contents.length - 1];\n    if (mrm && mrm.getFlag(game.system.id, \"svelte_msg_type\") === \"harm\") {\n        return mrm;\n    } else {\n        return ChatMessage.create({\n            [`flags.${game.system.id}`]: {\n                svelte_msg_type: \"harm\",\n                harm_manifest: {}\n            }\n        });\n    }\n}\n\n/**\n * Performs the following\n * 1. Gets the most recent harm manifest message\n * 2. Modifies it to include the provided harm instance\n * Does not actually modify the actor.\n * \n * @param {Array<[IconActor, HarmInstance]>} harms \n */\nexport async function quickDamage(harms) {\n    let message = await getCurrentHarmManifestMessage();\n\n    /** @type {HarmManifest} */\n    let manifest = message.getFlag(game.system.id, \"harm_manifest\") ?? {};\n    manifest = simpleUnslugifyObject(manifest);\n\n    // Create a temporary new manifest entry\n    for (let [actor, harm_instance] of harms) {\n        if (!manifest[actor.uuid]) {\n            manifest[actor.uuid] = [];\n        }\n        manifest[actor.uuid] = [...manifest[actor.uuid],\n        {\n            harm: harm_instance,\n            actor: actor.uuid,\n            final_hp: -1,\n            final_vigor: -1,\n            original_hp: -1,\n            original_vigor: -1\n        }];\n    }\n\n    // Replay the manifest\n    manifest = replayManifest(manifest);\n\n    // Slugify it\n    manifest = simpleSlugifyObject(manifest);\n\n    await adminUpdateMessage(message, {\n        [`flags.${game.system.id}.harm_manifest`]: manifest\n    });\n}","<script>\n    import { ICON } from \"../../../consts\";\n    import * as harm from \"../../../util/harm\";\n\n    /** @type {harm.HarmRecord} */\n    export let record;\n\n    /** @type {boolean} */\n    export let obscure;\n\n    // Let the tooltip show how the damage was computed\n    let tooltip;\n    $: {\n        tooltip = `${record.harm.original_amount} ${record.harm.type}`;\n        let amount = record.harm.original_amount;\n        for(let [cause, delta] of record.harm.deltas) {\n            amount += delta;\n            tooltip += ` → ${amount} (${delta} ${cause})`;\n        }\n    }\n</script>\n\n<div data-tooltip={tooltip}>\n    <span class=\"amount\">\n        <i class={ICON.css[record.harm.type]} data-tooltip={record.harm.type} />\n        {record.harm.amount}\n    </span>\n    {#if obscure}\n        <span>\n            {#if !record.original_bloodied && record.final_bloodied}\n                NOW BLOODIED!\n            {:else if record.final_bloodied}\n                BLOODIED!\n            {:else}\n                UNKNOWN\n            {/if}\n        </span>\n    {:else}\n        <span class=\"hp\">\n            <i class={ICON.css.hp} />\n            <span>{record.original_hp}</span> → <span>{record.final_hp}</span>\n        </span>\n        {#if record.final_vigor || record.original_vigor}\n            <span class=\"vigor\">\n                <i class={ICON.css.vigor} />\n                <span>{record.original_vigor}</span> → <span>{record.final_vigor}</span>\n            </span>\n        {/if}\n    {/if}\n</div>\n\n<style lang=\"scss\">\n    div {\n        padding: 0px;\n        span {\n            display: inline-block;\n\n            span {\n                min-width: 24px;\n            }\n        }\n    }\n\n    .amount {\n        border-right: var(--primary-border);\n        padding-right: 6px;\n        min-width: 60px;\n\n        i {\n            margin-right: 6px;\n        }\n    }\n\n    .hp {\n        margin: 0px 4px;\n        min-width: 80px;\n    }\n\n    .vigor {\n        padding-left: 6px;\n        border-left: var(--primary-border);\n    }\n\n    i {\n        max-width: 14px;\n    }\n</style>\n","<script>\n    import * as harm from \"../../../util/harm\";\n    import HarmRecord from \"./HarmRecord.svelte\";\n    import { TJSDocument } from \"#runtime/svelte/store/fvtt/document\";\n\n    /** @type {string} */\n    export let actor_uuid;\n\n    let actor = new TJSDocument(fromUuidSync(actor_uuid) ?? undefined);\n\n    /** @type {harm.HarmRecord[]} */\n    export let records;\n\n    /** @type {harm.HarmRecord} */\n    let last_record;\n    $: last_record = records[records.length - 1];\n\n    /** @type {boolean} */\n    let can_apply;\n    $: can_apply = last_record && (\n        last_record.final_hp != $actor?.system.hp.value || last_record.final_vigor != $actor?.system.vigor.value);\n\n    /** @type {boolean} */\n    let can_see;\n    $: can_see = $actor?.testUserPermission(game.user, \"OBSERVER\");\n\n    // Sets the actors hp/vigor to match the end of the record\n    function apply() {\n        $actor.update({\n            \"system.hp.value\": last_record.final_hp,\n            \"system.vigor.value\": last_record.final_vigor,\n        });\n    }\n</script>\n\n<div class=\"flexcol\">\n    <div class=\"header\">\n        {#if $actor}\n            <img src={$actor.img} class=\"portrait\" />\n            <span>{$actor.token ? $actor.token.name : $actor.name}</span>\n        {:else}\n            <span> UNKNOWN TARGET </span>\n        {/if}\n    </div>\n\n    {#each records as rec, i (i)}\n        <div>\n            <HarmRecord record={rec} obscure={!can_see} />\n        </div>\n    {/each}\n\n    {#if can_apply}\n        <button on:click={apply}>Apply</button>\n    {/if}\n</div>\n\n<style lang=\"scss\">\n    .portrait {\n        max-width: 32px;\n        max-height: 32px;\n        margin-right: 10px;\n    }\n    .header {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n    }\n</style>\n","<script>\n    import { setContext } from \"svelte\";\n    import * as harm from \"../../util/harm\";\n    import HarmManifestEntry from \"../components/combat/HarmManifestEntry.svelte\";\n    import { simpleUnslugifyObject } from \"../actions/util\";\n    import { showHarmApplication } from \"../../util/harm\";\n    import { TJSDocument } from \"#runtime/svelte/store/fvtt/document\";\n\n    /** @type {ChatMessage} */\n    export let msg;\n    let tjs_msg = new TJSDocument(msg);\n    let flags;\n    $: flags = $tjs_msg.flags[game.system.id] ?? {};\n\n    /**\n     * The displayed harm manifest, un-slugified\n     * @type {harm.HarmManifest}\n     */\n    let fixed_manifest;\n    $: fixed_manifest = simpleUnslugifyObject(flags.harm_manifest);\n</script>\n\n<div class=\"icon flexcol\">\n    <h1 on:click={showHarmApplication}>\n        Damage Planner\n        <i class=\"fas fa-spider\" />\n    </h1>\n    {#each Object.entries(fixed_manifest) as [actor_uuid, records]}\n        <HarmManifestEntry actor_uuid={actor_uuid} records={records} />\n    {/each}\n</div>\n\n<style lang=\"scss\">\n    h1 {\n        cursor: pointer;\n    }\n    </style>","<!-- Super simple Svelte component that takes in a prop and outputs it. -->\n<script>\n    import { TJSDocument } from \"#runtime/svelte/store/fvtt/document\";\n    import { localize } from \"../../util/misc\";\n\n    // import { fly, fade } from \"svelte/transition\";\n\n    /** @type {ChatMessage} */\n    export let msg;\n    let tjs_msg = new TJSDocument(msg);\n    let flags;\n    $: flags = $tjs_msg.flags[game.system.id] ?? {};\n\n    // Hydrate things. Don't expect these to change\n    /** @type {Roll} */\n    let roll;\n    $: roll = Roll.fromData(flags.roll_data);\n\n    /** @type {IconActor | null} */\n    let actor;\n    $: actor = fromUuidSync(flags.actor_uuid);\n\n    // Helpers for the roll\n    let total, can_crit, crit, suffix, header, pos_string, body;\n    $: {\n        total = roll.total;\n        can_crit = roll.formula.includes(\"kh\"); // kl forbids critting\n        crit = can_crit && roll.dice[0].values.filter((x) => x == 6).length >= 2; // >= 2 sixes => crit!\n        suffix;\n        if (crit) {\n            suffix = \"66\";\n        } else if (total == 6) {\n            suffix = \"6\";\n        } else if (total >= 4) {\n            suffix = \"45\";\n        } else {\n            suffix = \"123\";\n        }\n\n        header = localize(`ICON.Rolls.Narrative.Result.Brief.${suffix}`);\n        pos_string = flags.position ? `${flags.position}.` : \"\";\n        body = localize(`ICON.Rolls.Narrative.Result.${flags.subtype}.${pos_string}${suffix}`);\n    }\n</script>\n\n<div class=\"icon flexcol\">\n    {#if flags.purpose}\n        <p>\n            <strong>Goal:</strong>\n            {flags.purpose}\n        </p>\n    {/if}\n    {#if flags.position || flags.effect}\n        <h2>{flags.position ?? \"Risky\"} {flags.effect ?? \"Standard\"}</h2>\n    {/if}\n    {#await roll.getTooltip()}\n        roll.total\n    {:then tooltip}\n        {@html tooltip}\n    {:catch error}\n        err\n    {/await}\n    <h2>{header}</h2>\n    <hsep />\n    <p>\n        {body}\n    </p>\n</div>\n\n<style lang=\"scss\">\n</style>\n","// Sets up our svelte messages\n\nimport AbilityRollMessage from \"../view/chat/AbilityRollMessage.svelte\";\nimport HarmManifestMessage from \"../view/chat/HarmManifestMessage.svelte\";\nimport NarrativeRollMessage from \"../view/chat/NarrativeRollMessage.svelte\";\n\nexport class SvelteChatLog extends ChatLog {\n    // Alter update behavior so it updates props instead\n    updateMessage(msg, notify = false) {\n        if (!msg._svelteComponent) {\n            super.updateMessage(msg, notify);\n        }\n    }\n}\n\n/**\n *\n */\nexport function setupMessages() {\n    // Sets up our svelte components on messages\n    const sveltifyMessage = async (msg, html) => {\n        // Find associated flag data scoped to your module ID. This is the easiest way to determine that this message is\n        // associated with your module and has a Svelte component attached to the message content.\n        let svelte_msg_type = msg.getFlag(game.system.id, 'svelte_msg_type');\n\n        if (svelte_msg_type) {\n            // Form props and target\n            const props = { msg };\n            const target = html[0];\n\n            // Add the svelte component to the message instance loaded in client side memory.\n            if (svelte_msg_type === \"ability\") {\n                msg._svelteComponent = new AbilityRollMessage({ target, props });\n            } else if (svelte_msg_type == \"narrative\") {\n                msg._svelteComponent = new NarrativeRollMessage({ target, props });\n            } else if (svelte_msg_type == \"harm\") {\n                msg._svelteComponent = new HarmManifestMessage({ target, props });\n            }\n\n\n            // Scroll chat log to bottom.\n            setTimeout(() => ui.chat.scrollBottom(), 20);\n        }\n\n    };\n\n    // Create a svelte component when rendering new chat components\n    Hooks.on(\"renderChatMessage\", sveltifyMessage);\n\n    // Iterate over all existing chat message documents and add svelte components\n    for (const message of game.messages) {\n        const el = document.querySelector(`.message[data-message-id=\"${message.id}\"] .message-content`);\n        sveltifyMessage(message, [el]);\n    }\n\n    // Clean up / destroy the mounted Svelte component to the message instance when the chat message is deleted.\n    Hooks.on('preDeleteChatMessage', (message) => {\n        // Use svelte_msg_type to determine if it likely has a svelte component\n        // Also ensure that the Svelte component exists\n        if (message.getFlag(game.system.id, 'svelte_msg_type') && typeof message?._svelteComponent?.$destroy === 'function') {\n            // Manually destroy Svelte component when the chat message document is being deleted.\n            message._svelteComponent.$destroy();\n        }\n    });\n\n    setTimeout(() => ui.chat.scrollBottom(), 500);\n}","// Adds glossary definitions to status flags\n/**\n *\n */\nexport function enhanceStatuses() {\n    let effects = game.i18n.translations.ICON.Effects;\n    let statuses = game.i18n.translations.ICON.Statuses;\n    let glossary = game.i18n.translations.ICON.Glossary;\n    CONFIG.statusEffects.forEach((v) => {\n        let description = effects[v.name] || statuses[v.name] || glossary[v.name];\n        v.flags = {\n            [game.system.id]: {\n                description\n            }\n        };\n    });\n}\n\nHooks.on(\"dropCanvasData\", (cvs, data) => {\n    if (data.type !== \"Effect\") {\n        return;\n    }\n    // Find a target\n    const targets = cvs.tokens.placeables.filter((token) => {\n        if (!token.visible) {\n            return false;\n        }\n        return Number.between(data.x, token.bounds.x, token.bounds.x + token.bounds.width) &&\n            Number.between(data.y, token.bounds.y, token.bounds.y + token.bounds.height);\n    });\n\n    if (targets.length) {\n        let target = targets[0];\n        target.actor.createEmbeddedDocuments(\"ActiveEffect\", [data]);\n    }\n});","<svelte:options accessors={true} />\n\n<script>\n    import { ApplicationShell } from \"#runtime/svelte/component/core\";\n    import { ICON } from \"../../consts\";\n\n    export let elementRoot;\n    export let app;\n\n    const credits = [\n        {\n            name: \"Frozedon\",\n            img: \"https://avatars.githubusercontent.com/u/22649652?s=48&v=4\",\n            description: \"For creating the ICON Foe JSON Data, without which you would have to make them all yourself\",\n            link: \"https://github.com/Frozedon/IconFoeJson\",\n        },\n        {\n            name: \"Exocist\",\n            img: \"https://avatars.githubusercontent.com/u/15604711?s=48&v=4\",\n            description:\n                \"For creating the ICON Simple Worldbuilding System, without which the rest of the compendium data would not exist\",\n            link: \"https://github.com/Exocist/ICON-1.45-WIP\",\n        },\n        {\n            name: \"TyphonJS (AKA Michael)\",\n            img: \"https://avatars.githubusercontent.com/u/94969292?s=48&v=4\",\n            description:\n                \"For creating the TyphonJS library, making modern web development in foundry simple and overall development of this module a thoroughly enjoyable experience\",\n            link: \"https://github.com/typhonjs-fvtt-demo\",\n        },\n    ];\n\n    // Close this welcome message, foreevr!\n    function clear() {\n        game.settings.set(game.system.id, ICON.settings.welcome, false);\n        app.close();\n    }\n</script>\n\n<ApplicationShell bind:elementRoot>\n    <main>\n        <h1>Welcome, ICON!</h1>\n        <p>\n            This system is still very much a work in progress. Make an issue on the github for issues encountered. I\n            hope you enjoy this work, but please bear in mind that I am a solo developer doing this freely in my spare\n            time - improvements will come when they come.\n        </p>\n\n        <h2>Special thanks to:</h2>\n        {#each credits as credit}\n            <div class=\"credit\">\n                <img src={credit.img} />\n                <h3>{credit.name}</h3>\n                <p>{credit.description}</p>\n                <a href={credit.link}>{credit.link}</a>\n            </div>\n        {/each}\n        <div />\n        <button on:click={clear}>Thanks! (Do not show again)</button>\n    </main>\n</ApplicationShell>\n\n<style lang=\"scss\">\n    main {\n        text-align: center;\n        display: flex;\n        flex-direction: column;\n    }\n\n    .credit {\n        display: grid;\n        border-bottom: var(--primary-background);\n        grid-template:\n            \"img title\" 30px\n            \"img body\" 1fr\n            \"img link\" 30px / 100px 1fr;\n\n        img {\n            grid-area: img;\n            width: 100px;\n            height: 100px;\n        }\n        h3 {\n            grid-area: title;\n        }\n        p {\n            grid-area: body;\n        }\n        a {\n            grid-area: link;\n        }\n    }\n</style>\n","import { SvelteApplication } from '#runtime/svelte/application';\nimport WelcomeAppShell from './WelcomeAppShell.svelte';\n\n\nexport default class WelcomeApplication extends SvelteApplication {\n   /**\n    * Default Application options\n    *\n    * @returns {object} options - Application options.\n    * @see https://foundryvtt.com/api/Application.html#options\n    */\n   static get defaultOptions() {\n      return foundry.utils.mergeObject(super.defaultOptions, {\n         title: 'ICON.Welcome',  // Automatically localized from `lang/en.json`.\n         width: 400,\n\n         svelte: {\n            class: WelcomeAppShell,\n            target: document.body,\n            props: function() {\n               return {\n                  app: this // `this` is the SvelteApplication when invoked\n               };\n            }\n         }\n      });\n   }\n}","import { setupDocuments } from './config/documents.js';\nimport { setupModels } from './config/models.js';\nimport { setupIndexes } from './config/packs.js';\nimport { setupSettings } from './config/settings.js';\nimport { setupSheets } from './config/sheets.js';\nimport { ICON } from './consts.js';\nimport { IconActor } from './documents/actor.js';\nimport { IconItem } from './documents/item.js';\nimport { applyGlobalDragListeners } from './util/dragdrop.js';\nimport BasicApplication from './view/apps/BasicApplication.js';\n\nimport \"./icon.scss\";\nimport { SvelteChatLog, setupMessages } from './config/messages.js';\nimport { setupTransformers } from './util/nlp.js';\nimport { enhanceStatuses } from './config/statuses.js';\nimport \"./util/harm.js\";\nimport WelcomeApplication from './view/apps/WelcomeApplication.js';\n\n// Import sliding HUD (used for accuracy/difficulty windows)\n// import * as slidingHUD from \"./module/helpers/slidinghud/index.js\";\n\n/* ------------------------------------ */\n/* Initialize system                    */\n/* ------------------------------------ */\nHooks.once(\"init\", () => {\n    console.log(`Initializing ICON RPG System`);\n\n    // Register custom system settings\n    setupDocuments();\n    setupModels();\n    setupIndexes();\n    setupSettings();\n\n    // Assign custom classes and constants here\n    CONFIG.ui.chat = SvelteChatLog;\n\n    // Create an Icon namespace within the game global\n    game.icon = {\n        applications: {\n            basic: BasicApplication,\n            // playIconPlayerSheet,\n        },\n        sheets: {\n\n        },\n        entities: {\n            actor: IconActor,\n            item: IconItem,\n        },\n        helpers: {\n        },\n    };\n});\n\n// Make an awaitable for when this shit is done\nHooks.once(\"ready\", async () => {\n    console.log(`Foundry ready, doing final checks.`);\n\n    // Register sheet application classes\n    setupTransformers();\n    setupSheets();\n    applyGlobalDragListeners();\n    setupDSN();\n    setupMessages();\n    enhanceStatuses();\n\n    // Show welcome only if they haven't confirmed it before\n    if (game.settings.get(game.system.id, ICON.settings.welcome)) {\n        new WelcomeApplication().render(true, { focus: true });\n    }\n});\n\n\n/**\n *\n */\nfunction setupDSN() {\n    // Set up Dice So Nice to icrementally show attacks then damge rolls\n    if (game.modules.get(\"dice-so-nice\")?.active && !game.settings.get(game.system.id, ICON.settings.dsn_setup)) {\n        console.log(`First login setup for Dice So Nice`);\n        game.settings.set(\"dice-so-nice\", \"enabledSimultaneousRollForMessage\", false);\n        game.settings.set(game.system.id, ICON.setting_dsn_setup, true);\n    }\n}\n\n// ------------------------------------------------------------------------\n// Sliding HUD Zone, including accuracy/difficulty window\n// Hooks.on(\"renderHeadsUpDisplay\", slidingHUD.attach);\n// let openingBasicAttackLock = false;\n// Hooks.on(\"targetToken\", (user: User, _token: Token, isNewTarget: boolean) => {\n//   if (user.isSelf && isNewTarget && !openingBasicAttackLock) {\n//     // this only works because openBasicAttack is a promise and runs on a future tick\n//     openingBasicAttackLock = true;\n//     macros.openBasicAttack().finally(() => {\n//       openingBasicAttackLock = false;\n//     });\n//   }\n// });\n\n// For the settings tab\nHooks.on(\"renderSettings\", async (app, html) => {\n    // addSettingsButtons(app, html);\n});\nHooks.on(\"renderCombatTracker\", (...[_app, html]) => {\n    /*\n    html\n      .find(\".combat-settings\")\n      .off(\"click\")\n      .on(\"click\", ev => {\n        ev.preventDefault();\n        new LancerCombatTrackerConfig(undefined, {}).render(true);\n      });\n      */\n});\n\n"],"names":["fields","element","text","localize","now","hash","detach","linear","tick","init","promise","update","block","current_component","create_each_block","insert","instance","create_fragment","subscribe","run","get","document","scale","duration","ease","interpolate","options","parent","active","children","writable","draggable","cssVariables","ctx","create_if_block","s_REGEX_HTML","icon","booleanStore","dragDefault","TJSHeaderButton","storeResizing","create_if_block_1","autoClose","DialogShell","this","dispatch","create_if_block_7","create_if_block_6","create_if_block_4","create_if_block_5","create_if_block_2","create_if_block_3","boon","position","effect","i","allowDrop","Plugins.TJSKeyMaps","Plugins.TJSPasteUUID","content"],"mappings":"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","x_google_ignoreList":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,108,109,110,111,112,113]}